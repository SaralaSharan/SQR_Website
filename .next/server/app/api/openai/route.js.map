{"version":3,"file":"app/api/openai/route.js","mappings":"oFAAA,6DCAA,iEYIA,EECI,E4B06BJ,Ec96BI,iBAAU,Q1CIC,gCqBFf,EAoDA,EA4DA,EAqCA,EAqBA,EAsCA,EAqCA,EAwCA,EAkFA,EAyCA,EA2CA,EAyDA,EO/fA,EA+DA,EAmeA,EAMA,IAgkHA,EqCxkII,EAwjBA,EA+FA,EAvpBE,EAk+BF,CA1aG,CAoyBH,CArsBG,CAu6BH,CA30BG,CA0tEH,CA3+DG,CAwhEH,CA9pDG,CAy8GH,CAvuGG,CK9lDP,CL6+FO,EA6CA,GA2yDC,+N7EhwJR,IAAMA,EAAoCC,OAAOC,GAAG,CAClD,gCCtEK,mBAEP,MADA,uGAEA,CACA,WACA,mBAEA,4DACA,GACA,QAEA,cACA,6BACA,IACA,kBACA,CAAU,SAEV,MADA,mEAAmF,UAAY,EAC/F,CACA,CAEA,CAWA,WACO,aAIP,OAHA,GACA,QAEA,CACA,CACA,cAEA,oDAAyD,EAAO;AAChE,0EA0BA,UAAoB,GAAM,WAE1B,YAAsB,GAAM,aACpB,GAAM,kBAId,yDACA,MAhCA,YACA,4BAAyC,EACzC,SACA,cACA,QAEA,kBACA,CAAS,CACT,YACA,iBACA,CAAS,CACT,aACA,2BACA,cAEA,kBACA,CACA,CAAK,EACL,mBAAuB,EACvB,SACA,CAAK,CACL,EAYA,cACA,eACA,CAAK,EAEL,yBC/EA,yBACA,wBACA,qBACA,SACA,iBACA,WACA,WACA,gBACA,UACA,EAAU,CACV,gBACA,YAEA,CAEA,eACA,SACA,4BAEA,CAEA,yBACA,UACA,CACA,aACA,6BAIA,OADA,oBACA,GAIA,wBAEA,CACA,CAIO,mBACP,eACA,MACA,wDACA,uBAMA,cACA,UAAkB,IAAkB,EACpC,qBACS,CACT,CAKA,cACA,UAAkB,IAAkB,EACpC,qBACS,CACT,CACA,iDC5DA,mCACA,YACA,IACA,IACA,IACA,IACA,IACA,EACA,iBACA,MACA,wDACA,2CACA,8DAEA,SACA,iCACA,mCACA,UAEA,kDACA,CACA,CAKW,0BACX,kBAA+B,EAC/B,WACA,mBAEA,YADA,IAA4B,KAAe,IAC3C,CACA,WACA,UACA,aACA,UAEA,eACA,8BACA,iBAKA,OAJA,aAAsD,KAAe,EACrE,kDAAyG,SAAe,gBAExH,QACA,CACA,CAEA,SACA,OAA+B,IAAc,WAC7C,CACA,CACA,CAAS,CACT,WACA,UACA,cAAgC,IAAO,QACvC,QAAyB,QAAyB,IAClD,wBACa,QACb,CACA,CACA,8CACA,OACA,qBACA,aAEA,eACA,uBACA,yCACA,WACA,2BACA,mBACA,2BACA,cACA,CACA,CACA,cACA,wBAEA,iBACA,yBACA,uBACA,CACA,qBACA,0DACA,cACA,oFAEA,8BACA,wCAEA,OADA,iBAAgC,QAAW,KAC3C,aACA,KACA,UACA,QACA,CAAS,CACT,CACA,oBACA,4CAGA,OAFA,6BAA4C,QAAW,KACvD,QACA,aACA,KACA,SACA,CAAS,CACT,CACA,eACA,4CAGA,OAFA,+BACA,QACA,aACA,KACA,SACA,CAAS,CACT,CACA,CClHO,SAASC,GAAcC,CAAoB,CAAEC,CAAkB,EACpE,IAAMC,EAA0B,UAAhB,OAAOD,EAAoB,IAAIE,IAAIF,GAAQA,EACrDG,EAAW,IAAID,IAAIH,EAAKC,GACxBI,EAAYH,EAAQI,QAAQ,CAAC,KAAIJ,EAAQK,IAAI,CACnD,OAAUH,EAASE,QAAQ,CAAC,KAAIF,EAASG,IAAI,GAAOF,EAChDD,EAASI,QAAQ,GAAGC,OAAO,CAACJ,EAAQ,IACpCD,EAASI,QAAQ,EACvB,gBCXA,QACA,iBACA,eACA,kCACA,sBACA,mBACI,KAAoB,CACxB,CACA,IACA,gBACA,0DCYO,UACP,WACA,iBACA,4DAEA,wCACA,gBACA,CACA,gBACA,iBACA,4DAEA,mBACA,8CAEA,gBACA,CACA,cACA,4BACA,iBACA,gBACA,CACA,CCzCW,cACX,OACA,cAAuB,IAAqC,8BAAwD,CACpH,EADoG,oBACpG,gDACA,2EACA,CACA,SCJA,0CCeO,kBAA8B,IAAW,CAChD,eACA,sBACA,sBACA,CACA,cACA,UAAkB,IAAkB,EACpC,qBACS,CACT,CACA,cACA,UAAkB,IAAkB,EACpC,qBACS,CACT,CACA,YACA,UAAkB,IAAkB,EACpC,qBACS,CACT,CACA,CACA,QACA,6BACA,2BACA,EACA,UACmB,SAAS,GAC5B,sCAEA,MAWO,yBACP,MAmGA,EACA,GAnGA,WAXA,SACA,MACA,+CACA,sBAAoB,wBAAwC,EAAU,IAA6C,EACnH,IACA,OAFqE,CAGrE,CAEA,IAIA,MAAU,IAEV,2BAFyC,SAEzC,CACA,cAAyB,OAAe,gBACxC,UAA2B,IAAO,gBAClC,0BACA,gCACK,EAML,YAHA,IACA,sBACA,CACA,CACA,+BACQ,QAAuB,OAE/B,aADA,yBACA,GACA,2BAEA,wBACA,CAAS,CACT,CAEA,gBACA,aACA,yCACA,0BACA,iBAEA,MAA2B,QAA2B,oBACtD,UAEA,MACA,aAA6B,KAAc,EAC3C,sBACA,WACA,IACA,WACA,YAEA,CAGA,cACA,YAEA,MAAe,CJ9FR,cACP,UI6FwC,MJ7FxC,SACA,iBACA,gBACA,yBAEA,KACA,gBACA,yBAGA,wBACA,EI8EqG,EAI7D,eACxC,MACA,oBACA,UACA,wBACA,gCACA,wBAEA,CAAK,EAKL,GACA,oCACA,cACA,QACA,CAAS,EAET,oDAEA,uDACA,UACA,cACA,aAAyB,EACzB,UAD6C,UACZ,EAAyC,CAC1E,KAAiB,EACjB,UADqC,KACrC,kBACA,wBACA,yBACA,EACA,WACA,SAA8B,CAC9B,gBAAqC,CACrC,kBACA,QAA6B,IAC7B,EAEA,EAAS,EAIT,SAPgD,MAOhD,aAA6G,MAA7G,GDxJO,WAEP,MADA,OCuJ6G,GDtJ7G,KACA,6BACA,GCoJ6G,sBAC7G,MAAsB,GAAc,CACpC,UADoC,KAEpC,OACA,WACA,WACA,EAAU,MACV,CAAK,EA8DL,IA3DA,kBAGA,GADA,mDACA,CAIA,0BACA,MAAwC,GACxC,MAAmB,MADoC,EACpC,CAAS,SAAS,KAAc,UACnD,uBAAwC,UAAgB,EAAE,mBAAyB,EACnF,YACA,iCACA,uBAEA,CAAa,WACb,IACA,YAIA,MAAyC,KACzC,EAAyC,SAAwB,GADL,EACK,eAJjE,IACA,GACA,EAEiE,GACjE,EAAsC,QAAe,EACrD,SACA,yBACA,YACA,oGACA,cACA,qBACA,aACA,yGACA,CAA6B,CAC7B,cACA,2BACA,YACA,0BACA,uBACA,CAAyB,CACzB,mBACA,QACA,CAAyB,CACzB,gCAA+D,KAA2B,CAC1F,CAAqB,EACrB,aAAiC,GAAgB,WAAoB,KAAoB,sBACzF,EAAkB,OAKlB,gBACA,iBACA,CAAqB,GACrB,CACA,CAAa,CACb,CACA,qBACA,EAAK,GAEL,yBACA,mEAEA,MACA,8BAOA,2DACA,aACA,UAA+B,IAAO,IACtC,eACA,0BACA,gCACS,CAET,2BACA,uBACA,iDAOA,MAAmC,GAAa,qBAChD,GAIA,mCAEA,CAKA,+CACA,aACA,UAAgC,IAAO,IACvC,eACA,0BACA,gCACS,EAIT,yBAEA,0BACA,uBACA,qCAOA,IACA,6BACA,kCAAsD,GAAa,sBAEnE,CACA,SAAgD,GAAY,OAE5D,EAF4D,EAE5D,6CACA,KACA,MACA,iBACA,sCAA8D,EAAI,KAClE,SAEA,aACA,gEAEA,CACA,OACA,WACA,UPxQA,4BOwQ+C,IPxQ/C,8BAAgH,WOwQjE,kBAC/C,4BAEA,qCC/SA,SAEA,yBACA,yBAEA,yBACA,8BAEA,0CACA,2BACA,0BACA,kBACA,SACA,CAAK,MACL,gBACA,QAAqB,CACrB,gBACK,YACL,SAMA,OAHA,IACA,gCAAgD,GAAK,QAAQ,EAAW,GAExE,WALA,QAOA,CAAK,eACL,eACA,CAAK,CACL,CACe,SACf,qBACA,gCACA,iBACA,aACA,4BACA,eACA,sBAEA,QACA,CACA,sBACA,+EACA,CACA,eAGA,GAFA,gBACA,gDACA,yBACA,wCACA,eACA,4BAEA,sBAEA,4EACA,iFAIA,GAHA,uCACA,sCAAsD,uCAAsC,EAE5F,GACA,+CACA,uBAAoC,EAAQ,KAAK,EAAO,EAAE,MAAiB,EAC3E,IACA,sDAEA,EAAU,QACV,0CAEA,sBACA,IACA,IACA,kDAEA,MAAkC,IAAQ,sCAA2C,EAAO,EAC5F,MACA,MACA,UACsB,YAAwB,KAAe,UAC7D,sCACsB,YAAwB,KAAe,OAC7D,sEACsB,SAAwB,KAAe,OAC7D,kCACsB,SAAwB,KAAe,WAC7D,cAGA,gBAAiH,MAAjH,2BAAkG,KAAe,qDACjH,CAAiB,GAGjB,IACA,qDAGA,CACA,oBACA,kBACA,CACA,0BACA,SAOA,GANA,sBACA,EACA,GACA,IACA,+BAEA,UACA,kBACA,IACA,gCAEA,MACA,CACA,YAAuB,yBAAiC,KACxD,4BACA,IACA,kBAA2D,mBAAmB,qCAAqC,0CAA0D,GAC7K,cACA,qBAEA,MACA,WACA,CACA,CAAiB,EACjB,mBACA,4CACA,yBACA,CACA,SACA,0CAAkE,SAAW,GAE7E,CAAc,SACd,4CACA,CACA,EACA,CACA,gBACA,MACA,WACA,MAAgB,2CAAqD,EACrE,OAAyB,KAAoB,OAC7C,YAEA,iBAIA,OAHA,IACA,4BAEA,KAKA,8BACA,qDAAyI,KAAe,qDAGxJ,gCACA,IACA,iBAOA,iBAA2C,mBAAmB,qBAAqB,EAAI,GACvF,aACA,SACA,gBACA,OACA,sCACA,CAAyB,KAA2B,kCACpD,CAAqB,CACrB,KAdA,CACA,YACA,sBACA,WACA,UACA,CAUA,CAAiB,EACjB,mBACA,4CACA,yBACA,CACA,kBAIA,OAHA,IACA,wCAAgE,EAAI,cAAc,aAAmB,KAErG,KAEA,SAEA,MADA,8BACA,qCAAmE,SAAW,GAE9E,qBACA,gBAA+C,KAAe,OAI9D,MAHA,iBACA,QACA,CAAqB,EACrB,6BAGA,YAAoC,KAAe,OAEnD,aADA,YACA,OACA,oBACA,eAIA,oBA1MA,wBA2MA,uBACA,GACA,QAGA,oCAAwE,KAAc,mCACtF,EACA,IACA,yCAA6D,EAAI,cAAc,aAAmB,YAAY,sBAA2B,iBAAiB,GAAY,QAAQ,4BAAwC,YAAY,2BAA+C,GAEjR,GACA,qBAEA,CAAc,SAEd,IACA,iDAEA,CAEA,cACA,CACA,gBACA,aACA,YAAgB,gCAAuC,EACvD,MACA,kBACA,IACA,4BAEA,MACA,CAKA,GAJA,kBACA,QACA,uBACA,CAAS,EACT,mBACA,IACA,gBACA,6BACA,2CAEA,yCACA,cAnPA,yBAmPA,kCAEA,sBACA,KAGA,WACA,CAAiB,EACjB,IACA,2BAQA,qBAA2C,mBAAmB,qBAAqB,EAAI,GACvF,cACA,SACA,gBACA,WACA,qCACA,CAAqB,CACrB,OACA,KAdA,CACA,YACA,sBACA,WACA,UACA,CAUA,CAAiB,EACjB,mBACA,4CACA,yBACA,CACA,SAEA,MADA,gCACA,0BAAwD,SAAW,GAEnE,IACA,mDAAuE,EAAI,cAAc,aAAmB,YAAY,SAAY,EAEpI,CAAc,SAEd,IACA,+CAEA,EAGA,CACA,2BC1SO,QACP,QACA,CCEe,UACf,eACA,aACA,+BACA,mCACA,uCACA,kDACA,qBACiB,IACjB,YACA,aAF4B,qCAIZ,EAAW,IAAO,IAAQ,mBAAf,EAAe,WAA2C,QAAO,EAC5F,MACA,MACA,UACsB,YAAwB,KAAe,UAC7D,sCACsB,YAAwB,KAAe,OAC7D,sEACsB,SAAwB,KAAe,OAC7D,kCACsB,SAAwB,KAAe,WAC7D,cAGA,iDAAkG,KAAe,qDACjH,CAAiB,GAEP,YACV,qDAEA,CACA,qBACA,0BACA,SAOA,GANA,sBACA,EACA,GACA,YACA,+BAEA,aAGA,gBACA,MAAyB,GAAY,YACrC,4BACY,GAAY,UACxB,CACA,CACA,oBACA,MAiIA,EAhIA,WACA,MAAgB,sDAAsD,EACtE,EAA8B,MAAX,EAAW,OAAoB,EAAW,OA6H7D,GA5HA,QAD8B,EAC9B,EACA,KAF6D,GAE7D,qBA2HA,mDAAyG,KAAe,8DAA4G,KAAe,YAEnP,EACA,yCAAiH,KAAsB,EAIvI,GAHA,oBACA,iBAEA,2BACA,WACA,MACA,OAAwC,MAAZ,GAAY,OAA2D,EAA3D,OAA+C,GAAY,oCAAuF,MAAZ,GAAY,OAAoB,EAApB,CAAgC,sEAC1N,CAAiB,EAKjB,WAGA,EAAU,sDAAwG,KAAe,QACjI,IACA,SACA,MACA,CACA,SACA,YACA,oCAGA,CAAoC,MAAZ,GAAY,OAA2D,EAA3D,OAA+C,GAAY,oCAAuF,MAAZ,GAAY,OAAoB,EAApB,CAAgC,sEACtN,CAAa,GAIb,WAGA,cACA,CACA,gBACA,aACA,YAAgB,GAAa,EAQ7B,GAPmB,MAAX,GAA+B,EAAW,OAClD,QACA,SAFmB,GAA+B,CAElD,UACA,CAAS,EACT,YACA,qBAEA,qBACA,YAA0B,KAAe,YACzC,0BAAiD,EAAI,OAAQ,KAAoB,WACjF,qBAAgC,YAAY,KAC5C,kCACA,OACA,kBACA,gBACA,iBACA,mBACA,CACA,6CAAgE,KAAgB,2BAChF,EAAU,gBAAuB,KAAe,iBAAwB,KAAe,WACvF,eAA4C,KAAe,UAC3D,sBAAiD,EAAI,SAAoB,KAAoB,UAAY,KAAoB,QAO7H,GANA,oBAAgC,YAAY,KAC5C,kCAEA,GACA,4CAA4D,EAAI,EAAE,sBAAoC,KAAmB,CAAG,KAAU,CAAG,KAAgB,CAAC,IAAe,KAAoB,UAAY,KAAoB,gDAE7N,0BAAwD,KAAe,WACvE,OACA,kBACA,gBACA,sBACA,mBACA,CACA,6CAAoE,KAAgB,oBACpF,CACA,EAAU,gBAAuB,KAAe,QAChD,yBAAmD,KAAoB,OACvE,qBAAgC,YAAY,KAC5C,0CACA,KACA,YACa,EACb,EACA,CACA,iBACA,UACA,KAAiB,KAAoB,OAGrC,OAAuB,SAAS,iDAChC,MAAiB,KAAoB,OACrC,OAAuB,SAAS,8BAChC,MAAiB,KAAoB,OACrC,KAAiB,KAAoB,UACrC,KAAiB,KAAoB,WACrC,OAAuB,SAAS,4BAChC,SACA,0CAA8D,EAAK,EACnE,CACA,CACA,gBChSO,QACP,WACA,MACA,OACA,QACA,CACO,eAEP,iEACA,CCLA,IAAME,GAAa,uBAEZ,SAASC,GAAeC,CAAa,EAK1C,OAJIC,GAA2BD,IAC7BA,GAAQE,CAD6B,QDGlC,GACP,ICJgCD,EDIhC,IACA,aCJ+CC,EDI/C,WAEA,GADA,8BACA,CAEA,mBACA,KACA,CAEA,cACA,2CAAuD,EAAK,oFAI5D,OAFA,EAAwB,OAAgB,IAExC,GACA,UAGA,EADA,QACA,IAAuC,EAAiB,EAExD,QAEA,KACA,YAEA,WACA,2CAA+D,EAAK,+DAEpE,+CACA,KACA,aAEA,QACA,KACA,gBAEA,mBACA,eACA,2CAA+D,EAAK,kEAEpE,oCACA,KACA,SACA,2CACA,CACA,OACA,oBACA,kBACA,CACA,ECpDgDF,GAAOG,gBAAAA,EAG9CL,GAAWM,IAAI,CAACJ,EACzB,CC+YyC,YAAW,CAAlC,OAAOK,aAGtB,CAAC,OAAQ,UAAW,mBAAmB,CAAWC,KAAK,CACtD,GAA2C,YAC5C,OADoBD,WAAW,CAACE,EAAO,CAGnC,OAAMC,WAAoBC,MAAO,CE9Y7B,eACX,4CACA,CCpBW,SACX,UAGA,iCAIA,GACA,wBACA,CAUA,OACA,QAIA,wBACA,eAEA,SADA,kFAGA,SADA,kFAHA,QAMA,CAMA,SACA,mBACA,CAGA,QACA,kBACA,CACA,eC/BO,UACP,gBAAkB,kOAAuN,EACzO,WACA,oBACA,6CACA,+BACA,yCACA,aACA,KAqBU,GACV,qDAtBA,CAEA,WACA,8BACA,gBAEA,OACA,GACA,8CAEA,EAAsC,IAElB,GAAU,QAFuB,GAEvB,EAC9B,iBACA,CAAiB,UACjB,GACA,yCAEA,EAAsC,IAGtC,CAGA,CAHU,IAHsC,GAMhD,+BAEA,uDAEA,WACA,oBACA,qEAIA,KADA,WACA,GACA,sBACA,uBACA,mCACA,2BACA,2BAAqC,GAAuB,wBAC5D,2BACA,SACA,EAA2B,KAA2B,0FACtD,+BAEA,sBAAiD,KAAkC,KAAiC,KAAsC,0FAC1J,KAA6C,KAAkC,cAE/E,GACA,0BACA,MACA,KACA,cACA,gBACA,kBACA,qBACA,kBACA,qBACA,EAAa,CAEb,CACA,6BAGA,qEAGA,iCAAoE,GAAO,aAE3E,MADA,4BAEA,CACA,kBACA,WHpFI,SGoFmC,QHpFlBL,IAAI,CGoF+B,KHpFpBL,GGoFoB,GHnF/C,QADyCA,CGoFM,EHlFhDW,MGkFgD,EHjF9C,SACAC,CAAAA,EAAAA,GAAAA,CAAAA,CAAkBA,CAACD,EGiF7B,CACA,oBACA,OACA,sEACA,CACA,cACA,4BACA,oBACA,GACA,QAEA,sBACA,YACA,IACA,oBAEA,CACA,CAAS,EAET,OADA,oBACA,CACA,CACA,uBACA,QACA,sFACA,CAEA,6BAAyC,EAIzC,SACA,kBACA,kBACA,WAEA,wCACA,aACA,KACA,IACA,mCACA,SACA,oBACA,oBACA,YAEA,UACA,mBACA,SACA,CAAiC,GAEjC,CACA,CAAqB,GAErB,mBAEA,oCACA,oBAEA,IACA,eACA,WACA,YAGA,WACA,CAAkB,SAClB,uCACA,CACA,EAAc,uCACd,aAEA,aADA,iBACA,YACA,SACA,IACA,kBACA,UAAuC,EAAI,GAAG,kCAC9C,mBACA,EAEA,gBAEqB,YAAc,EACnC,CAEA,EAAc,8CACd,aACA,wBACA,uBACA,oBACA,EACA,EACA,YACiB,CACjB,EAAc,6BACd,eACA,kBAGA,uCAAkD,oDAA2E,WAC7H,yCACA,sBAvEA,KAyEA,6BACA,EACA,SACA,EACA,OACA,WACA,cACA,WACA,iBACA,YACA,QACA,EACA,CAC+C,MAC/C,EAGA,kBACA,OAJA,EAIA,wCAHA,sFAIA,CAIA,CAJU,KAAK,CAMf,CAHS,GAGT,SACA,QAwDA,EACA,EAtDA,+BAA8C,KAAoB,QAClE,MAAkC,IAA4B,YAC9D,IAAoD,SAAwB,SAC5E,MACA,qBACA,6BAAkF,KAAe,OACjG,OACA,WACA,QACA,mBACA,aACA,CAEA,CACA,CAGA,gDAAiE,KAAoB,2DACrF,YAEA,eAAgB,GAAa,EAC7B,+BAA4D,KAAoB,QAChF,WACA,eACA,wDACA,sDAA6H,KAAe,QAM5I,GALA,IACA,cACA,eACA,CAEA,SACA,MACA,0DACA,CAAa,EACb,YAEA,wBAEA,MADA,mEACA,EACA,eACA,OACA,UACA,OACA,KAA0B,KAAe,OACzC,OACA,YACA,CAAiB,CACjB,+DACA,YACA,CACA,CACA,iCAAyD,GAAO,IAkChE,MA/BA,sCACA,KACA,KAAmC,KAAc,EAGjD,UADA,6HAA8L,KAAoB,uBAClN,oDAEA,GACA,IACA,UACA,gBACA,kBACA,cACA,YACA,GAEA,wDAMA,GACA,UACA,WACA,gBACA,kBACA,YACA,EACA,uBAEA,CACA,CAEA,iBAKA,gDAAyE,KAAe,QACxF,MAAkC,IAA4B,YAC9D,IAA6D,SAA2B,SACxF,GACA,gBAEA,CACA,2DACA,oCAEA,+BACA,iBAEA,wCACA,YACA,mFAAuG,GAAU,SAEjH,MACA,CACA,IACA,KAGA,sCACA,2BAA2C,GAAO,iBAElD,uDACA,CAAU,SACV,wDACA,CACA,CACA,CC5VO,SAASE,GAAgB,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BAkMA,CAlMA,IACA,OAIA,wCAEA,gCAAsD,EAAI,QAC1D,SACA,aAIA,2CACA,iBAEA,GACA,SAEA,CACA,CAAK,GAAI,EAGT,gBACA,EAjDA,CACA,SACA,iBACA,GAyNA,sCAnQO,WAGP,YACA,MAA2B,YAAQ,WAEnC,aADA,gBACA,uBACA,UAA8C,KAAuB,eAAmB,KAAuB,EAC/G,MAA2D,IAA+B,eAAmB,IAA+B,EAC5I,gDACA,kBAGA,MAAkB,aAAS,GAC3B,EACA,EAoPA,WACA,+BApPO,gBACP,eACA,wCAMA,EALA,aAAgB,YAAmB,YACnC,MAA6B,WAAoB,EAAE,EAAM,GACzD,GACA,OAA6B,EAAW,IAGxC,WAEA,EADA,iBACA,6CACU,EACV,sBAEA,GAEA,mBACA,CACA,QACA,GAgOA,MACA,EACA,EChO8B,CAC9B,qCACA,sCACA,4BAEA,WAAwB,CAExB,gBACA,CAAS,EACgB,4BAAoC,GAAsB,yBACnF,sBACA,MAAoC,GAIpC,GACA,SALmD,kBAMnD,CACA,UACA,SAA0B,CAC1B,gBAAiC,CACjC,QAT6B,KAU7B,cAVgD,CAUhD,GACa,CACb,YACA,2BACA,YACA,0BACA,wBACA,cACA,aAAiC,KAA6B,UAC9D,EAAsC,CACrB,CACjB,GAFqF,KAErF,GACA,wDACA,CACA,EAEA,qCACA,GRhEA,oBQkEA,CAmBA,OAlBA,+BACA,sCAEA,4BACA,OAQA,e1BtFO,cACP,K0BoFmD,C1BpFnD,qBACA,UACA,GAEA,CAAK,EACL,uBACA,E0B8EmD,8BACnD,CACA,gBACA,wBACA,kBACa,EATb,oCAWA,CACA,CACA,iDC5GA,qBACA,kBAEA,yBASA,aACA,OACA,UACA,QACG,EACH,SACA,WACA,YACA,YACA,CAMA,qBACA,wBACA,CACA,sBACA,oBACA,8EAQA,SACA,OACA,eACA,qBAEA,CACA,EACA,KACA,UAGI,GAAI,kBACR,sBAAiC,GAAK,EACtC,IADqC,MACrC,QAEA,oBACA,aACA,UACA,MACA,oBACA,aACA,kBACA,eACA,QACA,iCACA,SACA,SACA,QAEA,OACG,EACH,OAAY,IAAI,sBAAkB,EAClC,WACA,WACA,yBACA,kBACA,uBACA,oBACA,mBACA,WACA,CACA,qBACA,yBACA,CAIA,yBACA,oCAAoD,IAAI,8VACxD,CAIA,SACA,OACA,eACA,qBACA,aACA,yCACA,2BACA,qCACA,+BACA,iBACA,6BACA,eAEA,CACA,EACA,KAGA,mCACA,sBAAiC,GAAM,EACvC,kBAEI,GAAsB,iBAE1B,OAF0B,KAE1B,SAAgB,yBAAkC,EAAI,EACtD,OAAY,kBAAsB,EAClC,UACA,CACA,qBACA,yBACA,CAIA,mCACA,sCACA,CACA,EAIA,sBACA,QACA,gBAEA,mBACA,EAEA,mBACA,UAEA,iBACA,CAdA,KAiBA,iCACA,sBAAiC,GAAM,EACvC,kBAEA,oBACA,aACA,UACA,QACA,WACG,EACH,OAAY,0BAA6B,EACzC,WACA,eACA,CACA,qBACA,yBACA,CACA,EACA,KAGA,+BACA,sBAAiC,GAAM,EACvC,kBAEA,oBACA,aACA,SACA,UACA,QACG,EACH,OAAY,mCAAyC,EAAQ,UAAU,EACvE,WACA,aACA,CACA,qBACA,yBACA,CAIA,+BACA,oDACA,CAIA,SACA,OACA,eACA,qBACA,iBACA,kBACA,CACA,CACA,EACA,KAGA,qCACA,sBAAiC,GAAM,EACvC,kBAEA,oBACA,aACA,OACA,oCAAwC,kBAAqB,GAC1D,EACH,OAAY,kBAAsB,EAClC,WACA,WACA,CACA,qBACA,yBACA,CAIA,qCACA,qDAKA,SACA,OACA,eACA,qBACA,iBACA,eAEA,CACA,EACA,KAGA,2BACA,sBAAiC,GAAM,EACvC,kBAEA,oBACA,kBAAgB,UAAa,EAC7B,OACA,QACA,sCAA6C,EAAK;AAClD,iBAAiB,MAAuB,EACxC,OACA,CAAK,EACL,WACA,WACA,CACA,qBACA,yBACA,CAIA,2BACA,4EAKA,SACA,OACA,eACA,qBACA,iBACA,iBACA,oBAEA,CACA,EACA,KAGA,4BACA,sBAAiC,GAAM,EACvC,kBAEA,oBAEA,qBAAgB,EAAS,EACzB,OAAY,kBAAsB,EAClC,UACA,CACA,qBACA,yBACA,CAIA,4BACA,sCACA,CACA,EACA,KAKA,WADA,mBAAiC,MAAM,cAwBvC,WADA,mBAAkC,MAAM,qBAxBxC,IA2DA,yBACA,sBAAkC,GAAO,EACzC,kBAEA,oBACA,aACA,eACA,UACA,YACA,qBAAyB,EAAU,IAAI,EAAQ,EAC5C,EACH,OAAY,iBAA0B,EACtC,WACA,eACA,gBACA,CACA,qBACA,yBACA,CAIA,6BACA,iGAKA,SACA,OACA,eACA,qBACA,iBACA,qBACA,yBAEA,CACA,EACA,KAGA,+CACA,sBAAkC,GAAO,EACzC,kBAEA,oBACA,eACA,OACA,QACA,4DAAmE,YAAkB,SAAS,UAAgB,yBAAyB,wBAA8B,uBAAuB,iBAAuB,uBAC9M,EACL,WACA,yBACA,uBACA,iDACA,qBAEA,qBACA,yBACA,CAIA,+CACA,0OACA,CAIA,SACA,OACA,eACA,qBACA,iBACA,uBACA,qBACA,+CACA,mBAEA,CACA,EACA,KAGA,gCACA,sBAAkC,GAAO,EACzC,kBAEA,sBACA,mBAAgB,UAAc,EAC9B,OACA,QACA,0CAAiD,kBAAsB;AACvE,iBAAiB,MAAuB,EACxC,OACA,CAAK,EACL,WACA,YACA,CACA,qBACA,yBACA,CAWA,aACA,QACA,QACG,EACH,mDAAgH,UAAc,CAC9H,CAIA,gCACA,sCACA,CAIA,SACA,OACA,eACA,qBACA,iBACA,iBACA,iBAEA,CACA,EACA,KAIA,0CACA,sBAAkC,GAAO,EACzC,kBAEI,GAA6B,iBACjC,cADiC,aACjB,EAAe,EAC/B,OACA,QACA,YAAmB,EAAc,gCAC5B,EACL,WACA,oBACA,CACA,qBACA,yBACA,CAIA,0CACA,yEAKA,SACA,OACA,eACA,qBACA,iBACA,iCAEA,CACA,EAIA,sBACA,wEAGA,iBACA,YAEA,oBACA,wBACA,oCAIA,CAhBA,KCrhBA,iBACA,QACA,SAEA,MACA,UAEA,+BAEA,QACA,ECiGA,uBCnHA,2BACA,cACA,MACA,OACA,SACA,EDNA,SAAS,CAAY,EACrB,KCK6B,CDJ7B,EACA,EACA,EACA,EALqB,EAOrB,EAEA,OADA,IACA,CACA,KAYA,gBA+FA,EA9FA,UACA,IA6FA,EA7FA,EA8FA,uCA7FA,uBAEA,KACA,eACA,IACA,KACA,eASA,EARA,IACA,aACA,IAEA,MAEA,SACA,IAEA,YAAyC,SAAkC,IAE3E,MADA,UACA,IACA,MACU,UACV,KACA,OACU,UACV,QAGA,QACA,MACA,IACA,KACA,CACA,CADQ,CACR,EACA,KAEA,SASA,SACA,UACA,aACA,GACA,aACA,KACA,gBACA,kBAEA,CAAS,EAET,KACA,UAEA,SACA,MACA,CACA,UACA,uBACA,IAEA,EADA,EACA,EACM,eACN,IAEA,IAEA,UACA,MACA,4BACA,cACA,iCACM,eACN,SACM,8BAEA,iBACN,qBACA,iBACA,GACA,0BACA,OACA,CAAS,CAET,OATA,GAUA,EAtDA,SACA,MACA,CACA,MACA,KACM,KACN,cAEA,EAzDA,OACA,EACA,aACA,KACA,KACA,IACA,KACA,SACA,SACA,IACA,CA8FA,EC7G6B,IAC7B,kBACA,YAEA,CAAS,CACT,CAAO,CACP,aACA,SACA,CACA,CAAK,CACL,CACA,CChBA,kBACA,gBACA,SACA,KACA,gBACA,CAAK,CACL,GAEA,CAgCA,eACA,SAIA,OAHA,0BACA,MACA,CAAG,EACH,CACA,CAKA,SACA,SACA,SACA,4EACA,gBACA,CAAE,EAAI,IACN,MAAoB,GAAc,KAClC,MADkC,GAClC,EACA,SAEA,iBACA,UAAc,GAAoB,CAClC,gBADkC,KAElC,0BAAiC,EAAU,sCAAsC,EAAS,IACrF,EAEL,aAAsB,EAAO,EAAE,EAAU,EAAE,KAAgB,GAE3D,QAiBA,eACA,2EACA,CAqGA,yCA4BA,aACA,QACA,SACC,EACD,MA3BA,iBA2BA,GA3BA,OA2BA,GA3BA,MA2BA,GA3BA,yBA2BA,KA9BW,iBASX,IACA,MAoBA,EApBA,aACA,kBAA8B,yBAAoC,CAAI,yBACtE,CAAG,EAmBH,IACA,oBACA,OAAe,oBAEf,oBACA,aACA,SAEA,OACA,WACA,MAAa,GAAmB,MAAQ,eAAR,CAAQ,MAA4B,CACpE,CACA,CAAI,SACJ,OACA,WACA,MJ2QuB,GI3QS,YAAQ,UAAqB,CAC7D,CACA,CACA,CAoBA,SAAS,GAAa,CACtB,OACA,OAFsB,CAEtB,CACC,EACD,IACA,MAAkB,QAAgB,IAClC,WACA,OACA,WACA,OACA,EAEA,iBAA+B,WAAe,CAC9C,CAAI,SACJ,OACA,WACA,MAAa,GAAc,0BAAuC,GAAc,MAAG,KAAH,GAAG,EAAoB,CACvG,CACA,CACA,CACA,eACA,IAEA,OADI,QAAgB,IACpB,EACA,CAAI,SACJ,QACA,CACA,CAcA,4BACA,UACA,MACA,UACA,OACA,wBACA,4BACA,cACA,QACC,OACD,MACA,SACA,kCACA,KACG,CACH,MACA,0BACA,QACA,CAAG,CACH,wBACA,4BACA,cACA,OACA,CAAC,EACD,UACA,MACA,YAAc,CACd,OACA,4BACA,wBACA,cACA,aACC,IACD,IACA,iBACA,cACA,QA1CA,mBACA,eAyCA,GAzCA,0BA0CA,eACA,QACA,CAAK,EACL,QACA,UACA,MACA,IACA,WACA,WACA,MACA,2BACS,CACT,CAAQ,SACR,UAAmC,GAAY,kBAC/C,OAEA,WAAkB,GAAY,CAC9B,QAD8B,mCAE9B,QACA,oBACA,MACA,kBACA,2BACS,CACT,CACA,cAEA,IACA,gBACA,WACA,MACA,2BACO,CACP,CAAM,SACN,uBACA,QAAmC,GAAY,mBAC/C,OAGA,WAAgB,GAAY,CAC5B,QAD4B,wCAE5B,QACA,oBACA,MACA,kBACA,2BACO,CACP,CACA,CAAI,SACJ,SACA,QAEA,uDACA,cACA,WACA,UAAkB,GAAY,CAC9B,kCAA6C,UAAc,EAC3D,QACA,MACA,2BACA,cAEA,CAAS,CAET,CACA,OACA,CACA,EA6DA,sBAAiE,EAAU,IAC3E,YACA,gBACA,UAAc,GAAsB,EAAG,EAEvC,OACA,aAHoC,GAGpC,EACA,gEAA8E,IAAuB,YACrG,OADqG,aACrG,CACA,gBAAoB,EAAM,IAC1B,cAGA,UACY,GAAa,CACzB,OACA,QACA,CAAa,EAEb,CACA,CAAO,EAEP,CACA,EA4BA,sBAA6D,4BAAkC,IAC/F,qBACA,EAAuB,GAAa,CACpC,OACA,OAFoC,CAGpC,CAAG,EACH,QACA,cACA,UAAc,GAAa,CAC3B,QAD2B,wBAE3B,cACA,oBACA,kBACA,eACA,MACA,mBACA,CAAK,EAEL,OACA,kBACA,cAEA,EAGA,MAAM,OAAU,KAAG,WAMnB,eACA,SACA,YAAkB,WAAkB,IACpC,8BAEA,YACA,CC3iBO,mEAaA,IACP,YACA,oBACA,eACA,uBACA,mBACA,gCACA,sBACA,uCACA,6BACA,qBACA,gBACA,cAAmB,CACnB,iBACA,uBACA,yBACA,mBACA,6BACA,wCACA,kBACA,EACO,yBACP,CACA,MACA,MACA,EACA,CACA,MACA,KACK,CCzCE,OACP,MAAqB,GAAiB,GACtC,WADsC,EACtC,KACA,wCACA,WACA,OACA,KACA,cACA,oBACA,yDACA,OACA,CACA,WACA,wCAEA,iBACA,CAAa,CACb,EACA,CACA,GCnBA,YACA,mBAEA,WADA,cAKA,cAHA,YACA,aACA,EAEA,kBACA,SACA,eACA,OAEA,QACA,EACA,yBACA,0DACA,KACA,eACA,UAEA,wBACA,EACA,kBACA,gCACA,YACS,EAET,4CACA,kBACA,IACA,SACA,eACA,2CACA,UAGA,QACA,EACA,eACA,eACA,QACA,QAGA,EACA,gDACA,uBACA,sDAMA,aALA,oBACA,SACA,8BAAyD,EAAI,MAC7D,OACA,EAEA,+BACA,mBACA,aAEA,CAEA,CAAC,UAAoB,EAGrB,CAMC,SAAgC,EANjC,mBACA,EACA,KACA,KACA,EAGA,sBACA,SACA,MACA,SACA,UACA,QACA,UACA,OACA,SACA,SACA,WACA,YACA,OACA,QACA,SACA,UACA,UACA,OACA,QACA,MACA,MACA,EACA,OAEA,OADA,UAEA,gBACA,wBACA,SACA,qBACA,SACA,qCACA,UACA,sBACA,WACA,uBACA,SACA,qBACA,SACA,qBACA,SACA,oBACA,gBAEA,YACA,eAEA,WACA,2BACA,SACA,2BACA,kBAEA,6CACA,cAEA,6CACA,cAEA,+CACA,eAEA,gBACA,SACA,kBAEA,EAEA,kBACA,eACA,kBACA,SACA,gBACA,8BACA,qBACA,oBACA,oBACA,sBACA,eACA,iBACA,YACA,UACA,6BACA,kBACA,aACA,CAKA,wBACA,aACA,mBAEA,eACA,QACA,eACA,kBACA,gCAEA,wBACA,mCAEA,2BACA,sBAEA,8BAGA,iBAEA,qBACA,aACA,CACA,UACA,SACA,YACA,kBAEA,GAA8B,YAC9B,MACA,sBACA,4BACA,0BAEA,kCACA,0BAEA,gCACA,yBAEA,qBACA,yBAEA,CACA,QACA,IACA,uBACA,gBACA,qBAYA,YAAqD,YACrD,yBAXA,YAAqD,YAarD,OACA,GACA,CACA,CAEA,EAEA,OADA,QACA,CACA,CACA,iBACA,sBACA,+BAA+C,EAAM,EAErD,CACA,WACA,oBAEA,cACA,4DACA,CACA,cACA,8BAEA,wBACA,SACA,KACA,yBACA,iBACA,8BACA,yBAGA,aAGA,kBAAiB,gBACjB,CACA,iBACA,qBACA,CACA,CACA,aACA,UAIA,eACA,MACA,eACA,qBAEA,EADA,0BACA,WAGA,YAAsC,WAAe,aAAa,WAAe,EAEjF,KACA,yBACA,qCAAyD,mDAA2D,EACpH,KACA,2BACA,oCAAwD,0BAAkC,EAC1F,KACA,uBACA,kBACA,KACA,qCACA,2CAA+D,wBAA+B,EAC9F,KACA,4BACA,kCAAsD,wBAA+B,cAAc,WAAe,GAClH,KACA,2BACA,+BACA,KACA,6BACA,iCACA,KACA,sBACA,iBACA,KACA,wBACA,8BACA,2BACA,kCAA8D,sBAA0B,GACxF,wCACA,MAAqC,GAAS,oDAAoD,uBAA0B,GAG5H,4BACA,qCAAiE,wBAA4B,GAE7F,0BACA,mCAA+D,sBAA0B,GAGzF,4BAIA,EADA,uBACA,WAAqC,aAAiB,EAGtD,UAEA,KACA,mBAEA,EADA,iBACA,sBAAgD,sDAAsE,EAAE,WAAe,YACvI,kBACA,uBAAiD,iDAAiE,EAAE,WAAe,cACnI,kBACA,kBAA4C,QAC5C,oBACA,YACA,4BACA,gBAA0C,EAAE,UAAc,EAC1D,gBACA,gBAA0C,QAC1C,oBACA,YACA,4BACA,gBAA0C,EAAE,4BAAgC,EAE5E,gBACA,KACA,iBAEA,EADA,iBACA,sBAAgD,qDAAqE,EAAE,WAAe,YACtI,kBACA,uBAAiD,iDAAiE,EAAE,WAAe,cACnI,kBACA,kBAA4C,QAC5C,UACA,YACA,wBACA,aAAuC,EAAE,UAAc,EACvD,kBACA,kBAA4C,QAC5C,UACA,YACA,wBACA,aAAuC,EAAE,UAAc,EACvD,gBACA,gBAA0C,QAC1C,UACA,YACA,2BACA,gBAA0C,EAAE,4BAAgC,EAE5E,gBACA,KACA,gBACA,kBACA,KACA,oCACA,6CACA,KACA,yBACA,kCAAsD,aAAiB,EACvE,KACA,oBACA,0BACA,KACA,SACA,iBACA,gBACA,CACA,eAAa,EACb,EAEA,MAIA,cACA,SACA,CAEA,WACA,SAAY,kCAAmC,EAC/C,uBACA,GACA,KACA,MACA,EACA,sBACA,OACA,KACA,OACA,iBACA,EAEA,SAKA,aAJA,EACA,eACA,QACA,UAEA,YAAwC,iBAAkC,UAE1E,OACA,KACA,OACA,SACA,CACA,EAEA,iBACA,WACA,MACA,YACA,YACA,YACA,WACA,4BACA,iBACA,EACA,iBACA,eACA,CAAK,EACL,uBACA,CACA,SACA,cACA,kBACA,CACA,QACA,sBACA,oBACA,CACA,QACA,wBACA,sBACA,CACA,uBACA,SACA,gBACA,wBACA,SACA,qBACA,UACA,eACA,CACA,OAAiB,uBACjB,CACA,mCACA,SACA,gBACA,kBACA,gBACA,QACA,MACA,OACA,CAAa,CACb,CACA,8BACA,CACA,4BACA,SACA,gBACA,QAAoB,WAAa,EACjC,yBAEA,qBADA,SAGA,qBACA,UACA,oBACA,UACA,uBACA,iCACA,oBAEA,CACA,OAAiB,uBACjB,CACA,CACA,sBACA,gBACA,CAAC,EACD,QAA4B,yBAC5B,QAAyB,wBAAwB,CACjD,2BACA,yBACA,yBACA,wDAiBA,qBACA,gFACA,wIACA,oDACA,CAEA,uBACA,6DACA,gFACA,uIACA,kDACA,CAEA,oDAMA,YACA,0CAAsE,GAAU,MAChF,4DACC,UAA8B,CAG/B,UACA,qBACA,oBACA,cACA,YACA,aACA,WACA,CACA,WASA,OARA,0BACA,2BACA,kDAGA,gDAGA,iBAEA,CACA,eACA,SACA,OAAiB,yBAGjB,2BACA,yDAEA,OACA,WACA,YACA,eACA,mBACA,8BAEA,OADA,cACA,YACa,CAGb,EACA,eACA,MACA,SACA,aAAY,uDAA4D,EACxE,aACA,gHAEA,EACA,CAAiB,0BAcjB,CAAa,SAbb,QACA,QACA,YAAgB,GAAU,QAC1B,8BACA,CAAqB,kCAErB,gBACA,CAAqB,6DAErB,wBACA,CAAqB,wBACrB,CAAiB,4DACjB,EACa,cACb,CACA,SACA,kBACA,6BAEA,YACA,iBACA,CACA,qBACA,WACA,uBACA,YACA,sBACA,kCACA,YACA,gBACS,CAET,uBACA,OACA,cACA,KACA,uBACA,YACA,sBACA,kCACA,YACA,gBACa,CAEb,CACA,cACA,qBACA,SACA,sDAEA,QACA,CACA,eAEA,uBADA,eAEA,CACA,WACA,0BACA,aACA,aACA,eAEA,eACA,MACA,OACA,QACA,UACA,uDACA,6CACa,CACb,iCACA,kCACA,YACA,OACA,gBACA,EACA,wBAAyC,uBAAmC,EAC5E,cACA,CACA,eACA,QACA,OACA,QACA,UACA,gCACa,CACb,QACA,kCACA,YACA,OACA,gBACA,EACA,4BACA,IACA,4BAAiD,mBAA6B,EAC9E,aACA,CACA,eAEA,CACA,uBAEA,CACA,SACA,kIACA,6BAEA,UACA,UACA,QACA,CACA,CAEA,8BAAkC,mBAA6B,gBAC/D,CACA,eAEA,CACA,uBACa,CACb,CACA,sBACA,qCACA,aACA,aACA,cACA,CACA,0BACA,OACA,QACA,UACA,6CACA,QACA,CAAa,CACb,iCACA,kCACA,YACA,OACA,gBACA,EACA,eAA+C,4BAAmC,EAIlF,YAHA,aACA,EACA,oBAEA,CACA,YACA,SACA,+BACA,SAAyB,GAEzB,qBACA,KAGA,EAGA,gCACA,WACA,kBACA,eACA,QACa,QACb,kDACA,UACA,MACA,IACA,OAOA,IACA,IACA,GAKA,CAAS,CACT,CACA,gBACA,+BACA,SACA,gCACA,OACA,GACA,IAMA,CACA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CACA,gBACA,gBACA,cACA,aACA,SACA,iBACA,CAAqB,EACrB,gBAGA,sBACA,4BACA,wBACA,SACA,4BACA,EACA,MACA,gBACA,gBACA,cACA,aACA,SACA,iBACA,CAAyB,EAEzB,GACA,MACA,kBACA,gBACA,cACA,aACA,SACA,kBACyB,EAEzB,UAEA,MACA,oBACA,kBAEA,GADA,4BACA,CACA,mBACA,uBACA,kBACqB,EACrB,gBAGA,oBACA,GACA,UA5KA,OAA2B,sBAAsB,KAAK,gBAAgB,KA4KtE,MAEA,iBAEA,GADA,4BACA,CACA,mBACA,uBACA,kBACqB,EACrB,gBAGA,mBACA,kBAEA,GADA,4BACA,CACA,kBACA,uBACA,iBACA,CAAqB,EACrB,gBAGA,qBACA,kBAEA,GADA,4BACA,CACA,oBACA,uBACA,kBACqB,EACrB,gBAGA,mBACA,kBAEA,GADA,4BACA,CACA,kBACA,uBACA,kBACqB,EACrB,gBAGA,oBACA,kBAEA,GADA,4BACA,CACA,mBACA,uBACA,kBACqB,EACrB,gBAGA,mBACA,kBAEA,GADA,4BACA,CACA,kBACA,uBACA,kBACqB,EACrB,gBAGA,kBACA,IACA,eACA,CACA,SAEA,GADA,4BACA,CACA,iBACA,uBACA,kBACqB,EACrB,SACA,KAEA,kBACA,oBACA,uBAGA,GADA,4BACA,CACA,mBACA,uBACA,iBACA,CAAqB,EACrB,YAGA,gBACA,qBAEA,oBACA,sCAEA,GADA,4BACA,CACA,uBACA,YAAsC,qCAAiD,CACvF,kBACqB,EACrB,WAGA,uBACA,4BAEA,uBACA,4BAEA,sBACA,6BAEA,GADA,4BACA,CACA,uBACA,YAAsC,mBAAyB,CAC/D,kBACqB,EACrB,WAGA,oBACA,2BAEA,GADA,4BACA,CACA,uBACA,YAAsC,iBAAuB,CAC7D,kBACqB,EACrB,WAGA,oBACA,MACA,eAEA,GADA,4BACA,CACA,uBACA,sBACA,kBACqB,EACrB,WAGA,gBACA,GACA,eAEA,GADA,4BACA,CACA,uBACA,kBACA,iBACA,CAAqB,EACrB,WAGA,gBA5SA,WAA0B,GA6S1B,GA7SgD,IA8ShD,eAEA,GADA,4BACA,CACA,uBACA,kBACA,kBACqB,EACrB,WAGA,oBACA,kBAEA,GADA,4BACA,CACA,sBACA,uBACA,kBACqB,EACrB,WAGA,eAvTA,EAwTA,OAvTA,SADA,EAwTA,YAvTA,iBAGA,6BAsTA,GADA,4BACA,CACA,gBACA,uBACA,kBACqB,EACrB,YAGA,eACA,UA1TA,KACA,eACA,SACA,IACA,oBAEA,IACA,kBACA,kBACA,sCACA,sBACA,iCAEA,gBAEA,aAHA,SAKA,QACA,CACA,SACA,QACA,CACA,EAoSA,gBAEA,GADA,4BACA,CACA,iBACA,uBACA,kBACqB,EACrB,WAGA,iBA7SA,EA8SA,OA7SA,SADA,EA8SA,YA7SA,iBAGA,6BA4SA,GADA,4BACA,CACA,kBACA,uBACA,kBACqB,EACrB,YAGA,kBACA,kBAEA,GADA,4BACA,CACA,oBACA,uBACA,kBACqB,EACrB,WAGA,qBACA,kBAEA,GADA,4BACA,CACA,uBACA,uBACA,kBACqB,EACrB,WAIA,iBAGA,OAAiB,4BACjB,CACA,cACA,qCACA,aACA,uBACA,iBACS,CACT,CACA,aACA,eACA,aACA,+BACS,CACT,CACA,SACA,uBAAgC,8BAA+C,CAC/E,CACA,OACA,uBAAgC,4BAA6C,CAC7E,CACA,SACA,uBAAgC,8BAA+C,CAC/E,CACA,QACA,uBAAgC,6BAA8C,CAC9E,CACA,UACA,uBAAgC,+BAAgD,CAChF,CACA,QACA,uBAAgC,6BAA8C,CAC9E,CACA,SACA,uBAAgC,8BAA+C,CAC/E,CACA,QACA,uBAAgC,6BAA8C,CAC9E,CACA,UACA,uBAAgC,+BAAgD,CAChF,CACA,aAEA,uBACA,iBACA,iBACS,CACT,CACA,OACA,uBAAgC,4BAA6C,CAC7E,CACA,MACA,uBAAgC,2BAA4C,CAC5E,CACA,QACA,uBAAgC,6BAA8C,CAC9E,CACA,YACA,cACA,mBACA,gBACA,gBACA,eACA,UACA,SACA,SACA,CAAa,EAEb,gBACA,gBACA,gFACA,yDACA,uDACA,wCACS,CACT,CACA,QACA,uBAAgC,sBAAuB,CACvD,CACA,cACA,mBACA,gBACA,YACA,eACA,SACA,CAAa,EAEb,gBACA,YACA,gFACA,uCACA,CAAS,CACT,CACA,YACA,uBAAgC,iCAAkD,CAClF,CACA,WACA,uBACA,aACA,QACA,iBACS,CACT,CACA,cACA,uBACA,gBACA,QACA,mCACA,wCACS,CACT,CACA,gBACA,uBACA,kBACA,QACA,iBACS,CACT,CACA,cACA,uBACA,gBACA,QACA,iBACS,CACT,CACA,SACA,uBACA,WACA,QACA,iBACS,CACT,CACA,SACA,uBACA,WACA,QACA,iBACS,CACT,CACA,YACA,uBACA,cACA,QACA,gBACA,CAAS,CACT,CAIA,YACA,gCACA,CACA,OACA,eACA,aACA,6BAA4C,YAAc,EACjD,CACT,CACA,cACA,eACA,aACA,6BAA4C,mBAAqB,EACxD,CACT,CACA,cACA,eACA,aACA,6BAA4C,mBAAqB,CACjE,CAAS,CACT,CACA,iBACA,qDACA,CACA,aACA,iDACA,CACA,aACA,iDACA,CACA,iBACA,qDACA,CACA,cACA,kDACA,CACA,YACA,gDACA,CACA,cACA,kDACA,CACA,aACA,iDACA,CACA,eACA,mDACA,CACA,aACA,iDACA,CACA,cACA,kDACA,CACA,aACA,iDACA,CACA,WACA,+CACA,CACA,aACA,iDACA,CACA,eACA,mDACA,CACA,kBAEA,sDACA,CACA,gBACA,WACA,8BACA,gBACA,uBACA,YAGA,QACA,CACA,gBACA,WACA,8BACA,gBACA,uBACA,YAGA,QACA,CACA,CACA,cACA,MACA,eACA,UACA,qBACA,yDACA,SACK,CACL,CAUA,qBACA,cACA,oBACA,kBACA,kBACA,0BAEA,cAcA,EATA,GAJA,kBACA,wBAGA,IADA,eACA,WACA,8BAMA,OALA,MACA,qBACA,mBACA,sBACa,EACb,EACA,CAEA,aACA,8BACA,eACA,sBAEA,GADA,4BACA,CACA,qBACA,mBACA,iBACA,kBACqB,EACrB,WAGA,eACA,aACA,eACA,mBAGA,GADA,4BACA,CACA,kBACA,gBACA,cACA,sBACA,SACA,kBACqB,EACrB,WAGA,eACA,aACA,eACA,mBAGA,GADA,4BACA,CACA,gBACA,gBACA,cACA,sBACA,SACA,kBACqB,EACrB,WAGA,sBACA,aA/EA,KACA,8CACA,0CACA,UAGA,OAFA,uCACA,uCACA,cACA,EAwEA,kBAEA,GADA,4BACA,CACA,wBACA,mBACA,kBACqB,EACrB,WAGA,kBACA,0BAEA,GADA,4BACA,CACA,mBACA,kBACqB,EACrB,WAIA,iBAGA,OAAiB,4BACjB,CACA,SACA,8CACA,CACA,QACA,8CACA,CACA,SACA,8CACA,CACA,QACA,8CACA,CACA,kBACA,eACA,aACA,WACA,iBACA,CACA,OACA,QACA,YACA,qBACA,CAAiB,CAEjB,CAAS,CACT,CACA,aACA,eACA,aACA,+BACS,CACT,CACA,OACA,uBACA,WACA,qBACA,CAAS,CACT,CACA,YACA,uBACA,WACA,QACA,aACA,qBACA,CAAS,CACT,CACA,YACA,uBACA,WACA,QACA,aACA,qBACA,CAAS,CACT,CACA,eACA,uBACA,WACA,QACA,aACA,qBACA,CAAS,CACT,CACA,eACA,uBACA,WACA,QACA,aACA,qBACA,CAAS,CACT,CACA,gBACA,uBACA,kBACA,QACA,qBACA,CAAS,CACT,CACA,UACA,uBACA,cACA,qBACA,CAAS,CACT,CACA,QACA,uBACA,WACA,aACA,8BACA,qBACA,CAAS,aACT,WACA,aACA,8BACA,qBACA,CAAS,CACT,CACA,eACA,WACA,8BACA,gBACA,uBACA,YAGA,QACA,CACA,eACA,WACA,8BACA,gBACA,uBACA,YAGA,QACA,CACA,YACA,iDACA,4CACA,CACA,eACA,kBACA,+BACA,sBACA,gBACA,sBACA,QAEA,gBACA,uBACA,YAEA,gBACA,uBACA,WAEA,CACA,6CACA,CACA,CACA,aACA,QACA,UACA,qBACA,qCACA,QACA,CAAK,CAEL,qBACA,cACA,oBACA,kBACA,kBAEA,cAaA,EAZA,oBACA,IACA,qBACA,CACA,SACA,+BACA,CAGA,OADA,eACA,UACA,gCAGA,aACA,8BACA,eACA,aACA,eACA,mBAGA,GADA,4BACA,CACA,kBACA,cACA,gBACA,sBACA,kBACqB,EACrB,WAGA,eACA,aACA,eACA,mBAGA,GADA,4BACA,CACA,gBACA,cACA,gBACA,sBACA,kBACqB,EACrB,WAGA,sBACA,6BAEA,GADA,4BACA,CACA,wBACA,mBACA,kBACqB,EACrB,WAIA,iBAGA,OAAiB,4BACjB,CACA,oBACA,8BAMA,OALA,MACA,qBACA,mBACA,sBACS,EACT,EACA,CACA,SACA,8CACA,CACA,QACA,8CACA,CACA,SACA,8CACA,CACA,QACA,8CACA,CACA,kBACA,eACA,aACA,WACA,iBACA,CACA,OACA,QACA,YACA,qBACA,CAAiB,CAEjB,CAAS,CACT,CACA,aACA,eACA,aACA,+BACS,CACT,CACA,YACA,uBACA,WACA,gBACA,aACA,qBACA,CAAS,CACT,CACA,YACA,uBACA,WACA,gBACA,aACA,qBACA,CAAS,CACT,CACA,eACA,uBACA,WACA,gBACA,aACA,qBACA,CAAS,CACT,CACA,eACA,uBACA,WACA,gBACA,aACA,qBACA,CAAS,CACT,CACA,gBACA,uBACA,kBACA,QACA,qBACA,CAAS,CACT,CACA,eACA,WACA,8BACA,gBACA,uBACA,YAGA,QACA,CACA,eACA,WACA,8BACA,gBACA,uBACA,YAGA,QACA,CACA,CACA,cACA,MACA,eACA,UACA,qBACA,yDACA,QACA,CAAK,CACL,CACA,qBACA,UAKA,GAJA,kBACA,kBAEA,mBACA,YACA,8BAMA,OALA,MACA,qBACA,oBACA,sBACa,EACb,EACA,CACA,iBACA,CACA,CACA,aACA,QACA,sBACA,qCACA,SACK,CAEL,qBACA,cAsBA,EAjBA,GAJA,kBACA,0BAEA,mBACA,SACA,8BAMA,OALA,MACA,qBACA,iBACA,sBACa,EACb,EACA,CACA,2BAKA,OAHA,GADA,wBACA,CACA,qBACa,EACb,GAEA,aAEA,8BACA,eACA,2BAEA,GADA,4BACA,CACA,kBACA,kBACA,aACA,SACA,gBACA,WACA,CAAqB,EACrB,WAGA,eACA,2BAEA,GADA,4BACA,CACA,gBACA,kBACA,aACA,SACA,gBACA,WACA,CAAqB,EACrB,WAIA,iBAGA,OACA,eACA,gCACA,CACA,CACA,aACA,eACA,aACA,+BACS,CACT,CACA,SACA,uBACA,WACA,kBACA,qBACA,CAAS,CACT,CACA,SACA,uBACA,WACA,kBACA,qBACA,CAAS,CACT,CACA,cACA,WACA,8BACA,gBACA,uBACA,YAGA,+BACA,CACA,cACA,WACA,8BACA,gBACA,uBACA,YAGA,+BACA,CACA,CACA,aACA,QACA,UACA,qCACA,mBACA,SACK,CAEL,qBACA,UAEA,GADA,mBACA,WACA,8BAMA,OALA,MACA,qBACA,mBACA,sBACa,EACb,EACA,CACA,iBACA,CACA,CACA,aACA,QACA,qBACA,QACA,CAAK,CAEL,qBACA,UAEA,GADA,mBACA,cACA,8BAMA,OALA,MACA,qBACA,sBACA,sBACa,EACb,EACA,CACA,iBACA,CACA,CACA,aACA,QACA,wBACA,SACK,CAEL,qBACA,UAEA,GADA,mBACA,SACA,8BAMA,OALA,MACA,qBACA,iBACA,qBACA,CAAa,EACb,EACA,CACA,iBACA,CACA,CACA,aACA,QACA,mBACA,SACK,CAEL,qBACA,cACA,oBAEA,YACA,CACA,UACA,iBACA,CACA,CACA,aACA,QACA,kBACA,SACK,CAEL,qBACA,cACA,oBAEA,gBACA,CACA,UACA,iBACA,CACA,CACA,aACA,QACA,sBACA,SACK,CAEL,qBACA,UACA,8BAMA,OALA,MACA,qBACA,kBACA,sBACS,EACT,EACA,CACA,CACA,aACA,QACA,oBACA,SACK,CAEL,qBACA,UAEA,OADA,eACA,cACA,8BAMA,OALA,MACA,qBACA,iBACA,sBACa,EACb,EACA,CACA,iBACA,CACA,CACA,aACA,QACA,mBACA,SACK,CAEL,qBACA,UACA,QAAgB,YAAc,4BAC9B,YACA,2BAMA,OALA,MACA,qBACA,kBACA,sBACa,EACb,GAEA,yBACA,wCACA,oCACA,SACA,MACA,+BACA,qCACA,qCACA,aACA,aACA,SACA,8BACiB,EACjB,UAEA,CA2BA,GA1BA,oBACA,kCACA,MACA,kBACA,0BACA,aACA,aACA,SACA,4BACiB,EACjB,WAGA,oBACA,kCACA,MACA,gBACA,0BACA,aACA,aACA,SACA,4BACiB,EACjB,WAGA,eACA,0CACA,2CACa,QACb,oBAGA,6BACA,yCAEA,yBACA,CACA,cACA,sBAEA,SACA,eACA,aACA,WAAyB,8BAAwD,CACxE,CACT,CACA,SACA,eACA,aACA,WAAyB,8BAAwD,CACxE,CACT,CACA,YACA,eACA,aACA,aAA2B,8BAAkD,CACpE,CACT,CACA,YACA,oBACA,CACA,CACA,iBACA,QACA,OACA,eACA,eACA,iBACA,oBACA,QACA,CAAK,CAiCL,qBACA,cACA,oBACA,kBAKA,gCAqCA,yBAEA,aACA,uBACA,oBACA,wBACA,kBACA,2BAAiC,SAAa,CAE9C,UAEA,GADA,mBACA,WACA,8BAMA,OALA,MACA,qBACA,mBACA,sBACa,EACb,EACA,CACA,WAAgB,SAAc,4BAC9B,OAAgB,UAAyB,kBACzC,KACA,uCACA,iCACA,oBACA,eACA,UAIA,SACA,gBACA,WACA,YACA,QACA,KAAuB,uBAA6B,CACpD,qCACA,sBACa,CACb,CACA,qCACA,4BACA,qBACA,eACA,QACA,KAA+B,uBAA6B,CAC5D,OAAiC,+BAAuC,CACnD,OAGrB,gBACA,aACA,MACA,0BACA,MACA,CAAqB,EACrB,gBAGA,qBAEA,mEAEA,KACA,CAEA,yBACA,gBACA,gBACA,QACA,KAA2B,uBAA6B,CACxD,qCAEA,sBACiB,CACjB,CACA,QACA,eACA,kBACA,eACA,SACA,gBACA,kBACA,gBACA,QACA,MACA,QACA,sBACqB,CACrB,CACA,QACA,CAAa,EACb,QACA,yBAIA,uBAEA,CACA,YACA,wBACA,CACA,UAEA,OADA,WACA,QACA,aACA,qBACA,cACA,CACA,iBACA,YACA,+HACA,6BACA,CACA,wDACA,EACA,CACA,SACA,CACA,CAAqB,EAErB,EAAoB,CACX,CACT,CACA,QACA,eACA,aACA,mBACA,CAAS,CACT,CACA,cACA,eACA,aACA,yBACA,CAAS,CACT,CAkBA,UACA,eACA,aACA,YACA,qBACA,KACA,CAAa,CACJ,CACT,CAMA,SAUA,OATA,QACA,+BACA,yBACA,YACA,qBACA,iBACA,EAAa,CACb,qBACS,CAET,CAoCA,YACA,qBAA8B,MAAe,CAC7C,CAsBA,YACA,eACA,aACA,UACA,CAAS,CACT,CACA,QACA,SAMA,OALA,4BACA,qBACA,oBAEA,CAAS,EACT,QACA,aACA,WACA,CAAS,CACT,CACA,QACA,SAMA,OALA,qCACA,MACA,oBAEA,CAAS,EACT,QACA,aACA,WACA,CAAS,CACT,CAIA,cACA,gBA9VA,KACA,oBACA,SACA,sBACA,gBACA,qBACA,CACA,eACA,UACA,WACA,CAAS,CACT,QACA,gBACA,QACA,UACA,iBACA,CAAS,EAET,gBACA,yBAEA,gBACA,yBAEA,gBACA,gCAGA,CAEA,EAgUA,KACA,CACA,WACA,SAUA,OATA,qCACA,oBACA,SACA,OAGA,iBAEA,CAAS,EACT,QACA,aACA,WACA,CAAS,CACT,CACA,YACA,SAcA,OAbA,qCACA,YACA,uBAEA,CAEA,MADA,cAEA,sBACA,mBAEA,MACA,CACA,CAAS,EACT,QACA,aACA,WACA,CAAS,CACT,CACA,QACA,mCACA,CACA,CACA,iBACA,QACA,YACA,oBACA,qBACA,qBACA,SACK,EAEL,uBACA,QACA,YACA,qBACA,qBACA,qBACA,SACK,EAEL,qBACA,QACA,QACA,oBACA,qBACA,qBACA,SACK,CAEL,qBACA,UACA,QAAgB,GAAM,4BACtB,oBAuBA,kBACA,mCACA,OACA,KACA,QACA,YACA,UACqB,CACrB,WACA,EACA,OACA,4BACA,YACA,YACA,QACA,CAAqB,EACrB,KACA,CACA,CAAa,QAxCb,YAEA,eACA,6BACA,gBAGA,eACA,6BAGA,OADA,6CACA,SAIA,4CAKA,OAJA,MACA,sBACA,aACA,CAAa,EACb,EACA,EAqBA,MACA,EACA,SACA,gBACA,OACA,KACA,QACA,YACA,UACqB,CACrB,WACA,EACA,gBACA,YACA,YACA,QACA,CAAiB,EACjB,sBACA,QAEA,wBACA,IAA8B,iBAE9B,wBACA,uBAEA,CACA,KAEA,OADA,6CACA,SAEA,0BAKA,OAJA,MACA,sBACA,aACA,CAAa,EACb,EACA,CACA,CACA,cACA,yBAEA,CACA,iBACA,QACA,UACA,oBACA,SACK,EASL,WACA,mBACA,oBAEA,mBACA,yBAEA,mBACA,gBAEA,mBACA,iBAEA,mBAEA,8BAEA,mBACA,4BAEA,mBACA,oBAEA,mBACA,kBAEA,mBACA,sCAEA,mBACA,oCAEA,mBACA,2BAEA,mBACA,2BAEA,mBACA,iCAGA,SAGA,qBACA,UACA,IAAgB,OAAM,4BACtB,4BAMA,OALA,MACA,qBACA,mBACA,sBACa,EACb,GAEA,yBACA,YACA,gCACA,EAQA,eACA,eACA,YACA,YACA,QACA,CAAa,EAGb,cACA,YACA,YACA,QACA,CAAa,GAnBb,MACA,oCACA,2CACA,SACa,EACb,GAgBA,CACA,oBACA,+BAEA,cACA,yBAEA,iBACA,4BAUA,qBAEA,cAEA,gBACA,qBACA,aACA,+CAAmE,EAAc,oDAEjF,gBACA,YACA,sCAA8D,WAAuB,sBAAsB,UAAc,GAEzH,UACA,CACA,CACA,eACA,iCACA,gBACA,UACA,aACA,SACS,CACT,CACA,CA+CA,oBACA,UACA,WAAgB,SAAc,4BAC9B,UACA,gBACA,UAEA,MArDA,gBACA,YACA,QACA,SACA,OAAiB,iBAEjB,iCACA,sBACA,IACA,cACA,6BACA,GAAyB,WACzB,gBACA,mBACA,YACA,OAAyB,SAEzB,aAEA,OAAiB,gBACjB,CACA,+BACA,uBACA,OAAqB,UAErB,SACA,YAA4B,WAAkB,KAC9C,IAEA,IAFA,KACA,MAEA,YACA,OAAyB,UAEzB,cACA,CACA,OAAiB,gBACjB,QACA,aACA,aACA,OACA,CAAiB,iBAGjB,CAAiB,SAEjB,EAQA,wBACA,SAMA,gBACA,UAEA,CAAqB,+BARrB,MACA,mCACiB,EACjB,GAMA,SACA,eACA,aACA,4BACA,YACA,YACA,QACA,CAAiB,EACjB,6BACA,YACA,YACA,QACA,CAAiB,EACjB,wBAGA,6BACA,YACA,YACA,QACA,CAAa,8BACb,YACA,YACA,QACA,CAAa,EAEb,CACA,CACA,mBACA,QACA,OACA,QACA,2BACA,SACK,CAEL,qBACA,UACA,WAAgB,SAAc,4BAC9B,2BAMA,OALA,MACA,qBACA,kBACA,sBACa,EACb,GAEA,wCAQA,OAPA,MACA,kBACA,+BACA,aACA,SACA,YACA,CAAa,EACb,EAGA,EADA,gBACA,uCACA,MACA,gBACA,+BACA,aACA,SACA,YACA,CAAa,EACb,WAEA,kBACA,YACA,gDACA,EAEA,+BADA,IAEA,CAAS,EACT,gBAAiC,MACjC,eACA,uBACA,oBAIA,kBAEA,CACA,YACA,sBACA,CACA,QACA,eACA,aACA,MACA,CAAS,CACT,CACA,CACA,kBACA,qBACA,qEAEA,eACA,QACA,oBACA,UACA,SACK,CACL,CACA,qBACA,gBACA,yBAEA,kBACA,2BAEA,UACA,WAAgB,SAAc,4BAC9B,4BAMA,OALA,MACA,qBACA,mBACA,sBACa,EACb,GAEA,SACA,oBACA,sBACA,oBACA,QACA,mCACA,6CACA,sBACa,SAEb,eACA,yBAGA,uBAEA,CACA,cACA,2BAEA,gCAEA,GADA,gBACA,CACA,UACA,YACA,qBACA,SACa,CAEb,CACA,oBACA,YACA,qBACA,SACS,CACT,CACA,CACA,oBACA,gBACA,wBACA,CACA,kBACA,2BAEA,UACA,WAAgB,SAAc,4BAC9B,yBAMA,OALA,MACA,qBACA,gBACA,sBACa,EACb,GAEA,wBACA,sBACA,uCACA,EACA,2CACA,8CACA,IAEA,mBACA,cACA,wCACA,gBACA,kBACA,gBACA,8CACA,UAEA,0CACA,UAEA,sBACA,CACA,OAAyB,uBACzB,CAAa,CACb,CACA,CACA,cACA,gBACA,YACA,UACA,8CACA,UAEA,0CACA,UAEA,sBACA,CACA,OAAqB,uBACrB,CACA,CACA,CACA,mBACA,QACA,YACA,UACA,kBACA,QACA,CAAK,CAEL,qBACA,UACA,WAAgB,SAAc,4BAC9B,yBAMA,OALA,MACA,qBACA,gBACA,sBACa,EACb,GAEA,uBACA,WACA,8BACA,MACA,kBACA,wBACA,WACA,aACA,SACA,0BACiB,EACjB,WAGA,kBACA,8BACA,MACA,gBACA,wBACA,WACA,aACA,SACA,0BACiB,EACjB,WAGA,0BACA,cACA,cACA,gBACA,wBACA,SACA,qBACA,UACA,cACA,CACA,OAAqB,uBACrB,CACA,6EACA,eACA,6BAGA,IAEA,CACA,SACA,eACA,aACA,SAAuB,8BAAsD,CACpE,CACT,CACA,SACA,eACA,aACA,SAAuB,8BACvB,CAAS,CACT,CACA,UACA,6BACA,CACA,YACA,oBACA,CACA,CACA,iBACA,QACA,YACA,aACA,aACA,kBACA,SACK,CAEL,qBACA,cACA,oBACA,6BAEA,UACA,QAAgB,GAAM,4BACtB,8BAMA,OALA,MACA,qBACA,qBACA,sBACa,EACb,GAEA,gBACA,WACA,OACA,YACA,WACA,4BACA,iBACA,KACA,GACA,gBACA,WACA,0BACA,gBACA,CAAiB,CACJ,CACb,CACA,gBACA,WACA,OACA,YACA,WACA,4BACA,iBACA,KACA,GACA,gBACA,WACA,4BACA,iBACA,CAAiB,CACJ,CACb,CACA,OAAyB,sCACzB,SACA,oCAIA,WACA,+BACA,iBACA,oBACA,gBACA,UAEA,MADA,mBACA,CACA,CAAiB,EACjB,gCAOA,OANA,+BACA,gBACA,UAEA,MADA,mBACA,CACA,CAAiB,CAEjB,CAAa,CACb,CACA,CAIA,WACA,yBACA,iCACA,cACA,6BAEA,mCACA,gCACA,cACA,6BAEA,cACa,CACb,CACA,CACA,aACA,sBAEA,aACA,yBAEA,WACA,eACA,aACA,mCACA,CAAS,CACT,CACA,WACA,eACA,aACA,SACA,CAAS,CACT,CACA,aAEA,OADA,aAEA,CACA,mBAEA,OADA,aAEA,CACA,qBACA,eACA,QAEA,gCACA,uBACA,uBACA,SACS,CACT,CACA,CACA,oBACA,aACA,yBACA,CACA,UACA,QAAgB,GAAM,4BAEtB,WADA,eACA,QAAmC,iCAA6C,CAChF,CACA,CACA,iBACA,QACA,SACA,mBACA,SACK,CAEL,qBACA,UACA,6BACA,8BAMA,OALA,MACA,gBACA,wBACA,wBACA,CAAa,EACb,EACA,CACA,OAAiB,4BACjB,CACA,YACA,uBAEA,CAQA,iBACA,eACA,SACA,mBACA,SACK,CACL,CAbA,iBACA,QACA,QACA,sBACA,QACA,CAAK,CASL,qBACA,cACA,oBACA,kBACA,CACA,UACA,4BACA,8BACA,mBAMA,OALA,MACA,yBACA,sBACA,qBACa,EACb,EACA,CAIA,GAHA,gBACA,yCAEA,6BACA,8BACA,mBAMA,OALA,MACA,gBACA,2BACA,SACA,CAAa,EACb,EACA,CACA,iBACA,CACA,cACA,wBAEA,WACA,SACA,8BACA,OAEA,QACA,CACA,aACA,SACA,8BACA,OAEA,QACA,CACA,WACA,SACA,8BACA,OAEA,QACA,CACA,uBACA,oBACA,aACA,KACS,CACT,CACA,uBACA,yDACA,aACA,KACS,CACT,CACA,CACA,cACA,YACA,qBACA,cACA,oBACA,kBACA,CACA,UACA,6CACA,0BACA,6BACA,0BACA,wBAMA,OALA,MACA,yBACA,sBACA,qBACa,EACb,EACA,CAIA,GAHA,gBACA,+DAEA,6BACA,wBAMA,OALA,MACA,gBACA,2BACA,SACA,CAAa,EACb,EACA,CACA,iBACA,CACA,WACA,wBAEA,CACA,cACA,iBACA,QACA,SACA,yBACA,SACK,CAEL,qBACA,SACA,sBAEA,UACA,QAAgB,GAAM,mCACtB,2BACA,qBACA,MACA,qBACA,oBACA,sBACa,EACb,IAKA,IAHA,0BACA,OACA,yBACA,QACA,6BACA,YACA,qCACa,GAEb,CACA,CACA,iBACA,QACA,OACA,sBACA,SACK,CAEL,qBACA,YACA,wBAEA,aACA,qDACA,8BACA,iBAEA,UACA,WAAgB,SAAc,4BAC9B,yBACA,GACA,aACA,QACA,QACA,UAGA,SAEA,CAAa,CACb,WACA,cACa,EAGb,GADA,8BACA,uBACA,4BACA,kBACA,yCACA,uBACA,UACA,0CACA,OACA,YACA,QACA,CAAqB,QACrB,qBACA,GACA,oBAEA,kBADA,YAGA,CACA,CAAiB,CAEjB,EACA,uBACA,UACA,mCACA,OACA,YACA,QACA,CAAiB,QACjB,qBACA,GACA,oBAEA,kBADA,YAGA,CACA,CACA,CACA,0BACA,UACA,wBACA,kBACA,0BAEA,wBACA,yGAEA,QACA,EACA,uBAeA,wBACA,aAAmC,iCAA6C,EAChF,QACA,qBACA,IACA,oBACA,UACA,oBACA,EAAiC,iCAvBjC,EACA,mCACA,YACA,YACA,QACA,CAAiB,QACjB,qBACA,IACA,oBACA,UAEA,WACA,CAAyB,8BACzB,CAcA,CACA,yBACA,uBAeA,wBACA,aAAmC,iCAA6C,EAChF,QACA,MAEA,kDAAuG,wBAAqC,EAD5I,EAnBA,EACA,mCACA,YACA,YACA,QACA,CAAiB,EACjB,UACA,SACA,6BACA,wBACA,+GAEA,OAAyB,uBACzB,CAUA,CACA,gBACA,CACA,CACA,mBACA,QACA,SACA,sBACA,SACA,SACK,EAEL,iCACA,QACA,SACA,QAAkB,8BAA2C,CAC7D,sBACA,SACK,CAEL,qBACA,iBAEA,IADA,eACA,aACA,WAEA,6BACA,CACA,SACA,2BAEA,CACA,iBACA,QACA,YACA,uBACA,SACK,CAEL,qBACA,iBAEA,IADA,eACA,QACA,SAEA,6BACA,CACA,SACA,2BAEA,CACA,iBACA,QACA,YACA,uBACA,SACK,CAEL,qBACA,UACA,QAAgB,GAAM,4BACtB,SAIA,OAHA,6BACA,6BAEA,4BACA,OACA,YACA,QACA,CAAS,CACT,CACA,gBACA,2BAEA,CACA,iBACA,QACA,YACA,sBACA,0CACA,UACA,cACA,SACK,CAEL,qBACA,UACA,QAAgB,GAAM,4BAEtB,GACA,KACA,QACA,YACA,UACa,EAEb,8BACA,YACA,YACA,QACA,KACa,CACJ,SACT,MACA,UACA,EACA,eACA,yBACA,QACA,sBACA,YACA,8BACA,CAA6B,CAC7B,aACyB,CACzB,IAIA,CACA,eACA,yBACA,QACA,sBACA,YACA,8BACA,CAAyB,CACzB,aACqB,CACrB,CAEA,CACA,cACA,2BAEA,CACA,iBACA,QACA,YACA,oBACA,0DACA,SACK,CAEL,qBACA,UAEA,GADA,mBACA,QACA,8BAMA,OALA,MACA,qBACA,gBACA,sBACa,EACb,EACA,CACA,OAAiB,4BACjB,CACA,CACA,aACA,QACA,kBACA,SACK,EAEL,0BACA,qBACA,UACA,QAAgB,GAAM,4BACtB,SACA,8BACA,OACA,YACA,QACA,CAAS,CACT,CACA,SACA,sBAEA,CACA,oBACA,UACA,IAAgB,gBAAc,4BAC9B,kBAqBA,OApBA,UACA,sCACA,YACA,YACA,QACA,CAAiB,QACjB,qBACA,GACA,oBACA,UACA,aAGA,2BACA,aACA,YACA,QACA,CAAqB,CAErB,IAGA,EACA,+BACA,YACA,YACA,QACA,CAAa,QACb,qBACA,GACA,oBACA,UACA,CACA,eACA,gBAIA,0BACA,aACA,YACA,QACA,CAAiB,CAEjB,CACA,CACA,mBACA,eACA,KACA,MACA,uBACS,CACT,CACA,CACA,oBACA,UACA,oCACA,MACA,OACA,iCAEA,GAEA,aACA,gBACA,IACA,CACA,SACA,0BACA,CACA,CAeA,iBACA,2BACA,KACA,mBACA,CAAgB,WAChB,EAEA,MADA,oBAAyC,WAAa,CAEtD,CACA,kBAAmC,CAWnC,UACA,EACA,gCACA,QACA,WACA,wBACA,kBACA,QACA,OACA,cACA,+DACA,YAAuC,2BAA0C,CACjF,CACA,CAAiB,EAEjB,OACA,cACA,+DACA,YAA+B,2BAA0C,CACzE,CAEA,CAAS,EACT,WACA,CAzDA,iBACA,QACA,YACA,uBACA,QACA,CAAK,EAqDL,QACA,oBACA,GAEA,YACA,wBACA,wBACA,kBACA,wBACA,0BACA,oBACA,wBACA,8BACA,oBACA,kBACA,0BACA,sBACA,oBACA,sBACA,wBACA,sBACA,gDACA,oCACA,sBACA,wBACA,kBACA,kBACA,4BACA,oBACA,0BACA,oBACA,0BACA,gCACA,4BACA,4BACA,0BACA,sBACA,0BACA,0BACA,4BACA,2BACA,CAAC,YAMD,iBACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,mBACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,2BACA,aAgBA,sBACA,eACA,mBACA,YA3zHA,YACA,IACA,EA0zHA,eACA,aACA,WA3xHA,GA4xHA,qBACA,eACA,WACA,SACA,MACA,aACA,WACA,WACA,WACA,WAAkB,SAAc,CAChC,iBAAwB,SAAoB,CAC5C,iBACA,iBACA,WACA,iBACA,aACA,aACA,aACA,cACA,WACA,aACA,gBACA,WACA,UACA,cACA,YACA,WACA,YACA,aACA,YACA,yBACA,mBACA,YACA,aACA,UACA,UACA,eACA,WACA,cACA,WACA,iBACA,cACA,cACA,kBACA,eACA,eACA,cACA,YACA,UACA,SACA,cACA,eACA,eACA,UACA,UACA,aACA,QACA,4BAAmC,SAA+B,CAClE,OA7EA,CACA,qBAAyC,eAAsB,EAC/D,qBAAyC,eAAsB,EAC/D,sBACA,KACA,SACA,CAAK,EACL,qBAAyC,eAAsB,EAC/D,mBAAqC,eAAsB,CAC3D,EAqEA,OACA,SACA,UACA,WACA,QACA,sBACA,UACA,QACA,YACA,WAjIA,CAEA,KACA,iCAAsC,OAAS,EAC9C,2BA8HD,gBACA,QACA,WACA,OACA,OACA,cACA,SACA,QACA,YACA,UACA,UACA,SApGA,oBAqGA,QAtGA,oBAuGA,YACA,QAzGA,oBA0GA,YACA,cACA,WACA,UACA,OACA,gBACA,UACA,UACA,eACA,SACA,aACA,SACA,WACA,QACA,MA3GA,GA4GA,gBACA,cAnpIA,GAEA,KADA,oBACA,6BAkpIA,WACA,CAAC,EElzIM,qBACP,kBAEA,GACA,iBACA,kBACA,KACA,EAEA,CACO,uBACP,OACA,WACA,CIZO,iBACP,OAAW,GAAQ,cACnB,CCFO,cACI,GAAQ,oBCsBnB,WACA,OACA,eACA,kBACA,EACA,yBACA,SAEA,sBACA,eACA,UACgB,GAAyB,oBACzC,EADyC,OACzC,IACA,KACA,WACgB,GAAyB,oBACzC,EADyC,OACzC,GAEA,CAEA,QACA,EI5CA,MACA,oCAEA,YEIO,IAIP,kBAAuB,GAAG,GAC1B,oBACA,0BAA+B,GAAG,GAIlC,mGAAwG,GAAG,GAY3G,WACsB,SAAV,GACA,GAAU,WADA,GACA,sBAAuC,KAAK,gBAAgB,WAEnE,GAUf,cAVyB,wDAUkD,EAAE,4EAK7E,yBAA8B,IAAI,GAAG,IAAI,YAAY,IAAI,cAAc,IAAI,GAAG,IAAI,eAAe,IAAI,GAAG,IAAI,aAAa,IAAI,cAAc,IAAI,GAAG,IAAI,cAAc,IAAI,EAAE,IAAI,cAAc,IAAI,GAAG,IAAI,cAAc,IAAI,EAAE,IAAI,cAAc,IAAI,GAAG,IAAI,cAAc,IAAI,EAAE,IAAI,cAAc,IAAI,GAAG,IAAI,cAAc,IAAI,EAAE,IAAI,aAAa,IAAI,gBAAgB,IAAI,EAAE,IAAI,kBAAkB,IAAI,EAAE,IAAI,uBAAuB,IAAI,EAAE,IAAI,aAAa,GAAG,YAAY,IAAI,EAAE,IAAI,GAAG,IAAI,oBAAoB,IAAI,OAAO,IAAI,UAAU,IAAI,mBAAmB,IAAI,OAAO,IAAI,oBAAoB,IAAI,GAAG,IAAI,qBAAqB,IAAI,OAAO,IAAI,UAAU,IAAI,mBAAmB,IAAI,OAAO,IAAI,4CAC5pB,wBAA6B,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,OACxE,2BAAgC,EAAE,kBAAkB,EAAE,sBAAsB,EAAE,UAC9E,uBAA4B,GAAG,GAC/B,sDACA,EACO,iBACP,OACA,aACA,EACA,YACA,sBACA,eACA,UACoB,GAAyB,2CAC7C,8BACA,qBACA,KACA,WACoB,GAAyB,2CAC7C,8BACA,qBACA,KACA,aACA,wBACA,mBACA,0BACA,KACA,wBACA,8BACA,KACA,mBACA,0BAEA,CACA,KACA,WACA,wBACA,KACA,YACA,yBACA,KACA,aACA,0BACA,KACA,YACA,0BACA,KACA,aACA,2BACA,KACA,kBACA,gBAA+C,cAA2C,gBAC1F,KACA,gBACA,eAA8C,cAA2C,iBACzF,KACA,gBACA,8BACA,KACA,YACA,yBACA,KACA,YACA,yBACA,KACA,gBACA,6BACA,KACA,cACoB,GAAyB,2CAC7C,8BACA,qBACoB,GAAyB,2CAC7C,8BACA,qBACA,KACA,gBACA,wCACA,KAEA,UACA,kBACA,yBAEA,kBACA,yBAEA,KAEA,iBACA,+BACA,KACA,WACA,yBACA,KACA,YACA,kBACA,8BAEA,kBACA,8BAEA,KAEA,aACA,6BACA,KACA,YACA,0BACA,KAEA,cACA,yBACA,oBACA,2BACA,KAEA,8BAC4B,GAAyB,0CACrD,KAEA,mBACA,2BAGA,CACA,KAEA,cACA,2BASA,CAGA,QACA,CACA,iBACA,mCAKA,YACA,SACA,YAAoB,WAAmB,IACvC,cACA,UAEA,QAEA,QACA,EAbA,GACA,CACA,CACA,+EAYA,qBACA,sCACA,SACA,aAEA,WACA,cACA,gBACA,mBACA,kBACA,cAAoC,6BAAoC,CACvD,CACJ,EACb,gBACA,iBACA,6BACA,wCACA,wBAIA,cACA,SACA,MACA,kBAAwC,cAAgB,UAAmB,CAClE,GAGD,GAAyB,iBAEjC,CAEA,IAJiC,KAIjC,YACA,wCACA,SACA,aAEA,YACA,cACA,kBACA,mBACA,kBACA,cAAoC,+BAAsC,CACzD,CACJ,EACb,iBACA,iBACA,8BACA,wCACA,wBAIA,cACA,gBACA,MACA,kBAAwC,cAAgB,WAAoB,CACnE,GAGD,GAAyB,wBAEjC,CAEA,iBACA,gCACA,gBAGA,OACA,wBACA,wBACA,uBACA,EAEA,sCACA,KACA,KACA,KACA,KACA,YAAoB,WAAmB,KACvC,MACA,QACA,KACA,QACA,CACA,QACA,KACA,yBACA,GACA,QACA,MAAsC,OAAc,GAAG,KAAU,gBACjE,MAEA,sCACA,QACA,MAGA,MAAsC,KAAU,EAAE,mBAAwB,EAE1E,QACA,OAEA,wBACA,OAA+B,KAAU,EAAE,mBAAwB,GACnE,QACA,EAEA,QACA,eACA;AAAA,KACA,QACA,CACA,eACA;AAAA,KACA,QACA,CACA,CACA,oBACA,QAAwC,KAAU;AAAA,MAAY,KAAU;AAAA,GACxE,QACA,CACA,QACA,YACA,KAEA,cACA,KAEA,eACA,MAEA,CACA,IACA,aACA,CACA,MAEA,OADA,mDAA2D,yBAA4B,uEACvF,SAEA,QACA,CC5VO,iBAIP,GAHA,qBACA,6GAEA,uBACA,2BAAuC,EAAqB,QAC5D,OACA,IAF4D,CAE5D,SACA,+BACA,iDACA,KACA,IAAuB,GAAQ,kBAC/B,KACA,6CACA,CAAiB,KAAO,CACxB,CAAa,GAAK,EAClB,uBACA,EAEA,OACA,cACA,qBAA8B,GAAQ,kBACtC,KACA,qDACA,CAAS,KAAO,EAEhB,yBACA,SAEA,8BAAuC,EAAqB,WAC5D,QAD4D,CAC5D,sBACA,SAAgB,QAAmB,GAAgB,kBACnD,OACA,KACA,eACA,CACA,CACA,8BAA4C,EAAqB,QACjE,OACA,IAFiE,CAGjE,eACA,2BACa,EAGb,8BAA4C,EAAqB,YACjE,OADiE,EACjE,2BAAgD,EAAqB,WACrE,QADqE,CACrE,gCACA,SAAgB,QAAmB,GAAiB,kBACpD,OACA,KACA,eACA,CACA,CACA,QACA,CK1DO,QACP,mBACA,mBACA,oBACA,qBACA,cACA,EA4DA,WACA,gCACA,+BACA,WACA,WAAuB,GAAQ,QAC/B,KACA,yCAAuD,EAAE,GACpD,GACL,eACA,kBACA,8CACA,uBAA4B,GAAQ,MACpC,EI9EO,WACP,yDACA,OAAe,GAAQ,oBAEvB,MAAwB,GAAQ,kBAChC,KACA,2CACK,EACL,SACA,CACA,OACA,CACA,MAA2B,CACV,CACjB,EACA,EAEA,EACA,EClBO,WACP,4BACA,OAAe,GAAQ,aAEvB,6BACA,OAAe,GAAQ,cAEvB,MAAc,GAAQ,WACtB,KACA,2CACK,EACL,EAAc,GAAQ,YACtB,KACA,iDACK,EACL,OACA,iCACA,CACA,EMlBO,UACI,GAAQ,oBC6BZ,aACP,UACA,KAAa,EAAqB,UAClC,OAAmB,EADe,CACD,IACjC,MAAa,CADoB,CACC,UAClC,OVnCO,EUkC2B,OVlC3B,KACP,OACA,aACA,EACA,aACA,SACA,sBACA,eACA,UACA,iBACgB,GAAe,sBAC/B,KACA,WACA,yBACA,YACwB,GAAyB,iCAGzB,GAAyB,2CAIjD,aACA,wBAEoB,GAAyB,kCAE7C,KACA,WACA,yBACA,YACwB,GAAyB,iCAGzB,GAAyB,2CAIjD,aACA,wBAEoB,GAAyB,kCAE7C,KACA,kBACgB,GAAyB,mCAEzC,CAEA,QACA,EUfiC,IACjC,MAAa,EAAqB,UAClC,OAAmB,EADe,OTjB3B,KACP,0BACA,GACA,cACA,gDACA,+BACA,SACA,qBACA,OACA,aAAuC,IACvC,OADkD,EAClD,YAEA,gBACA,iBAEA,MAEA,MAA8B,GAAQ,QACtC,KACA,8CACA,+CACa,SACb,WACA,EACA,CACA,YAA8B,sBAA0C,CACxE,wCAEA,CAAS,EAAI,aAAc,aAAgB,EAC3C,qBA9CA,sCACA,sCACA,yBACc,GAAQ,iBACtB,GA0CA,EAzCA,sDACa,MAGb,aAqCA,EArCA,uBACA,gBAoCA,EApCA,YACc,GAmCd,EAnCsB,eACtB,GAkCA,EAjCA,sDACa,KAiCb,EAGA,OAFA,mBACA,kBACA,CACA,EShBiC,IACjC,MAAa,EAAqB,UAClC,O5BvCO,E4BsC2B,O5BtC3B,K4BuC0B,I5BtCjC,GACA,eACA,cACA,EACA,aACA,SACA,sBACA,eACA,UACA,yBACA,YACwB,GAAyB,iCAGzB,GAAyB,2CAIjD,aACA,wBAEoB,GAAyB,kCAE7C,KACA,WACA,yBACA,YACwB,GAAyB,iCAGzB,GAAyB,2CAIjD,aACA,wBAEoB,GAAyB,kCAE7C,KACA,kBACgB,GAAyB,mCAEzC,CAEA,QACA,E4BRiC,IACjC,MAAa,EAAqB,WAClC,M3BzCA,C2ByCmB,CADe,I3BvClC,SACA,C2BuCkC,MACrB,EAAqB,QAClC,OxB3CO,IwB0C2B,KxB1C3B,SACP,wBACA,oBACA,OACA,4BACA,EAEA,UACA,aACA,uBACA,OACA,cACA,kBACA,CACA,mBACA,OACA,cACA,aACA,CACA,eACA,cACA,CACA,EwBqB+B,IAC/B,MAAa,EAAqB,aAClC,MADkC,CACf,IH5CnB,EAAe,CG6Cf,MAAa,EAAqB,EADE,KACF,CAClC,Mb/CA,Ca+CmB,IADe,Qb9ClC,SACA,CACA,cACA,WACA,EACA,CACA,WACA,CayCA,MAAa,EAAqB,SAClC,O7B/CO,G6B8C2B,M7B9C3B,I6B+CyB,C7B9ChC,OACA,YACA,EAkBA,OAjBA,cACA,yBAAqC,EAAqB,QAC1D,SAAoB,EADsC,CAC9B,aAC5B,KACA,wCACS,EAET,aACQ,GAAyB,sDAEjC,aACQ,GAAyB,sDAEjC,gBACQ,GAAyB,0DACzB,GAAyB,2DAEjC,CACA,E6ByBgC,IAChC,MAAa,EAAqB,SAClC,KAAa,EAAqB,GADA,gBACA,GAClC,OZ7CO,aY6CyB,CZ5ChC,yBACA,eACA,wEAEA,qCACA,0CAEA,uBACA,0BACA,CAD6D,MAC7D,4BACA,CAAS,KACT,OACA,sBACA,CACA,CACA,+DAEA,uBACA,0BACA,UACA,aACA,aACA,cACA,mBACA,SACA,sBACA,cACA,uBACA,4BAKA,QACA,CACA,CAAS,KACT,wBAEA,0CACA,OACA,uBACA,qBACA,+CACiB,GACjB,CACA,CACA,MACA,2CACA,OACA,cACA,yBACA,KACA,wCACA,IACA,EAEA,cACA,EYbgC,IAChC,MAAa,EAAqB,gBAClC,GADkC,IpBhD3B,cACP,OACQ,GAAQ,aAChB,KACA,2CACS,EACD,GAAQ,cAChB,KACA,2CACS,EACT,gBACA,iCACA,CAAY,0BACZ,OACA,KAyBA,OAvBA,cACA,SACA,mBACA,kCAGA,eAGA,CACA,QACA,+BACA,6BACA,yBAAwB,QAAgC,EACxD,GACA,MAGA,SAEA,SACA,CACA,CAAK,EACL,SACA,CACA,QACA,MAEA,MACA,EoBIuC,IACvC,MAAa,EAAqB,SAClC,OJxDO,GIuD2B,MJvD3B,IIwDyB,QJvDhC,OACA,CACA,aACA,wBACA,cACA,WAA+B,GAAQ,QACvC,KACA,yCAA+D,EAAE,EACjE,CAAa,GACb,wCACA,gBAA6B,GAAQ,aACrC,KACA,iDACa,CACb,EAGA,CACA,aACA,wBACA,wBACA,cACA,WAA+B,GAAQ,QACvC,KACA,yCAA+D,EAAE,EACjE,CAAa,GACb,uCACA,CAEA,EI0BgC,IAChC,MAAa,EAAqB,UAClC,OAAmB,EADe,CACD,IACjC,MAAa,CADoB,CACC,WAClC,OAAmB,CADe,QnB5D3B,KACP,CmB4DkC,GnB5DlC,uBACA,cACA,cACA,eACA,aACA,CACA,4CACA,EAEA,sBACA,CACA,8BACA,cACA,EAEA,CACA,8BACA,cAEA,EmByCkC,IAClC,MAAa,EAAqB,QAClC,MrB9DA,CACA,IqB4DkC,CrB5DlC,OqB6D+B,ErB5D/B,gBqB4D+B,ErB5D/B,OACA,CqB4DA,MAAa,EAAqB,cAClC,KADkC,EfhE3B,YACP,MegEqC,EfhErC,OAIA,SAHA,yBACA,0BAEA,aACA,0CACA,OACA,kBACA,gBACA,SACA,SACA,oBACA,MACA,CACA,EekDqC,EACrC,MAAa,EAAqB,YAClC,OADkC,SXhE3B,KACP,EWgEmC,CXhEnC,kGACA,kEACA,sBACA,CACA,KAAsB,EAAiB,4BACvC,WACA,EAEA,CACA,MACgB,EAAiB,4BACjC,OACA,EAGA,0BACA,MAAqB,GAAQ,kBAC7B,KACA,+BACS,SACT,cACA,CAAqB,uBACrB,IAAyB,iBACzB,CACA,MAAiB,GAAQ,kBACzB,KACA,2CACK,EACL,WAAqB,UAAgB,YAAc,EACnD,EWmCmC,IACnC,MAAa,EAAqB,YAClC,OADkC,GACC,IACnC,MAAa,EAAqB,CADC,KACD,CAClC,OAAmB,KADe,IhBpE3B,WACP,yBACe,GAAc,KAU7B,CACA,aACA,aACA,OACA,aACA,OAbiB,GAAQ,gBACzB,KACA,mDACK,MACc,GAAQ,kBAC3B,KACA,mDACK,MAML,CACA,WACA,UACA,CAAS,CAET,EgB+C8B,IAC9B,MAAa,EAAqB,OAClC,OAAmB,KADe,ILtE3B,EKuEuB,CLvEvB,EAKP,OACA,aACA,eACA,MAPkB,GAAQ,kBAC1B,KACA,uCACK,CAKL,EAOA,OANA,WACQ,GAAyB,kDAEjC,WACQ,GAAyB,kDAEjC,CACA,EKsD8B,IAC9B,MAAa,EAAqB,QAClC,WADkC,CAClC,mBACa,EAAqB,WAClC,ON3EW,CM0EuB,EN1Ef,YM2Ee,EAClC,MAAa,EAAqB,OAClC,KAAa,EAAqB,KADA,GACA,CAClC,Md/EA,Cc+EmB,GADe,Cd7ElC,EAAe,Cc+Ef,MADgC,EACE,WAClC,OAAmB,CADe,QtBhF3B,KACP,CsBgFkC,KtBhFlC,2BACU,GAAQ,iBAClB,EACA,EsB6EkC,IAClC,MAAa,EAAqB,OAElC,KAAa,EAAqB,KAFA,KAEA,CADlC,M/BnFA,C+BmFmB,CACe,MAErB,EAAqB,EAHJ,QAGI,CAClC,OAAmB,CADe,QvBtF3B,KACP,CuBsFkC,KvBtFlC,CACA,GAAW,GAAQ,oBACnB,wBACA,CACA,EuBkFkC,IAClC,MAAa,EAAqB,WAClC,OAAmB,CADe,EACA,IAClC,MAAa,EADqB,WACA,CAClC,OAAmB,GAAgB,IACnC,MAAa,EAAqB,CADC,OACD,CAClC,OAAmB,GAAa,IAChC,MADgC,EACE,YAClC,OADkC,GACC,IACnC,MAAa,EAAqB,CADC,UACD,CAClC,KAAa,EADqB,OACA,CAClC,KAAa,EAAqB,IADA,KACA,CAElC,QADA,CADkC,KAKlC,CACA,ECvGO,sBACP,oBACA,eACA,4BACA,OAA+B,GAC/B,QAEA,CACA,EAJ6C,CAI7C,OACA,cACA,cACA,QAEA,CACA,OAAsB,4CACtB,gBACA,MAA+B,GAAY,gBAE3C,uBACA,UACA,EAIA,GAHA,GACA,UAEA,eACA,2BAEA,OADA,eACA,CACA,CAEA,OADA,eACA,CACA,CACA,eACA,uBACA,WACA,OAAqB,sBACrB,gBACA,OAAqB,8BACrB,YACA,WACA,uCACA,0CAEA,OADA,gDAAgE,wBAA2B,sBAC3F,GAEA,iCAAqD,MAErD,CACA,EACA,WACA,QACA,KAAW,wBACX,YADiD,KAIjD,uDACA,EACA,aACA,gBACA,4BACA,uBACA,uCAGA,GE5BA,GDpCA,ICoCe,IDnCf,MAAiB,GAAO,ECmCM,CDlC9B,CCkC+B,CDlC/B,kCACA,kDACA,KACA,IAAoB,GAAQ,QAC5B,KACA,+CACa,QAAa,CAC1B,CAAS,GAAK,EACd,OACA,qBACA,EACA,0BACA,OACA,QACA,EAAiB,GAAQ,kBACzB,EACA,CACA,KACA,+CACS,SACT,sBACA,iBACA,yBACA,OACA,MACA,aACA,YAEA,iBACA,EACA,CACA,KACA,oBACA,EACA,EACA,CACA,SACA,0CACA,iBACA,EACA,WACA,oBACA,KACA,KACA,CAAa,EAeb,MAbA,yBACA,oDAEA,uDACA,4DAEA,qBACA,cACA,aACA,aACA,oCACA,qHAEA,CACA,EE8RA,QACA,SACA,YACA,UACA,sBACA,mDAEA,OAAa,oBACb,CACA,EACA,IACA,SACA,qBACA,UACA,kQACA,YACA,2EAGA,OACA,qBACA,OACA,CACA,CACA,EACA,IACA,SACA,YACA,UACA,qBACA,mDAEA,OAAa,oBACb,CACA,EACA,IACA,SACA,aACA,UACA,sBACA,oDAEA,OAAa,qBACb,CACA,EACA,IACA,SACA,yBACA,UACA,gMACA,iKAEA,YACA,4FAGA,OACA,yBACA,OACA,CACA,CACA,EACA,IACA,SACA,8BACA,UACA,iIACA,YACA,+FAGA,OACA,8BACA,OACA,oBACA,sBAEA,CACA,CACA,EACA,IACA,SACA,oBACA,UACA,uGACA,YACA,4EAGA,OACA,oBACA,OACA,CACA,CACA,EACA,IACA,SACA,kBACA,UACA,wJACA,oRAEA,YACA,+DAGA,OACA,kBACA,OACA,CACA,CACA,EACA,IACA,SACA,2BACA,UACA,qBACA,kEAEA,OAAa,mCACb,CACA,EACA,IACA,SACA,iBACA,UACA,2KACA,YACA,4FAGA,OACA,iBACA,OACA,CACA,CACA,EACA,IACA,SACA,mBACA,UACA,oGACA,YACA,qFAGA,OACA,mBACA,OACA,CACA,CACA,EACA,IACA,SACA,iCACA,UACA,mIACA,YACA,mGAGA,OACA,iCACA,OACA,CACA,CACA,EACA,IACA,SACA,uBACA,UACA,6IACA,YACA,8FAGA,OACA,uBACA,OACA,CACA,CACA,EACA,IACA,SACA,sBACA,UACA,uFACA,YACA,2EAGA,OACA,6BAQA,MANA,8GACA,UACA,mFACA,+FACA,EAEA,CACA,sBACA,OACA,CACA,CACA,EACA,IACA,SACA,mBACA,UACA,uFACA,YACA,wEAGA,OACA,4BACA,cACA,EAUA,MATA,8GACA,UACA,mFACA,+FACA,EAEA,oDACA,8BAEA,CACA,mBACA,OACA,CACA,CACA,EACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,CACA,IACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,CACA,CACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBAEA,yBACA,OACA,qBACA,UACA,kEAEA,mBACA,mBACA,2DAAmE,EAAO,IAI1E,iBADA,cAEA,UAHA,EAGA,SACA,EACA,iBACA,6BACA,MACA,yCAAiD,EAAK,GAEtD,SAAY,OAAgB,GAAG;AAC/B,CACA,CA2qBA,sCAgBA,SAAS,GAAQ,GACjB,MAHA,CAEiB,SAFjB,OAGA,GAHA,OAGA,GAHA,MAGA,GAHA,KAGA,CAHA,qBAGA,GAHA,aAGA,IAhBA,YACA,WACA,CAAE,EAAI,EACN,OACA,QACA,aAEA,CAAK,GAAe,IACpB,QADoB,GACpB,EACA,UACA,CACA,EAUI,GALJ,GAMA,CACA,aACA,MARA,EAQA,aACA,kBAAkC,yBAAoC,CAAI,yBAC1E,CACA,EAVA,0BC90CA,yBACA,WACA,eACA,QAAgC,uBAAoC,CACpE,EAmBA,qBACA,mEACA,CAIA,IAAI,GAAI,gBACJ,GAAM,mBAAsB,GAAK,EACjC,GAAM,IAD0B,GAC1B,IAAc,IAExB,OAF8B,UAEC,GAC/B,OADyC,KACzC,CACA,UACA,SACA,SACG,EACH,OAAY,IAAI,cAAW,EAC3B,KAAS,EAAE,QACX,UACA,cACA,6BAEA,qBACA,OAAW,GAAU,YAAkB,GACvC,CAIA,OAL6C,aAK7C,GACA,oCAAoD,IAAI,kDACxD,CAIA,SACA,OACA,eACA,qBACA,mBACA,yBACA,mBAEA,CACA,EACA,EAAK,GAGL,CAHE,GAGF,IAHW,CAIX,eACA,uBACA,kBACA,CAAE,EAAI,kBACN,aACA,YACA,eACA,CAAC,EACD,qBACA,aACA,YACA,gBACC,OACD,IACA,gBACA,CAAI,SACJ,GAAQ,GAAY,IAGpB,KAHoB,CACpB,QAKA,MxCnBA,MwCmBwC,ExClBxC,KwCkByB,WxChBzB,SwCgBwC,CxChBxC,OwCgBwC,iBxCbxC,MwCawC,ExCZxC,QAEA,ewCUwC,GACxC,WACA,WACA,OACA,cACA,wBAAiC,GAAW,wBAAwB,EAAa,EACjF,4BACA,QACA,CAAO,EAEP,uBAAkC,GAAY,4CAE9C,OADA,YACA,GACA,EACA,YAAU,gCAAiE,CAC3E,GAGA,SACA,OAEA,eACA,wBAA+B,GAAW,sCAAsC,EAAa,GAC7F,2BACA,QACA,CAAK,CACL,CACA,CAGA,aACA,cACA,YACC,EACD,OAEA,oBAAyB,EAAY,EAAE,wCAAkE,aAAqB,KAAO,EACrI,4CAEA,mBACA,sDAEA,CAwCA,QACA,cACA,GAEA,2BACA,qBACA,MAEA,qBACA,MAEA,qBACA,YAGA,EACA,IACA,gBACA,GAEA,eACA,YACG,CACH,gBACA,YACG,CACH,WACA,YACG,CACH,UACA,YACG,CACH,WACA,WACA,CAAG,CACH,YACA,YACG,CACH,aACA,YACG,CACH,MACA,YACG,CACH,gBACA,GAEA,kBACA,YAEA,EACA,IACA,WACA,UACA,YACA,EAkBA,aACA,OACA,SACA,aACA,KACA,iBACC,EACD,uCAA0C,EAAY,WACtD,IACA,iBAIA,OAHA,GACA,QAEA,CACA,CAAM,SACN,IACA,oBACA,mBACA,YACA,kBACA,cACW,EACX,aACA,KAAkB,IAAc,OAChC,kBACW,GAEX,aAA2B,KAAM,IAAc,OAAQ,CAEvD,EAAQ,OACR,OACA,CACA,OACA,CACA,CAAG,CACH,CAGA,aACA,YACA,aACC,QACD,kCACA,GAEA,qCACA,cACA,SAEA,gEACA,wCACA,SAEA,gBACA,qBAAiD,WACjD,CACA,kEACA,yCACA,SAEA,iBACA,qBAAiD,WACjD,CACA,OAAa,WACb,CAAG,GAAI,CACP,CA6FA,IA+LI,GAAK,mBACL,GAAO,mBAAsB,GAAM,EACnC,GAAO,EAD2B,KAC3B,IAAc,IAEzB,QAFgC,SAEE,GAClC,OAD6C,KAC7C,CACA,MACA,aACA,aACA,QACA,wCAAoD,EAAI,IAAI,GAAY,EAAE,EAAW,wBAA0B,EAAI,IAAI,EAAM,EAC1H,EACH,OAAY,KAAM,GAAK,kBAAkB,EACzC,KAAS,EAAG,IACZ,CADY,GACZ,OACA,kBACA,iBACA,CACA,qBACA,OAAW,GAAW,YAAkB,GACxC,CAIA,QAL+C,eAK/C,GACA,oCAAoD,IAAK,gIACzD,CAIA,SACA,OACA,eACA,qBACA,aACA,2BACA,2BACA,iBAEA,CACA,EAIA,mBACA,MACA,4BACC,EACD,MACA,mBACA,IACA,iBACA,SACA,cACA,MACA,oBACA,wBACO,EAEP,OACA,2CACA,yDACA,CACA,CAAI,SACJ,oBACA,OAEA,eAA8B,cAA4B,CAC1D,CACA,CA5BA,EAAM,GA+BN,EA/BG,EA+BH,IACA,CAAI,sCAA4C,CAChD,CAAI,0CAAiD,CACrD,CAAI,sCAA2C,CAC/C,CAAI,2CACJ,CAkBI,GAAK,6BACL,GAAO,mBAAsB,GAAM,EACnC,GAAO,EAD2B,KAC3B,IAAc,IAEzB,QAFgC,SAEY,GAC5C,OADuD,KACvD,CACA,UACA,QACA,yGAA6G,SAAe,GACzH,EACH,OAAY,KAAM,GAAK,kBAAkB,EACzC,KAAS,EAAG,IACZ,CADY,GACZ,UACA,CACA,qBACA,OAAW,GAAW,YAAkB,GACxC,CAIA,QAL+C,yBAK/C,GACA,oCAAoD,IAAK,gBAKzD,SACA,OACA,eACA,qBACA,iBACA,iBACA,qBAEA,CACA,EACA,EAAM,GAIN,EAJG,EAIH,GAAwB,CAAC,CAJZ,CAIY,OACvB,CAAC,WACD,CAAC,yBACD,CAAC,0BACD,CAAC,SAEH,IACA,QACA,oEACA,CAAK,CACL,CAAM,6BAEN,EAUA,eACA,2BACA,SAEA,sBACA,IACA,OAAa,SxCxNb,GAEA,MAAuB,GADvB,IwCuNsC,ExCtNX,GAD3B,8BAEA,6CACA,EwCoNsC,EACtC,CAAM,SACN,cACA,8EACA,UACA,OACA,CAAO,CACP,CAEA,4BACA,wBAEA,eAAsC,UAAS,CAC/C,CAWA,IAAI,GAAK,6BACL,GAAO,mBAAsB,GAAM,EACnC,GAAO,EAD2B,KAC3B,IAAc,IAEzB,QAFgC,SAEY,GAC5C,OADuD,KACvD,CACA,OACA,oCAAwC,EAAK,2DAC1C,EACH,OAAY,KAAM,GAAK,UAAW,EAClC,KAAS,EAAG,IACZ,CADY,GACZ,OACA,CACA,qBACA,OAAW,GAAW,YAAkB,GACxC,CAIA,QAL+C,yBAK/C,GACA,oCAAoD,IAAK,wBAKzD,SACA,OACA,eACA,qBACA,iBACA,eAEA,CACA,EAoBA,mBACA,SACA,4BACA,0BACA,4BACC,EACD,eACA,WACA,EACA,EACA,GAEA,UACA,iBAAkC,+BAAwC,QAC1E,eACA,IAIA,cACA,aACA,UACA,aACA,OACA,cACA,kBACA,gDACA,CAEA,YACA,8BACA,OACA,YACA,UAAsB,2BAAqC,EAC3D,kDAGA,OACA,YACA,0BAuEA,kBASA,EACA,EACA,EAVA,mBACA,OACA,YACA,YACA,kDAGA,iBAIA,SACA,UACA,YACA,UACA,KACA,YACA,SACA,KACA,SACA,sCAAgD,EAAK,EACrD,CACA,IACA,iCACA,CAAI,SACJ,GACA,CACA,qBACA,yBACA,IAAc,4BAA2C,SA5JzD,GACA,IACA,sBACA,OACA,mBAA+B,oBAC/B,eACA,CACA,CAAI,SACJ,OACA,gBACA,oBACA,CACA,CACA,EAgJA,cAEA,oBACA,+CAA2D,EAAK,GAEhE,IACA,OACA,EAAM,IACN,sBACA,GACA,SACA,yBAEA,GAEA,OAEA,QAEA,UACA,YAIA,OAHA,kCACA,GArUA,YACA,cAAe,cAAkB,KACjC,gDACA,QAIA,EA8TA,IAEA,CACA,aACA,QACA,WACA,iDAEA,gBAvQA,EAwQA,WACA,kDAEA,OACA,YACA,6BA5QA,iBADA,EA6QA,GA3QA,EAEA,yBACW,GAAyB,mBAE3B,GAF2B,GAwQpC,EACA,WACA,MAxQkC,WAwQlC,gCAEA,EACA,EA/IA,8CACA,iDAGA,iBACA,8BACA,OACA,iBACA,UAAsB,2BAAqC,EAC3D,kDAGA,OACA,iBACA,yBAEA,iCACA,QACA,IAAkB,sCAAyC,EAC3D,OACA,KACA,kBACA,CACA,CAAS,EACT,iDAGA,YACA,OACA,YACA,2BACA,mBACA,wBACA,oBACA,gBACA,+BACA,kBACA,gDACA,CAAS,GACT,iDAGA,SAEA,cAA0C,KAD1C,CAC0C,CAAwB,CAElE,EACA,EAvEA,MAEA,CAsEA,2BACA,4DACA,qBACA,cACA,sCACA,OACA,gCACA,4CACA,GAEA,kFAEA,6CAOA,0BACA,CAPA,kBACA,iBACA,MACA,kBAA2C,EAAK,CAChD,EAAK,EACL,EAEA,UAA4B,SAAW,qBAEvC,CAhIA,EAAM,GA6MN,EA7MG,EA6MC,GAAK,EA7MI,KA6MJ,mBACL,GAAO,mBAAsB,GAAM,EACnC,GAAO,EAD2B,KAC3B,IAAc,IAErB,GAAoB,KAFQ,SAES,GACzC,KADwB,EAA4B,KACpD,CACA,YACA,QACA,UACG,EACH,OACA,KAAY,GACZ,OADiB,CACjB,kCAAiD,EAAU,IAAI,EAAQ,EAClE,EACL,KAAS,EAAG,IACZ,CADY,GACZ,aACA,YACA,CACA,qBACA,OAAW,GAAW,YAAkB,GACxC,CAIA,QAL+C,sBAK/C,GACA,oCAAoD,IAAK,uDAEzD,SACA,OACA,eACA,qBACA,iBACA,yBACA,iBAEA,CACA,EACA,EAAM,GA8HN,EA9HG,EA8HH,GAAsB,CAAE,CA9HX,CA8HW,KACxB,IAAQ,CAAE,SACN,CAAE,SACF,CAAE,WACF,CAAE,WACF,CAAE,YACF,CAAE,SAAQ,CAAE,eACZ,CAAE,YACN,GAIA,GAA6B,CAAE,SAC7B,CAAE,WACF,CAAE,SAAQ,CAAE,gBAQd,GAA8B,CAAE,QAC9B,CAAE,SACA,CAAE,UAAU,KAAM,CAAE,uBAAwB,CAAE,WAAW,EACzD,CAAE,UACN,KAAY,CAAE,mBACd,KAAY,CAAE,WACd,SAAgB,CAAE,qBAClB,CAAK,EACL,GAIA,GAAqB,CAAE,UACvB,KAAQ,CAAE,kBACV,KAAQ,CAAE,WACV,2CACA,CAAC,EACD,GAAsB,CAAE,UACxB,KAAQ,CAAE,mBACV,MAAS,CAAE,YAA2B,CAAE,oBACxC,SAAY,CAAE,sBACd,2CACA,CAAC,EACD,GAAqB,CAAE,UACvB,KAAQ,CAAE,kBACV,KAAQ,CAAE,YAA2B,CAAE,oBACvC,SAAY,CAAE,WACd,2CACA,CAAC,EACD,GAAyB,CAAE,UAC3B,KAAQ,CAAE,uBACV,WAAc,CAAE,WAChB,SAAY,CAAE,WACd,KAAQ,CAAE,WACV,CAAC,EACD,GAA2B,CAAE,UAC7B,KAAQ,CAAE,yBACV,WAAc,CAAE,WAChB,SAAY,CAAE,WACd,OAAU,CAAE,YACZ,sBACA,QAAW,CAAE,uBACb,2CACA,CAAC,EAGD,GAA8B,CAAE,UAChC,KAAQ,CAAE,oBACV,QAAW,CAAE,WACb,2CACA,CAAC,EACD,GAA4B,CAAE,UAC9B,KAAQ,CAAE,kBACV,QAAW,CAAE,SACT,CAAE,WACF,CAAE,QAAO,CAAE,qBACf,EACA,2CACA,CAAC,EACD,GAAiC,CAAE,UACnC,KAAQ,CAAE,uBACV,QAAW,CAAE,SACT,CAAE,WACF,CAAE,QAAO,CAAE,kBACf,EACA,2CACA,CAAC,EACD,GAA4B,CAAE,UAC9B,KAAQ,CAAE,kBACV,QAAW,CAAE,YACb,2CACA,CAAC,EACD,GAAwB,CAAE,SAC1B,GACA,GACA,GACA,GACA,EAqBA,qBACA,oDACA,iBACA,uBACA,gCACA,wBACI,wEACJ,qCACA,0BACI,2IACJ,UAEA,OAEA,CAiFA,IAAI,GAAK,4BACL,GAAO,mBAAsB,GAAM,EACnC,GAAO,EAD2B,KAC3B,IAAc,IAEzB,QAFgC,SAEW,GAC3C,OADsD,KACtD,CACA,kBACA,UACG,EACH,OAAY,KAAM,GAAK,UAAW,EAClC,KAAS,EAAG,IACZ,CADY,GACZ,kBACA,CACA,qBACA,OAAW,GAAW,YAAkB,GACxC,CACA,EACA,EAAM,GA4KN,CA/K+C,CAG5C,OAAU,GA4Kb,GACA,cACA,oBACC,EACD,MACA,yDAA+F,EAO/F,OANA,uBACA,wBAEA,YACA,mCAEA,CACA,CAwBA,IAAI,GAAK,4BACL,GAAO,mBAAsB,GAAM,EACnC,GAAO,EAD2B,KAC3B,IAAc,IAEzB,QAFgC,SAEW,GAE3C,OAFsD,KAEtD,SAAgB,0BAAmC,EAAI,EACvD,OAAY,KAAM,GAAK,UAAW,EAClC,KAAS,EAAG,GACZ,CACA,CAFY,MAEZ,cACA,OAAW,GAAW,YAAkB,GACxC,CAIA,QAL+C,wBAK/C,GACA,oCAAoD,EACpD,CAIA,OALyD,CAKzD,CACA,OACA,eACA,iBACA,qBACA,iBAEA,CACA,EAcA,iBACA,oBACA,wBAWA,OATA,6BACA,oBACA,OACA,aACA,SAAgB,WAAc,eAC9B,UAAwB,sBAA4B,CAAI,gBACxD,CACA,CACA,EACA,CACA,CA3BA,EAAM,GAqvBN,EArvBG,OAAU,KAsvBb,MACA,EAKA,OACA,QALA,oBACA,IACA,GACA,CAAG,EAGH,UACA,QACA,CACA,CAjZyB,GAAiB,CAAG,aAAH,EAAG,QAA2B,EA0bxE,cACA,QACA,qGACA,CAGA,eACA,cACA,oBACC,EACD,SACA,oCACA,yCACA,OASA,OANA,yBACA,sBAEA,YACA,iCAEA,CACA,CAGA,aACA,WACA,SACA,aACA,UACA,SACC,EACD,+BACA,oBAeA,CAdA,UACA,IACA,QACA,SAAgB,WAAc,eAC9B,KACA,MACA,UACA,CACA,CAAM,SACN,OACA,EAAM,OACN,OACA,CACA,IAEA,CAG0B,GAAkB,CAAG,aAAH,EAAG,QAA2B,EAA1E,IAihBI,GAAK,+BACL,GAAO,mBAAsB,GAAM,EACnC,GAAO,EAD2B,KAC3B,IAAc,IAEzB,QAFgC,SAEc,GAC9C,OADyD,KACzD,CACA,WACA,WACA,QACA,wCAA4C,EAAS,IAAI,GACzD,GACM,EACH,EACH,OAAY,KAAM,GAAK,kBAAkB,EACzC,KAAS,EAAG,IACZ,CADY,GACZ,YACA,eACA,CACA,qBACA,OAAW,GAAW,YAAkB,GACxC,CAIA,QAL+C,2BAK/C,GACA,oCAAoD,IAAK,yDAKzD,SACA,OACA,eACA,qBACA,iBACA,iBACA,uBACA,uBAEA,CACA,EACA,EAAM,GAIN,EAJG,EAIC,GAAK,EAJI,KAIJ,cACL,GAAO,mBAAsB,GAAM,EACnC,GAAO,EAD2B,KAC3B,IAAc,IAEzB,QAFgC,SAEI,GACpC,OAD+C,KAC/C,CACA,WACA,iBACA,mDAAuD,EAAS,KAAK,yDAA4E,aAA0B,GAAG,EAC3K,EACH,OAAY,KAAM,GAAK,UAAW,EAClC,KAAS,EAAG,IACZ,CADY,GACZ,YACA,qBACA,CACA,qBACA,OAAW,GAAW,YAAkB,GACxC,CAIA,QAL+C,iBAK/C,GACA,oCAAoD,IAAK,4DAKzD,SACA,OACA,eACA,qBACA,iBACA,uBACA,mCAEA,CACA,EACA,EAAM,GAuDN,EAvDG,EAuDH,KAvDa,uBAslBb,qBAGA,EACA,EAHA,oBACA,gBAGA,KACA,KACA,oBACA,IACA,SACA,aAEA,cACA,SACA,OAGA,UAFA,kBAIA,CAAM,SACN,UACA,CACA,CACA,oBACA,IACA,SACA,aAEA,cACA,SACA,OAGA,UAFA,kBAIA,CAAM,SACN,UACA,CACA,CACA,2BACA,cACA,IACA,MACA,WACA,MACA,CACA,MACA,WACA,MACA,CACA,SACA,aAEA,SACA,aAEA,WAAgB,YAAiB,oBACjC,YAAyC,mBAAkC,EAC3E,YAAyC,mBAAkC,EAC3E,CACA,SACA,mBAEA,OACA,SACA,SACA,WACA,QAGA,SACA,SACA,KACA,YAGA,CAAQ,SACR,UACA,CACA,CAAK,CACL,SACA,WACA,UACA,CACA,CAAG,CACH,CA/hB0B,GAAkB,CAAG,aAAH,EAAG,QAA2B,EAmuB1E,OAA0B,GAAkB,CAAG,aAAH,EAAG,QAA2B,EAC1E,mBACA,QACA,QACA,aACA,SACA,SACA,WACA,aACA,cACA,UACA,sBACA,yBACA,gCACA,yBACA,gCACA,oCACA,2BACA,UACA,WACA,eACA,WACA,SACA,gBACA,2BACA,CAAI,EAAI,CACR,KACC,EACD,OACA,UAAc,GAAoB,CAClC,qBADkC,MAElC,EACA,qCACA,CAAK,EAEL,MAp0HA,UACA,QACA,WACA,YACA,UACC,EACD,MACA,OACA,+BACA,wBAEA,wCACA,iBAAgC,EAAI,KACpC,GACK,EAAI,EAET,0DAAkG,SAClG,YACA,2BAA4C,EAAI,KAChD,GAEA,GACA,CAEA,8BAAoD,qBACpD,YACA,yBAAyC,EAAI,MAE7C,GACK,EAAI,EAET,EAqyHA,CACA,QACA,YACA,UACA,UAAgB,kBAChB,CAAG,EACH,WA3uHA,CACA,eACA,SACA,CAAE,EAAI,SACN,EAGA,GAGS,IAAK,iBALd,EAMA,EAguHA,GACA,EAh/EA,UACA,SACA,QACC,EACD,oCACA,UAAc,GAAkB,CAChC,SACA,KAFgC,GAEhC,oCACA,CAAK,EAEL,oCACA,UAAc,GAAkB,CAChC,SACA,KAFgC,GAEhC,wDACA,CAAK,EAEL,6CACA,UAAc,GAAkB,CAChC,SACA,KAFgC,GAEhC,yBACA,CAAK,EAEL,mBACA,6BACA,UAAgB,GAAkB,CAClC,SACA,KAFkC,GAElC,yBACA,CAAO,EAEP,OACA,cACA,gBACA,UACA,CACA,YACA,gBACA,EACA,CAEA,CACA,qBACA,eAtQA,GACA,qBACA,cAEA,gBACA,iBAEA,uBACA,uCACA,cACI,QACJ,iDAEA,WAEA,OAEA,EAqPA,YACA,eACA,UAAgB,GAAkB,CAClC,SACA,KAFkC,GAElC,uDACA,CAAO,EAEP,iCAxIA,KACA,MACA,4CACA,KACA,gBACA,SAAY,0DAA2D,EACvE,UACA,aACA,QACA,cACA,SACA,CAAS,EACT,KAEA,YACA,QACA,YACA,WACA,CAAc,mBAA6B,IAC3C,SArHA,GACA,UACA,SACA,gBACA,MACA,IACA,gBACA,CAAM,SACN,4BAAsC,MAAe,EACrD,CACA,mBACA,YACA,aACA,yDACA,QAAuB,qBAA2B,MACxC,CACV,kBACA,YACA,qEAGA,QACA,YACA,OACA,uBACW,CACX,CACA,KAEA,cACA,MACA,EACA,EACA,IACA,uBACA,YAAoC,mBACpC,CAAU,SACV,0CAAwD,MAAe,EACvE,CACA,oBACA,wCAAsD,MAAe,GAErE,yDACA,QACA,aACA,WACA,CAAW,OACD,wDACV,QACA,YACA,cAvlBA,GACA,IACA,kCACA,CAAI,SACJ,gDACA,CACA,EAklBA,MAEA,CAAW,MACD,CACV,kBACA,YACA,6EAGA,QACA,YACA,OACA,uBACW,CACX,CACA,KACA,CACA,QACA,yCAAqD,WAAa,EAElE,CACA,CACA,QACA,EA2CA,GACA,EACA,CAAS,EACT,KAEA,iBACA,YACA,QAA8B,2BAA4B,EAC1D,KACA,CACA,QACA,iBACA,SACA,CAAc,mBAA6B,IAC3C,MACA,aAAiB,oBAA4B,KAC7C,iBACA,aACA,WACA,MACA,EAAe,EAGf,CAAS,EACT,QACA,YACA,kBACA,mBACA,cACA,kBACA,+DACA,CAAe,EAEf,eAAoB,uBAA+B,EACnD,OACA,iEACA,mBACA,aACA,WACA,6CACA,0DACA,EAAc,CACd,mBACA,aACA,WACA,QACA,CACA,CAAW,CACX,CAAS,EACT,KAEA,gBACA,WACA,WACA,KAEA,SAEA,cACA,kBACA,6BAAwC,EAAiB,EAChD,CAET,CACA,CACA,QACA,EAmDA,YACA,OACA,CAAK,aACL,EAA6B,GAAiB,CAC9C,QACA,KAF8C,EAEhC,CAAE,WAChB,CAAK,EACL,cACA,UAAgB,GAAkB,CAClC,SACA,KAFkC,GAElC,wDACA,cACO,EAEP,OACA,gBACA,WACA,gBAEA,CACA,0BACA,EA26EA,CACA,eAAc,sBAA0B,CACxC,OACA,CAAG,EACH,WACA,qBACA,eACA,YACA,YACA,OAAmC,wCAAyC,EAC5E,KAEA,aACA,iCAAwC,sBAA0B,CAClE,CAAS,CACT,wBACA,CACA,CAAK,EACL,SACA,eACA,aACA,qBAAkD,EAAY,EAC9D,SACA,mBACO,IACP,qCACA,YACA,QACA,OACA,gBACA,8BACW,CACX,2CACA,+BACS,EACT,GACA,eACA,YAn7BA,CACA,QACA,aACA,cACC,SARD,MASA,GATA,YASA,GATA,SAkBA,CACA,OAJA,iCACA,sBACA,mBAEA,cACA,aACA,UACA,YACA,eACA,OACA,gBACA,OACA,0BACA,WAAwB,GAAS,yBAEjC,wBACA,OACA,wBACA,OACA,QACA,YAEA,SAEA,sCADA,EACoE,EAEpE,CACA,CAAK,EACL,oBAAuC,aAAe,oBAAqC,QAAmB,CAAI,gCAClH,EAlCA,CACA,aACA,iBACA,CAgCA,EA04BA,OAAyC,6BAAgC,GAEzE,CACA,QAAoB,4CAAoF,CACxG,eACA,mBACA,CAAU,QACV,QACA,8BACA,eACA,YACA,YACA,OACA,qCACA,WACA,CAAiB,EACjB,KACA,oBACA,WACA,CAAiB,CACjB,sBACA,2BACA,CAAiB,CACjB,mBAEA,WACA,MACA,2DACA,CACA,CAAiB,CACjB,wBACA,gEACA,CAAiB,CAEjB,2BACA,iCACA,sDACA,wCACA,oDACA,gDACA,2CACA,8BACA,6BACA,CACA,CAAa,EACb,SACA,eACA,cACA,qBAEA,eACA,yBACA,OACA,GAxgGA,UACA,YACA,cACA,OACA,OACA,kBACA,mBACA,gBACA,OACA,aACC,EACD,YACA,wBACA,UAAgB,GAAoB,CACpC,qBADoC,CAEpC,QACA,sCACA,CAAO,EAEP,OACA,UAAgB,GAAoB,CACpC,qBADoC,CAEpC,QACA,gCACA,CAAO,CAEP,CACA,YACA,mBACA,UAAgB,GAAoB,CACpC,qBADoC,GAEpC,QACA,sCACA,CAAO,EAGP,YACA,mBACA,UAAgB,GAAoB,CACpC,iBACA,IAFoC,EAEpC,EACA,+BACA,CAAO,EAGP,YACA,mBACA,UAAgB,GAAoB,CACpC,iBACA,IAFoC,EAEpC,EACA,+BACA,CAAO,EAGP,YACA,mBACA,UAAgB,GAAoB,CACpC,qBADoC,OAEpC,QACA,0CACA,CAAO,EAGP,YACA,mBACA,UAAgB,GAAoB,CACpC,qBADoC,QAEpC,QACA,2CACA,CAAO,EAGP,YACA,qBACA,UAAgB,GAAoB,CACpC,iBACA,IAFoC,EAEpC,EACA,iCACA,CAAO,EAGP,YACA,wBACA,UAAgB,GAAoB,CACpC,qBADoC,EAEpC,QACA,uCACA,CAAO,EAEP,OACA,UAAgB,GAAoB,CACpC,qBADoC,EAEpC,QACA,iCACA,CAAO,CAEP,CACA,OACA,YACA,wBACA,OACA,OACA,kBACA,mBACA,2CACA,OACA,sBACA,CACA,EA45FA,GACA,cACA,SACA,mBACA,cACA,SACA,CAAe,CACf,EAAa,CACF,GAEX,OACA,QACA,gBAhVA,CACA,QACA,kBACA,oBACA,SACA,YACA,cACC,EACD,IASA,EATA,OACA,sBACA,SACA,GACA,CACA,CAAG,EACH,KACA,UACA,KAEA,aACA,gBACA,SACA,aAEA,UAEA,CACA,2BACA,eACA,aACA,UACA,iBACA,wBACA,YACA,aACA,KAEA,uBACA,IACA,kBACA,WACA,iCACA,wBACA,oBACe,EACf,oBAEA,WACA,uBACA,wBACA,oBACA,8BACa,GAEb,KAEA,kBACA,iBACA,YACA,WACA,aACA,cAA2C,oBAA0B,CACrE,CAAa,EACb,KACA,CACA,WACA,YACA,WACA,aACA,cACA,oBACA,6BACA,CAAe,CACf,CAAa,EACb,KACA,CACA,IACA,eArrBA,CACA,WACA,QACC,EACD,iBACA,WACA,cAAgC,oBAA6B,EAE7D,WACA,WACA,cACA,oBACA,6BACA,CAAK,EAEL,MAAiB,GAAS,cAC1B,qBAAoD,GAAkB,CAAG,QAAS,KAAZ,GAAY,EAAU,EAAI,GAAc,CAAG,cAAH,KAAG,EAA6B,EAC9I,kBACA,cACA,WACA,gBACA,cACK,EAEL,OACA,iBACA,wBACA,WACA,YACA,CACA,EAupBA,CACA,WACA,OACA,CAAa,EAEb,GADA,aACA,iBACA,MAAsC,KACtC,KADgD,CAChD,GACA,IACA,mBACA,eACA,YACA,YACA,OACA,0BACA,WACA,CAAqB,EACrB,8BACA,8BACA,oBACA,iCACA,CACA,CACA,CAAiB,EACjB,SACA,0CAAmE,EAAa,OAChF,IACA,WACA,KACA,mBACA,QACA,CAAqB,EACrB,YACA,IACA,IACA,gBACA,IACA,YACA,YACA,sBACA,4BACA,CACA,CACA,CAAyB,EAEzB,CAAsB,SACtB,CACA,CAAmB,CACnB,IACA,WACA,aACA,OACA,CAAqB,EACrB,YACA,GACA,EAEA,CAAe,CACf,CACA,CAAY,SACZ,WACA,aACA,OACA,CAAa,CACb,CACA,KACA,CACA,iBA70EA,EA80EA,GACA,cACA,4BACA,oBACA,MAj1EA,CACA,cAFA,EAk1EA,SAh1EA,aACA,oCACA,6CACA,EA80EA,kDAEA,KAEA,SAEA,qCADA,EACoE,EAEpE,CACA,CAAK,CACL,QACA,KACA,GACA,CACA,CAAG,EACH,2BACA,eACA,aACA,wBACA,oBACA,SACA,YACA,CAAa,CACb,QACA,CACA,CAAW,GAEX,SACA,oBACA,SACA,YACA,CAAa,CACb,QACA,SACA,CACA,CAAW,GAEX,CAEA,CAAG,CACH,EAmJA,CACA,QACA,kBACA,oBACA,SACA,YACA,aACA,CAAa,EACb,WACA,oBAAqD,CACrD,aACA,CAAW,CACX,eACA,kBACA,CACA,EACA,CACA,eAAkB,qCAAwC,CAC1D,eACA,mBACA,CAAQ,SAAoB,oBAAsB,EAClD,eACA,SACA,WACA,cACA,UACA,UACA,WACA,eACA,WACA,eACA,YACA,mBACA,WACA,gBACA,YACA,kBACA,MACA,cACA,aACA,OACA,CAAO,CACP,CACA,CAAG,CACH,CACA,aACA,aACA,SACA,WACA,cACA,UACA,UACA,WACA,eACA,WACA,eACA,YACA,mBACA,WACA,gBACA,YACA,UACA,MACA,cACA,aACA,QACG,EACH,gBACA,mBACA,IAAY,qBAA+C,IAC3D,cACA,IAAY,qBAA6D,IACzE,qBACA,IAAY,qBAA6C,IACzD,aACA,IAAY,qBAAuD,IACnE,kBACA,IAAY,qBAA2D,IACvE,oBACA,IAAY,qBAA+C,IAC3D,cACA,IACA,UACA,UACA,CAAM,IACN,sCACA,IAAY,qBAAmD,IAC/D,gBACA,IAAY,qBAAqD,IACjE,iBACA,IACA,UACA,UACA,CAAM,IACN,yBACA,IACA,SACA,YACA,QACA,CAAM,WAzkBN,SACA,OACA,KACA,YACA,oBACA,mBACA,MACA,CACA,gBAGA,IACA,UAAc,UAAc,kBAC5B,GACA,UACA,WACA,UACU,GACV,sBAGA,qBAEA,CAAM,SACN,oBACA,UACA,iBACA,oBAEA,CACA,EACA,OACA,2BACA,SACA,GACA,CAAO,CACP,OACA,eACA,eACA,iBAEA,KACA,IACA,CACA,CAAK,EACL,cACA,KACA,+DAEA,qBACA,CAAK,CACL,WACA,KACA,cACA,oBAEA,CACA,CACA,GAghBA,uBACA,SACA,QACA,YACA,SACA,iBACA,eACA,cACA,mBACA,SACA,eACA,mBACA,aACA,CAAO,CACP,WACA,sBACA,cACA,uBACK,MASL,EAIA,EAZA,SACA,KACA,YACA,GACA,eACA,mBACA,aACA,EAEA,KACA,KACA,sBAEA,GACA,OACA,cACA,SACA,EACA,KACA,KACA,KACA,KACA,mBACA,aACA,QACO,EACP,aACA,eACA,eACA,KACA,sCACA,yBAAoD,SAAO,CAC3D,CACA,EACA,cACA,qBACA,qBACA,UACA,MACA,YACA,KACA,mCACA,+BAEA,4BACA,CAAiB,EACjB,iBACA,+BAEA,4BACA,CAAiB,CACjB,CACA,iDACA,OAEA,aACA,UACA,iBACA,MACA,+CACA,gBACA,MAEA,KAEA,MA/nCA,YACA,kBACA,UAAmB,yCAA2D,MAC9E,EA2nCA,KAEA,WACA,WACA,UACA,aACA,OACA,kBACA,gCAEA,CAAuB,EAEvB,EAAoB,IACpB,qBAA6C,UAAmB,EAEhE,KAEA,iBACA,aACA,UACA,+BAA8D,GAAO,EACrE,KAEA,mBACA,aACA,UACA,+BAA8D,GAAO,EACrE,KAEA,yBACA,GACA,yBACA,8CACA,yCAEA,KAEA,eACA,UACA,iBACA,kCACA,aACA,YACA,+BACA,iBACA,2BACA,mEACA,CAAmB,EACnB,KACA,CACA,gCACA,sBACA,aACA,+BAA8D,GAAO,EACrE,KAEA,aACA,aACA,UACA,KAEA,SAEA,mCAAyD,EAAgB,EAEzE,CACA,CAAa,CAEb,eACA,MACA,0CACA,SACA,QACA,iBACA,aACA,aAGA,YACA,qBAEA,mBAGA,gCACA,sBACA,UACA,aACA,OACA,kBACA,WACA,CACA,CAAiB,EACjB,MAEA,IACA,gBACA,IACA,YACA,YACA,6BACA,oBAA4C,aAAwB,CACpE,yBACA,YACA,CAAuB,CACvB,sBACA,8BACA,kDACA,uCACA,+CAEA,oBACA,kBAA0C,aAAwB,CAClE,uBACA,YACA,CAAuB,CAEvB,qCACA,0BACA,kCACA,2CACA,gDAEA,CAAmB,EAEnB,CAAgB,SAChB,EAAgB,OAChB,OACA,CAYA,GAXA,WACA,mBACA,eACA,QACA,gCACA,WACA,UACA,IACA,CAAiB,CACjB,0BACA,CAAe,EACf,gBACA,oBACA,2BACA,aAEA,gBACA,OACA,WACA,CAAmB,CAEnB,EAAgB,IAChB,UACA,SAvuCA,CACA,UACA,QACA,YACA,cACC,EACD,SA2BA,OA1BA,QACA,iBACA,UAAgB,mBAAoB,OACjC,EACH,YACA,QACA,YACA,kBACA,oBACA,iEACA,mBACA,wBACA,oBACA,oDACA,wDACA,SAEA,EAAU,CACV,mBACA,wBACA,oBACA,gBAEA,CAAO,CACP,CAAK,EAEL,CACA,EAqsCA,CACA,OACA,kBAAqD,CACrD,YACA,aACA,CAAmB,GAGnB,OACA,WACA,OACA,YACA,cACA,eACA,QACA,oBACA,WACA,UACA,0BACA,UACA,KACA,iDAEA,sCACA,CAAiB,CACjB,gCACA,0BACA,EACA,UACA,4BACA,OACA,2CACA,uDACA,yCAEA,eACA,IACA,SACA,eACA,mBACA,CAAkB,0BAAoB,EAAkB,CACxD,uBACA,4BACA,GACA,gBACA,iBACA,eACA,gBACA,mBACA,QACA,WACA,mBACA,sBACA,sBACA,CAAiB,EACjB,MACA,CACA,IACA,WACA,cACA,eACA,QACA,gCACA,WACA,UACA,KAEA,CAAiB,EACjB,IACA,gBACA,IACA,YACA,YACA,6BACA,oBAA4C,aAA4B,CACxE,yBACA,YACA,CAAuB,CACvB,uCACA,+CAEA,oBACA,kBAA0C,aAA4B,CACtE,uBACA,YACA,CACA,CACA,CAAmB,GAEnB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,GACA,KACA,iCACA,UACA,CAAiB,EACjB,KACA,KACA,yBACA,eACA,WACA,QACA,OACA,YAKA,cACA,UACA,cACA,UACA,KACA,iCACA,UACA,CAAmB,CACnB,WACA,gCACA,QACA,kBACA,EAAiB,CACjB,CAAgB,SAChB,UACA,EAAgB,OAChB,OACA,CACA,CACA,CAAW,GAGX,EACA,CACA,SACA,iBACA,eACA,cACA,oBACA,aACA,mBACA,cACA,uBACA,CAAK,CACL,CASA,YACA,mCAEA,OADA,sBACA,CACA,CACA,iBACA,4BACA,eACA,sBACA,uBACU,kBACV,gBAEA,CACA,CAAK,CACL,CACA,iBACA,4BACA,eACA,YACA,CACA,CAAK,CACL,CACA,eAA2B,EAC3B,4CAAuC,EAAW,CAClD,CACA,sBACA,cAAkB,CAClB,yBAEA,eACA,CAAI,EAAI,EACR,SACA,uBACA,cACA,WACA,iBACA,CAAO,CACP,qBAEA,GADA,aACA,uBACA,kBACA,KACA,WACA,mBACA,UACA,iBACA,CACA,CAAO,CACP,cACA,gBACA,wBACA,WACA,kBACA,CACA,CAAK,EACL,uBACA,uBACA,aACA,UACA,iBACA,UAA+B,GAAgB,qBAC/C,KAEA,iCACA,UACc,GAAgB,6BAC9B,wBACA,oBACe,GAEf,KAEA,uBACA,UACc,GAAgB,mBAC9B,wBACA,8BACe,GAEf,KAEA,iBACA,UACc,GAAgB,wBAC9B,aACA,oBACA,YACe,GAEf,KAEA,mBACA,UACc,GAAgB,eAC9B,wBACA,gBACe,GAEf,KAEA,aACA,UACc,GAAgB,qBAE9B,KAEA,mBACA,UACc,GAAgB,eAC9B,4BACA,SACA,kCACA,2CACkB,OAClB,0BACe,GAEf,KAEA,cACA,UACc,GAAgB,kBAC9B,4BACA,SACA,kCACA,2CACkB,MAClB,CAAe,GAEf,KAEA,SAEA,mCAAmD,EAAgB,EAEnE,CACA,CACA,CAAK,EACL,uFACA,CACA,4BACA,yCACA,CACA,8BACA,wCACA,uCACA,oCACA,+CACA,EACA,0CACA,gEACA,oDACA,IACA,WACA,+BACA,uCACA,cACA,yBAAkC,eAClC,sBACA,CAAO,EACP,+BAAkC,gCAAoD,CACtF,CAAK,CACL,CACA,8BACA,IACA,WACA,+BACA,uCACA,cACA,yBAAkC,cAClC,CAAO,EACP,yDACA,CAAK,CACL,CACA,sBACA,mCACA,CACA,gBACA,iCACA,iDACA,qCACK,EACL,kEACA,CACA,wBACA,MACA,wCACA,uCACA,oCACA,+CACA,EACA,0CACA,gEACA,oDACA,oBACA,wBAA0B,gCAAoD,EAC9E,CACA,+CACA,uCACA,cACA,yBAAoC,eACpC,sBACA,CAAS,CACT,EAEA,CACA,wBACA,MACA,wEACA,+CACA,cACA,yBAAkC,cAClC,CAAO,CACP,CAAK,CACL,CACA,EAoEI,GAAM,yBACN,GAAQ,mBAAsB,GAAO,EA2KzC,MA3KwC,GA2KxC,MACA,sBACA,KACA,QACA,4BACA,cACA,WACA,iBACA,CAAK,CACL,qBACA,qCACA,uBACA,KACA,WACA,mBACA,8BACA,iBAEA,CAAK,CACL,cACA,MAWA,gCAXA,CACA,iBACA,wBAEA,eACA,kBAEA,CACA,CAAG,CACH,CAhKA,EAvCY,MAuCR,CAvCQ,EAuCL,CAvCK,CAAc,IA0U1B,OAnSe,EAvCmB,KA2UlC,sBACA,kBACA,4BACA,uBACA,kBACA,mBAAwC,GAAiB,WACzD,CACA,CAFyD,CAGzD,CAyLA,yBAoJA,iBACA,cACA,CACA,iBACA,qBACA,qBACA,uBACA,MACA,uBACA,aACA,MACA,CACA,gBACA,kCACA,GACA,gCACA,GAGA,MACA,CACA,OACA,CACA,CAAK,GACL,oCACA,CACA,iBACA,MACA,uCACA,wBACA,wBAEA,oBADA,mBACA,CACA,+CACA,uCACA,cACA,yBAAgC,eAChC,sBACA,CAAK,CACL,CAAG,CACH,CACA,iBACA,8BACA,0BAGA,aADA,UAEA,iBACA,iBAIA,CAQA,iBACA,gBAgBA,OAjiBA,EAkiBA,gCACA,GAniBA,KACA,IACA,GACA,mBAEA,OAEA,IA6hBA,2BACA,cACA,MACA,UAAc,UAAc,eAC5B,MACA,UACA,MACA,CACA,gCACA,GACA,YAEA,CACA,CAAG,EACH,EAjCA,uCACA,CACA,kBAAmD,EACnD,MACA,SAAU,sBAAwB,EAClC,UAEA,oBADA,mBACA,CACA,+CACA,uCACA,cACA,yBAAgC,eAChC,sBACA,CAAK,CACL,CAAG,CACH,CAjFA,GADA,GACA,CACA,kBACA,oBACA,2BACA,CAAC,EAyDD,GADA,GACA,CACA,oBACA,2BACA,CAAC,EC53KD,eACA,QACA,wEAAgG,2BAA8B,KAC9H,QACA,UACA,sBAAoD,kBAAkC,KACtF,QACA,SACA,EAAK,IACL,EAAG,WACH,CAGA,eACA,UACA,WACA,YACA,cACA,cACA,sBACA,sBACA,qBACA,iBACA,kBACA,SACA,eACA,CACA,CD2jLA,OACA,wCCvjLA,OAA4B,CAAC,UAC7B,MAAS,CAAC,UACV,QAAa,CAAC,WAId,KAAU,CAAC,qBACX,MAAW,CAAC,kBACZ,KAAU,CAAC,SAAQ,CAAC,WAAW,CAAC,sBAChC,CAAG,CACH,CAAC,EACD,GAAkC,CzC+MlC,EACA,cACA,ayCjNgE,EzCiNhE,EACA,cACC,mBAAc,4BAAkC,IACjD,qBACA,QACA,iBACA,OACA,kBACA,UAAiB,GAAa,CAC9B,QAD8B,EAC9B,WACA,MACA,oBACA,oBACA,kBACA,eACA,+BACA,CAAO,CACP,EAEA,IACA,eA/LA,CACA,OACA,SACC,EACD,IACA,MAAkB,QAAgB,IAClC,WACA,SAEA,gBA7CA,CACA,QACA,SACC,EACD,gBAAqC,WAA4B,EACjE,cACA,MJmSuB,GInSM,MAAQ,eAAR,CAAQ,MAA4B,EAEjE,cACA,EAoCA,OAA2B,WAAe,CAC1C,CAAI,SACJ,GAAQ,GAAc,qBJ0PC,GI1P+C,yBACtE,OAEA,WAAc,GAAc,MAAG,KAAH,GAAG,EAAoB,CACnD,CACA,EA+KA,CACA,OACA,QACA,CAAK,EACL,OACA,kBACA,UAAiB,GAAa,CAC9B,aACA,MACA,oBACA,oBACA,kBACA,eACA,OACA,iCACA,CAAO,CACP,CACA,CAAI,SACJ,OACA,kBACA,UAAiB,GAAa,CAC9B,qBACA,MACA,oBACA,oBACA,kBACA,eACA,+BACA,CAAO,CACP,CACA,EACA,EyCpQgE,CAChE,eACA,kCACC,EAGD,aACA,KACA,QACA,UACC,EACD,OACA,oBACA,yBACA,wCACA,CACA,CA0GA,aACA,mBACA,+BACA,eACA,gBACA,aACA,CACA,gCACA,2CAEA,yCACA,aAmjBA,mCAljBA,OAEA,4CACA,CACA,eACA,4BAEA,wBACA,oCAEA,SACA,OACA,SACA,YACA,cACA,OACA,OACA,mBACA,kBACA,gBACA,iBACA,OACA,mBACG,EACH,sBACA,aACA,WACA,GACA,QACA,2BACA,cACA,CAAO,EAEP,0CACA,QACA,2BACA,yBACA,sDACA,CAAO,EAEP,6CACA,2CACA,UAAgB,GAA8B,CAC9C,8BAD8C,iCAE9C,CAAO,EAEP,2CACA,UAAgB,GAA8B,CAC9C,8BAD8C,iCAE9C,CAAO,EAEP,OAEA,mBAEA,mCACA,sFACA,sJACA,wBACA,oDAEA,aACA,cACA,QACA,oBACA,mBACA,OACA,OAEA,wGACA,0EACA,gFACA,oFAEA,kDAA8F,oBAAsB,OAEpH,kBAzYA,CACA,SACA,8BACC,EACD,SACA,aAAe,aAAgB,IAC/B,UACA,aACA,QAAwB,wBAAyB,EACjD,KAEA,YACA,qCACA,QAA0B,8BAAwC,EAClE,KACA,CACA,QACA,YACA,kBACA,UACA,eACA,WACA,OAAyB,wBAEzB,aACA,OACA,iBACA,WACA,sDAAqF,qCAAkD,SAAS,GAAyB,SAAa,EAEtL,WAFyK,EAEzK,sEAEA,CAEA,YACA,yBACA,UAA4B,GAA6B,CACzD,8BADyD,iDAEzD,CAAmB,EAEnB,mBACA,gBACA,OACA,mBACA,aAAqC,yBACrC,CAEA,iBACA,iBACA,OACA,mBACA,aAAqC,yBACrC,CAEA,SACA,UAA8B,GAA6B,CAC3D,8BAD2D,QAC3D,EAA+D,YAAe,kBACzD,CAErB,CAEA,CACA,CAAW,CACX,CAAS,EACT,KAEA,kBACA,SACA,KACA,eACA,eACA,WACA,UACA,KAEA,iBACA,QACA,gBACA,gBACA,UACA,gBACA,gCACA,CACA,CAAe,EACf,KAEA,SAEA,iCAAmD,EAAiB,EAEpE,CAEA,MACA,cACA,UAAsB,GAA6B,CACnD,8BADmD,kDAEnD,CAAa,EAEb,QACA,iBACA,UACA,6CACA,CAAW,CACX,EAAU,IACV,QACA,iBACA,UACA,8BACA,CAAW,EAEX,KACA,CACA,WACA,eACA,EACA,QACA,gBACA,gBACA,gCACA,CAAa,EAEb,QACA,YACA,0BACA,gCACA,CAAa,EAGb,KAEA,SAEA,iCADA,EAC8D,EAE9D,CAEA,QACA,EAgQA,CACA,SACA,0BACA,CAAO,CACP,EAOA,OANA,mBACA,qBACA,eACA,2BACA,2BAEA,GACA,eACA,UAAgB,4DAzMhB,UACA,OACA,8BACA,uBACC,EACD,MACA,yDACA,KACA,WACA,OAAa,gDAEb,mBACA,MACA,SACA,eACA,4BACA,QAA4B,+BAAgC,EAE5D,QACA,YACA,0BACA,wBACS,EAGT,WACA,OACA,YACA,qBACA,cACA,EAGA,OADA,QAEA,WACA,WACA,YACA,OACA,YACA,qBACA,cACA,CACA,gBACA,UAAkB,GAA8B,CAChD,8BADgD,mCAEhD,CAAS,CACT,SACA,OACA,YACA,eAA2B,gBAA2B,CACtD,cACA,CACA,CACA,CACA,SACA,eACA,4BACA,QAA0B,+BAAgC,EAE1D,QACA,gBACA,UACA,YACA,0BACA,wBACA,qBACA,CACA,CAAO,EAGP,WACA,OAAa,2CAEb,aACA,UACA,WACA,WACA,eACA,OAAe,qCACf,YACA,OACA,QACA,aACA,gBACA,UACA,gBAEA,CAAS,CACT,cACA,CACA,SAEA,UAAgB,GAA8B,CAC9C,8BAD8C,eAC9C,EAAwD,EAAiB,EAClE,CAEP,CACA,EAwG6E,CAC7E,OACA,2BACA,kDACS,EACT,OACA,MACA,KACA,QACA,cACA,YACA,eACA,CAAW,CACX,oBACA,CACA,CACA,kBACA,OACA,MACA,KACA,sEACA,mBACA,aACA,gBACA,UACA,mCACA,0BAEA,EAAc,CAAI,mBAClB,CAAW,CACX,UACA,CAEA,mBACA,OACA,QACA,KACA,eACA,iBACa,CACb,WACA,CACA,iBACA,+BACA,8BAEA,EACY,CACZ,KACA,aACA,gBACA,UAA0B,iBAC1B,CAAa,CACb,OACA,CACA,gBACA,UACA,iBACA,+BACA,6BACA,mDACA,CACA,EACA,CACW,CACX,UACA,CAEA,SAEA,iCADA,EAC8D,EAE9D,CACA,CACA,wBACA,wCAkBA,EAjBA,IAAY,mBAAuB,gBACnC,iBAAY,WAAmC,MAAQ,GAAa,CACpE,SADoE,MACpE,MACA,yBACA,qBACO,EACP,QAAe,GAAc,iCAC7B,OACA,yBACA,0BAAiC,GACjC,IAEA,kBAH0D,OAG1D,CACA,wBACK,EACL,CAAY,iBAAsC,EAClD,eAWA,MATA,gMACA,GAA2B,WAC3B,kGACA,oHAEA,2FACA,iHAGA,CACA,0CACA,2EACA,CACA,wBACA,WAAsB,KACtB,KADgC,IAChC,6BACA,wCAEA,iDACA,MACA,OACA,wBACA,4BAA0D,KAC1D,KADoE,IACpE,gBACA,0BAEA,CAAO,EACP,iCACA,OACA,sEACA,6EACA,CAAO,CACP,mBAAiB,gBAAwB,CACzC,aAAqB,UAA0B,CAC/C,SAAiB,uBAA4B,CAC7C,eACA,WACA,wBACA,kBACA,CACA,CACA,sBAiEA,EAGA,EAnEA,qBACA,+BA4BA,OACA,OA5BA,oBACA,SAQA,GAPA,WAA+B,uCAA+C,EAC9E,QACA,WACA,kBACA,iBACa,EAEb,YACA,yBACA,WACA,iBACA,KACe,EAGf,WACA,cACA,4BACA,cACA,oBACA,oCACW,EACX,SACA,CACA,CAAO,EAGP,kBACA,0BACA,oBAEA,CACA,SAAY,cAAiB,gBAC7B,GACA,KACA,UAEA,qDAAiE,kBAAsB,MACvF,EACA,iBAAY,WAAmC,MAAQ,GAAa,CACpE,SADoE,MACpE,MACA,yBACA,qBACO,EACP,QAAe,GAAc,iCAC7B,OACA,yBACA,0BAAiC,GACjC,IAEA,yBAHiE,CAIjE,wBACK,EACL,CAAY,iBAAsC,EAClD,KACA,YACA,GACA,oBACA,uBACA,EAEA,KACA,0BAAY,GAA2B,cAEvC,OACA,qBACA,qBACA,eACA,oCACA,eACA,UACA,WAAmC,2BAAmC,EACtE,MACA,CACA,cACA,gBACA,UACA,WAAmC,2BAAmC,EACtE,MACA,CACA,IACA,KACA,WACA,yBACA,SACe,GAEf,gBACA,GACA,sDACA,6DACA,EACA,wEACA,IACA,QACA,kFAEA,IAGA,mBAIA,GAHA,wCACA,wBAEA,+BACA,OAEA,oBACA,WACA,WACA,kBACA,oBACe,EAEf,SACA,2BAEA,4BACA,mBACA,cAEA,gCACA,CACA,gBACA,GAAoB,KACpB,KAD8B,IAC9B,gBACA,OACA,EACA,cACA,WACA,gBACA,cACA,eACA,uBACA,UAA8B,GAAwB,CACtD,OACA,aAFsD,sBAGtD,CAAqB,EAErB,cACA,UAA8B,GAAwB,CACtD,OACA,aAFsD,0BAGtD,CAAqB,EAErB,8CACA,UAA8B,GAAwB,CACtD,OACA,aAFsD,qCAGtD,CAAqB,CAErB,OACA,QACA,gBACA,UACA,qBACA,6CACA,CACA,EACA,WACA,8FACA,+BACA,WACA,uBACA,wBACA,gBACA,yBACA,mCACuB,EAEC,GAAc,uBACtC,WACA,iBACA,wBACA,4BAAuE,KACvE,KADiF,IACjF,gBACA,0BACuB,GAGvB,QACA,CACA,WACA,iDACA,+EAEA,WACA,uBACA,wBACA,gBACA,yBACA,iDACA,CAAiB,EACjB,6FAA2J,GAAc,uBACzK,WACA,iBACA,wBACA,4BAAkE,KAClE,KAD4E,IAC5E,gBACA,0BACmB,CAEnB,CAEA,CAAW,CACX,SACA,QACA,WACA,cACA,eACA,WACA,OACA,4CACA,mDACA,CAAe,CACf,6BAA8C,GAAmB,GACpD,CACb,CACA,CAAS,GAET,mBAAiB,gBAAwB,CACzC,aAAqB,UAA0B,CAC/C,SAAiB,uBAA4B,CAC7C,UACA,CACA,CACA,EACA,GAA6B,CAAE,UAC/B,cAAiB,CAAE,qBACnB,kBAAqB,CAAE,qBACvB,sBAAyB,CAAE,UAC3B,cAAmB,CAAE,oBACrB,CAAG,YACH,0BAA6B,CAAE,UAC/B,iBAAsB,CAAE,oBACxB,CAAG,WACH,CAAC,YACD,GAA+B,CAAE,UACjC,GAAM,CAAE,qBACR,QAAW,CAAE,qBACb,MAAS,CAAE,qBACX,QAAW,CAAE,QACT,CAAE,UACN,QAAe,CAAE,UACjB,KAAc,CAAE,iCAChB,QAAiB,CAAE,qBACnB,cAAuB,CAAE,UACzB,UAAqB,CAAE,WACvB,KAAgB,CAAE,UAClB,CAAS,YACT,WAAoB,CAAE,QACZ,CAAE,UACZ,GAAgB,CAAE,qBAClB,KAAkB,CAAE,sBACpB,SAAsB,CAAE,UACxB,KAAoB,CAAE,WACtB,UAAyB,CAAE,UAC3B,CAAa,CACb,CAAW,GACX,SACA,CAAO,EACP,MAAa,CAAE,WACf,SAAgB,CAAE,UAClB,QAAiB,CAAE,QACT,CAAE,UACZ,MAAmB,CAAE,WACrB,QAAqB,CAAE,WACvB,aAA0B,CAAE,QACd,CAAE,UAChB,MAAuB,CAAE,WACzB,QAAyB,CAAE,UAC3B,CAAe,EAEf,CAAW,GACX,UACA,CAAO,YACP,cAAqB,CAAE,oBACvB,CAAK,GAEL,QACA,CAAC,EACD,GAA4B,CAAE,SAC5B,CAAE,UACJ,GAAQ,CAAE,qBACV,QAAa,CAAE,qBACf,MAAW,CAAE,qBACb,QAAa,CAAE,QACT,CAAE,UACR,MAAe,CAAE,UACjB,KAAgB,CAAE,gCAClB,QAAmB,CAAE,qBACrB,cAAyB,CAAE,UAC3B,KAAkB,CAAE,sBACpB,UAAuB,CAAE,qBACzB,CAAW,YACX,WAAsB,CAAE,QACZ,CAAE,UACd,MAAqB,CAAE,WACvB,GAAkB,CAAE,qBACpB,KAAoB,CAAE,iCACtB,SAAwB,CAAE,UAC1B,KAAsB,CAAE,qBACxB,UAA2B,CAAE,oBAC7B,CAAe,CACf,CAAa,GACb,SACA,CAAS,YACT,SAAkB,CAAE,UACpB,QAAmB,CAAE,QACT,CAAE,UACd,MAAqB,CAAE,WACvB,QAAuB,CAAE,WACzB,aAA4B,CAAE,QACd,CAAE,UAClB,MAAyB,CAAE,WAC3B,QAA2B,CAAE,UAC7B,CAAiB,EAEjB,CAAa,GACb,UACA,CAAS,YACT,cAAuB,CAAE,iCACzB,MAAe,CAAE,UACjB,CAAO,GAEP,QACA,CAAG,EACH,GACA,EACA,eACA,0BACA,CAyGA,eACA,4CACA,QACA,4BACA,iEACA,WACA,QACA,SACA,EAAO,EACP,GACA,EACA,CAGA,aACA,mBACA,+BACA,wCACA,eACA,gBACA,aACA,CACA,eACA,4BAEA,SACA,OACA,cACA,SACA,YACA,cACA,OACA,OACA,mBACA,kBACA,gBACA,iBACA,OACG,EACH,MACA,aACA,WACA,GACA,QACA,2BACA,cACA,CAAO,EAEP,0BACA,QACA,2BACA,yBACA,gDACA,CAAO,EAEP,IAAY,0BA1IZ,UACA,SACA,cACA,cACA,wBACC,EACD,0GACA,OAAa,6BAEb,SAOA,QAAe,kBAAgB,EAN/B,uBACA,MAAe;;AAEf,EACA,cAE+B,GAC/B,UACA,aACA,UAAkB,GAAkB,CACpC,cADoC,kCACuB,QAAQ,EACnE,QACA,CAAS,CAET,aACA,gBACA,eACA,WACA,kBAEA,QACA,UAAwB,GAA8B,CACtD,sBACA,CAAe,CAEf,CACA,CAAS,IAL6C,EAK7C,KACT,MAAmB,EAAK;AACxB,EAAE;;AAEF,EACA,KACA,CACA,iBACA,gBACA,eACA,WACA,kBAEA,YACA,UAAwB,GAA8B,CACtD,8BADsD,IAEtD,CAAe,CAEf,CACA,CAAS,WACT,MAAmB,EAAU;AAC7B,EAAE;;AAEF,EACA,KACA,CACA,WACA,UAAkB,GAA8B,CAChD,6BACA,CAFgD,CAIhD,SAEA,iCAA6C,EAAiB,EAE9D,CAIA,OACA,OAHA,MAAa,EAAU;AACvB,EAGA;AACA,EAAE,EAAK,IAEP,EA0DsD,QAAoC,gBAAqB,EAC/G,oCACA,GAEA,mBAEA,wBACA,mCACA,kJACA,4BACA,wBAEA,aACA,cACA,QACA,oBACA,mBACA,OAEA,SAEA,wBACA,EACA,UACA,cACA,qCACA,UAAoB,GAA8B,CAClD,qBACA,CAAW,EAEX,MAJkD,SAIlD,CACA,UAAoB,GAA8B,CAClD,0BACA,CAAW,EAEX,CAJkD,KAIlD,CAAiB,kBAEjB,mBACA,UAAkB,GAA8B,CAChD,8BADgD,EAEhD,CAAS,CAET,mBACA,UAAkB,GAA8B,CAChD,8BADgD,EAEhD,CAAS,CAET,SAEA,iCADA,EAC8D,EAE9D,CACA,CACA,oBACA,IAAY,mBAAiB,gBAC7B,iBAAY,WAAmC,MAAQ,GAAc,CACrE,qBACA,oBACA,qBACO,EACP,QAAe,GAAe,iCAC9B,OACA,yBACA,0BAAiC,GACjC,IAEA,kBAH2D,OAG3D,CACA,uBACA,CAAK,EACL,CAAY,eAAoC,EAChD,eACA,OACA,YACA,OACA,mCACA,2CACO,CACP,iCACA,wBACA,mBAAiB,gBAAwB,CACzC,aAAqB,UAA0B,CAC/C,eACA,WACA,SAAiB,uBACjB,CACA,CACA,sBA4BA,EA3BA,SAAY,cAAiB,gBAC7B,GACA,KACA,UAEA,qDAAiE,kBAAsB,MACvF,EACA,iBAAY,WAAmC,MAAQ,GAAc,CACrE,qBACA,oBACA,qBACO,EACP,QAAe,GAAe,iCAC9B,OACA,yBACA,0BAAiC,GACjC,IAEA,yBAHkE,CAIlE,wBACK,EACL,CAAY,eAAoC,EAChD,YACA,GACA,wBACA,6BAGA,KACA,OACA,qBACA,qBACA,eACA,eACA,UACA,WAAmC,2BAAmC,EACtE,MACA,CACA,cACA,gBACA,UACA,WAAmC,2BAAmC,EACtE,MACA,CACA,IACA,KACA,WACA,yBACA,SACe,GAEf,eACA,IACA,mCACA,2CACA,EAEA,mBACA,wCACA,wBAEA,+BACA,WACA,kBACA,iBACe,EAEf,SACA,2BAEA,4BACA,mBACA,aAEA,CAAW,CACX,SACA,WACA,cACA,eACA,WACA,OACA,CAAa,CACb,CACA,CAAS,GAET,mBAAiB,gBAAwB,CACzC,aAAqB,UAA0B,CAC/C,WACA,SAAiB,uBACjB,CACA,CACA,EACA,GAAqC,CAAE,UACvC,GAAM,CAAE,qBACR,QAAW,CAAE,qBACb,MAAS,CAAE,qBACX,QAAW,CAAE,QACT,CAAE,UACN,KAAY,CAAE,WACd,cAAqB,CAAE,WACvB,SAAgB,CAAE,UAClB,OAAgB,CAAE,QAAO,CAAE,YAC3B,eAAwB,CAAE,QAAO,CAAE,YACnC,aAAsB,CAAE,QAAO,CAAE,SAAQ,CAAE,WAAW,CAAE,uBACxD,CAAO,WACP,CAAK,GAEL,MAAS,CAAE,UACX,cAAmB,CAAE,WACrB,kBAAuB,CAAE,UACzB,CAAG,CACH,CAAC,EACD,GAAkC,CAAE,SAClC,CAAE,UACJ,GAAQ,CAAE,qBACV,QAAa,CAAE,qBACf,MAAW,CAAE,qBACb,QAAa,CAAE,QACT,CAAE,UACR,KAAc,CAAE,WAChB,cAAuB,CAAE,qBACzB,MAAe,CAAE,WACjB,SAAkB,CAAE,UACpB,OAAkB,CAAE,QAAO,CAAE,YAC7B,eAA0B,CAAE,QAAO,CAAE,YACrC,aAAwB,CAAE,QAAO,CAAE,SAAQ,CAAE,WAAW,CAAE,uBAC1D,CAAS,WACT,CAAO,GAEP,MAAW,CAAE,UACb,cAAqB,CAAE,WACvB,kBAAyB,CAAE,UAC3B,CAAK,WACL,CAAG,EACH,GACA,EAiEA,SACA,mBACA,+BACA,eACA,gBACA,aACA,CACA,eACA,4BAEA,2BACA,MACA,0DACA,CACA,4BACA,MACA,uDACA,CACA,eACA,SACA,UACA,cACG,EACH,sCACA,UAAgB,GAAkC,CAClD,uBACA,OAFkD,CAElD,aACA,+CACA,QACA,CAAO,EAEP,oBAAY,WAAmC,MAAQ,GAAc,CACrE,SADqE,MACrE,MACA,mBACA,qBACO,EACP,QAAe,GAAe,yBAC9B,MACA,mBACA,QACA,wBACA,oCACA,wBACO,CACP,yBACA,0BAAiC,GACjC,IAEA,cACA,IAJ2D,EAI3D,kBACK,EACL,OACA,sCACA,eAAgC,8BAAuC,OACvE,aAAqB,UACrB,CACA,CACA,EACA,GAAwC,CAAE,UAC1C,KAAQ,CAAE,QAAO,CAAE,UAAU,UAAW,CAAE,QAAO,CAAE,YAAY,GAC/D,MAAS,CAAE,UAAU,cAAe,CAAE,WAAW,WACjD,CAAC,EAGD,gBAAkC,MAClC,QzCt1B6B,EyCu1B7B,MAA6C,MAA7C,GzCt1BA,EyCs1BwB,KzCv1BK,EyCu1BgB,iCzCt1B7C,0ByCs1B6C,gCAC7C,2CACA,8BACA,QACA,wBzC5yCA,SAAmB,CACnB,KyC2yCwC,EzC3yCxC,EACA,KAFmB,mBAEnB,EACA,+BACA,cACC,EACD,sBACA,SAEA,WACA,UAAc,GAAe,CAC7B,WAD6B,EACX,CAAa,0BAC/B,CAAK,EAEL,+BACA,UAAc,GAAe,CAC7B,WAD6B,EACX,CAAa,yCAAyC,EAAoB,0EACvF,EAGL,SADA,mBAEA,UAAc,GAAe,CAC7B,WAAkB,GAAa,yCAAyC,EAAoB,qBAAqB,GAAyB,uBACrI,EAEL,sBACA,UAAc,GAAe,CAC7B,WAAkB,GAAa,6CAA6C,GAAyB,uCAChG,EAEL,QACA,EyC6wCwC,CACxC,gBACA,yCACA,oBACA,CAAK,EAAE,EACP,qCACA,2BACA,aACA,CAAG,CACH,SAAiD,eACjD,YAAiB,EAAa,OAC9B,WAAY,EAAM,MAAQ,EAAQ,EAAE,EAAK,EACzC,UACA,gBACA,cACG,EACH,SAAuD,eACvD,YAAiB,EAAa,aAC9B,WAAY,EAAM,MAAQ,EAAQ,EAAE,EAAK,EACzC,UACA,gBACA,cACG,EACH,SAAsD,eACtD,YAAiB,EAAa,YAC9B,WAAY,EAAM,MAAQ,EAAQ,EAAE,EAAK,EACzC,UACA,cACG,EACH,UACA,cACA,YACA,0EAGA,6BACA,EACA,EACA,GAGA,MACA,EACA,gBACA,aACA,EAOA,OANA,kBACA,SACA,eACA,cACA,kBACA,uBACA,CACA,CACA,IACA,sBAEA,CAAC,ECl8CM,IAAM8B,GAAiB,CAC1BC,KAAM,SACNC,QAAS,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;IA0BV,CAAC,EACD,GCzBWC,GAAa,CACxBC,KADQC,EACAC,CADeH,OACPI,GAAG,CAACC,cAAc,EAAI,GACtCC,cAAe,QACnB,GAGaC,GAAU,OAAO,eAERC,GAAKlE,CAAY,EACnC,GAAM,UAAEmE,CAAQ,CAAE,CAAG,MAAMnE,EAAIoE,IAAI,GAE7BC,EAAS,MAAMC,GAAW,CAC5BC,MAD2BD,GACb,SAADV,MACbO,SAAU,CAACZ,MAAmBY,EAAS,CACvCK,KADyBjB,OACZ,CACjB,GAEA,OAAOc,GAAQI,sBACnB,CCfA,WAAwB,sBAAmB,EAC3C,YACA,KAAc,IAAS,WACvB,yBACA,uBACA,iBACA,iCACA,CAAK,CACL,4HACA,iBAVA,GAWA,QAAY,EACZ,CAAC,EAID,CAAQ,gBAAgB,4CAAsC,GAC9D,cACA,MAAW,SAAW,EACtB,gBAAwB,IACxB,uBACA,CAAK,CACL,CCpBA,mEACA,GAFA,4BAEA,4BACA,QlF+DO,SAAwC,MAC7C9L,CAAI,ckF/D4B,WlFgEhC+L,CAAuB,uBACvBC,CAAqB,iBACrBC,CAAe,CAYhB,MAEyCC,EAAxC,IAAMC,EAAAA,MAAkCD,GAAAA,UAAU,CAChD5N,EAAAA,EACD,OAFuC4N,EAErCC,+BAA+B,CAKlCD,UAAU,CAAC5N,EAAkC,CAAG,CAC9C6N,gCAAiC,CAC/B,GAAGA,CAA+B,CAClC,CAACC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAACpM,GAAM,CAAE+L,CAC5B,wBACAC,kBACAC,CACF,CACF,EkF/FkC,CAClC,yBACA,2BACA,yBACA,gBnFPO,qBmFOuC,WnFPN,EAAuB,EAC/D,mBAAuB,EACvB,gBAgDA,MA7CA,EAFA,QAAqF,IAAkB,KAAN,CAAM,MACvG,EAA8B,GAAgB,IADuC,KACvC,GAc9C,KAXA,EADA,EACA,EA2CA,EA3CA,OA4CA,CAAQ,MAAa,UACrB,EAEA,QA/CA,CASA,wBAGA,OAEA,aAAoB,WAAkB,EACtC,OACA,KACA,OACA,UACA,OACA,CACA,CACA,CAAK,CACL,EmFvB8C,CAC9C,wBACA,CAAS,CACT,CAAK,EAEE,OAAqB,EAC5B,GAAe,GAAsB,KAAM,GAAkB,CAC7D,OAD6D,GAAxB,CAfrC,CAAoB,MAAQ,MAcM,GAdN,aAA0B,sBAA2B,aAAe,kDAAyD,uOAAsQ,2RAAuT,kBAAkB,QAAQ,uEAAgF,gBAAkB,sEAAgF,kBAAoB,uCAA6C,MAAQ,iBAAmB,2BAA+B,gHAAkI,uBAAyB,8FAA0G,aAAiB,WAAa,sEAA6E,uBAAuB,iCAAmC,QAAQ,EAAE,SAAW,oBAAsB,QAAQ,GAAG,wHAA4H,WAAa,SAAW,2CAAiD,UAAY,+BAAqC,UAAY,oCAA0C,QAAU,uCAA6C,OAAS,yCAA+C,QAAU,0CAAiD,MAAQ,+CAAsD,iBAAmB,wwBAA85B,wFAA0F,kNAAqQ,qBAAyB,s+CAA0/C,+KAiBpzJ,CAAC,CAAC,EAAC,mFGRH,EAA0B,QAAZ,CAAY,KAC1B,GADkB,CAClB,GADsB,SAAI,EAC1B,kCACA,eACA,yBACA,IACA,8DACA,CACA,SAAoB,GAAM,gBAC1B,CACA,IACA,mCACA,QACA,CAAkB,mBAClB,CACA,QACA,EACA,EAAiC,eAAZ,CACrB,QADyB,CACzB,GAD6B,OAC7B,EADiC,IACjC,0BAA6E,IAAO,KACpF,YACA,yCACA,WAGA,iDACA,EAEA,aACA,aACA,CAoBA,OAnBA,8BACA,OAAe,GAAY,EAE3B,iCAEA,QADA,KACA,IAAyB,mBAAuB,IAChD,oBAEA,qCACA,EACA,+BACA,QACA,EACA,8BACA,aAEA,+BACA,aAEA,CACA,CAAC,uBCjDG,EAAsB,cAC1B,SADkB,IAAI,KACtB,IAD0B,GAC1B,2BACA,eACA,yBACA,IACA,8DACA,CACA,SAAoB,GAAM,gBAC1B,CACA,IACA,mCACA,QACA,CAAkB,mBAClB,CACA,QACA,EACI,EAA6B,gBACjC,CADiB,EACjB,EADqB,CACrB,QADyB,IAAI,CAC7B,QADiC,GACjC,qBAA6E,IAAO,KACpF,YACA,yCACA,WAGA,iDACA,EAIA,YACA,MAA+B,EAI/B,aAEA,GANiD,MAMjD,IACA,CAuDA,OArDA,yBAIA,OAHA,gBACA,uBAEA,gBAOA,gDACA,MAAe,QAAc,KAA2B,GAAO,YAC/D,EAIA,8BACA,yCACA,EASA,iCAGA,QAFA,EACA,KACA,IAAyB,mBAAuB,IAChD,oBAEA,iDAA+D,EAAa,QAAyB,EAAM,OAC3G,EAOA,CAR2G,CAQ3G,6BACA,0CACA,EACA,0CACA,MAAe,QAAS,MACxB,EAEA,+BACA,oCACQ,QAAgB,GAAW,GAAO,YAC1C,EACA,CACA,CAAC,+DC5FD,EAA0B,QAAZ,CAAY,KAC1B,GADkB,CAClB,GADsB,SAAI,EAC1B,kCACA,eACA,yBACA,IACA,8DACA,CACA,SAAoB,GAAM,gBAC1B,CACA,IACA,mCACA,QACA,CAAkB,mBAClB,CACA,QACA,EACA,EAAiC,eAAZ,CACrB,QADyB,CACzB,GAD6B,OAC7B,EADiC,IACjC,0BAA6E,IAAO,KACpF,YACA,yCACA,WAGA,iDACA,EAWA,aACA,cACA,kDACA,CAoCA,OAnCA,6BAEA,QADA,KACA,IAAyB,mBAAuB,IAChD,kBAEA,mCACA,EACA,6BAEA,QADA,KACA,IAAyB,mBAAuB,IAChD,kBAEA,mCACA,EACA,4BAEA,QADA,KACA,IAAyB,mBAAuB,IAChD,kBAEA,kCACA,EACA,4BAEA,QADA,KACA,IAAyB,mBAAuB,IAChD,kBAEA,kCACA,EACA,+BAEA,QADA,KACA,IAAyB,mBAAuB,IAChD,kBAEA,qCACA,EACA,CACA,CAAC,GAED,kBACA,MAAiB,QAAS,SAE1B,KAIA,OADA,aACA,2BACA,eErFI,EAAsB,OAAhB,EAAgB,EAAZ,CAAY,EAC1B,MADkB,IAAI,QACtB,CAD0B,MAC1B,2BACA,eACA,yBACA,IACA,8DACA,CACA,SAAoB,GAAM,gBAC1B,CACA,IACA,mCACA,QACA,CAAkB,mBAClB,CACA,QACA,EACI,EAA6B,cAAhB,EACjB,EADqB,CACrB,QADyB,IAAI,IAC7B,KADiC,CACjC,0BAA6E,IAAO,KACpF,YACA,yCACA,WAGA,iDACA,EAUA,aAKA,aACA,cACA,kBAEA,QADA,KACA,IAAiC,mBAAuB,IACxD,kBAFA,IAIA,EAA6B,QAAS,SAEtC,KAEA,oBAAsD,EAAa,GAAK,EAAM,QAE9E,CAFmE,IAInE,OA4BA,YA1BA,cAGA,GADA,YAAgD,IAAsB,SAAU,GAAY,QAC5F,OAIA,IANA,MAMA,8IAEA,OADA,oDACA,EACA,CACA,oBACA,IACA,UACA,GAEA,MAA4B,QAAS,SACrC,EDxEO,cASP,UC+DoD,CD/DpD,KACA,iBACA,2BACA,UAEA,YACA,CACA,OAfA,EAAmB,GAAY,MAC/B,EAAmB,GAAY,MAE/B,EAAwB,GAAY,MACpC,GAAmB,GAAY,MAG/B,QAQA,CACA,gBAAoC,GAAY,QAChD,cAAkC,GAAY,OAC9C,cAAkC,GAAY,OAC9C,gBAAoC,GAAY,QAChD,oBAAwC,GAAY,SACpD,CACA,ECiDoD,oCAAoE,GAAY,SAEpI,kCACA,+EACA,qDACA,sEACA,CACA,MAAmB,QAAc,eACjC,EAEA,qBACY,QAAgB,CAvD5B,OAuD4B,EAC5B,EACA,oCACA,WAAuB,EAAmB,EAC1C,EACA,aAF0C,UAG1C,mBACA,iBACA,iBACA,kBACA,CAQA,OANA,sBAIA,OAHA,gBACA,uBAEA,cACA,EACA,CACA,CAAC,gCCtGM,cAOP,oBACA,0BA0BO,UAnBP,cAEA,WACA,uCACA,uBAAyC,iCACzC,yBACA,+BAEA,OADA,2BACA,CACA,EACA,0BACA,+BAEA,OADA,4BACA,CACA,CACA,mCC1BO,mBACP,YAEA,mBAEA,sBAEA,oBAEA,oBAEA,sBAKA,0BAEA,mBACA,CAAC,SAAoC,2pBMvB9B,EEIA,ECLA,YRAP,EAA0B,QAAZ,CAAY,KAC1B,GADkB,CAClB,GADsB,SAAI,EAC1B,kCACA,eACA,yBACA,IACA,8DACA,CACA,SAAoB,GAAM,gBAC1B,CACA,IACA,mCACA,QACA,CAAkB,mBAClB,CACA,QACA,EACA,EAA4B,YAC5B,OADoB,IAAI,OACxB,EAD4B,KAC5B,sCACA,sBACA,uCACA,gBAEA,OADA,2BACA,CAAqB,wBACrB,CACA,CACA,+EACA,EACA,aACA,cACA,kCACA,CAiDA,OAhDA,iCACA,2BACA,KAGA,uBAA+B,GAC/B,EACA,qCACA,2DACA,aACA,OADA,UACA,CACS,CACT,EACA,mCACA,2BAEA,OADA,oBACA,CACA,EACA,oCACA,2BAEA,OADA,qBACA,CACA,EACA,qCAGA,QAFA,IACA,KACA,IAAyB,mBAAuB,IAChD,kBAFA,IAIA,uBACA,IACA,0BAAwE,QAAgB,YACxF,cACA,oBACA,CACA,CACA,SAAwB,GAAQ,gBAChC,CACA,IACA,mCACA,QACA,CAAsB,mBACtB,CACA,QACA,EACA,6BACA,YACA,EACA,CACA,CAAC,GC7EM,iCCAH,EAAO,GAAO,KAAV,IAAU,GAMX,cAEP,OADA,aAA8B,MAC9B,IAAe,EAAW,2BAC1B,CAOO,cAKP,MAJA,qBACQ,EAAI,qEACZ,MAEA,CACA,SAAkB,EAClB,oBACA,IAF4C,GAE5C,CACA,CACA,CACA,eC9BA,GACA,CAAM,oBAAwB,CAC9B,CAAM,kBAAsB,CAC5B,CAAM,kBAAsB,CAC5B,CAAM,oBAAwB,CAC9B,CAAM,sBAA0B,CAChC,CAMA,EACA,WAuBA,YAAwB,WAAuB,IAC/C,aAvBA,YACA,kBAEA,QADA,KACA,IAAiC,mBAAuB,IACxD,kBAEA,YAGA,iBAOA,GANA,sBAGA,gBAGA,qBACA,yBAEA,CACA,CACA,EAEA,OAEA,YCvCA,EAA6B,WAC7B,SADqB,IAAI,EACzB,KAIA,EAL6B,IAK7B,CAHA,yBACA,EAAe,eAAgB,+BAAsC,cAAkB,EACvF,cAA8B,wEAC9B,IACA,EACA,qBACA,kCACA,kFAEA,aAAwB,mBADxB,OAEA,qEACA,CACA,CAAC,GAKD,aACA,aACA,CAmDA,OA/CA,sCACA,QACA,EAIA,0CACA,QACA,EAIA,wCACA,QACA,EAIA,8CACA,QACA,EAIA,gDACA,QACA,EAIA,kDACA,QACA,EAIA,wDACA,QACA,EAIA,uDAIA,wDACA,CACA,CAAC,GAED,EACA,WACA,EAIA,cAEA,aACA,+CAGA,OALA,OAIA,gCACA,CACA,CAAC,IAED,cAEA,aACA,+CAGA,OALA,OAIA,gCACA,CACA,CAAC,IAED,cAEA,aACA,8CACA,CAEA,OALA,OAIA,mCACA,CACA,CAAC,IAED,cAEA,aACA,+CAGA,OALA,OAIA,mCACA,CACA,CAAC,IAED,aACA,aACA,CAGA,OAFA,sCACA,yCACA,CACA,CAAC,GAED,cAEA,aACA,+CAEA,OAJA,OAIA,CACA,CAAC,IAED,cAEA,aACA,+CAEA,OAJA,OAIA,CACA,CAAC,IAED,cAEA,aACA,+CAEA,OAJA,OAIA,CACA,CAAC,IAEM,QAEA,QACA,QACA,QACA,QAEA,QACA,QACA,QAIA,aACP,QACA,EClKA,YACA,iBACA,sBACA,CAAC,UAA8B,ECLxB,OACP,kBACA,WAGA,YACK,CACL,wBACA,QACA,GAEA,cACA,CAAK,EAEE,GACP,oBACA,SAGA,QACA,CAAK,uBCdL,YAKA,+BAKA,uBAKA,8CACA,CAAC,UAA4C,ECrB7C,YAEA,2BAKA,uBAKA,uBAMA,2BAMA,0BACA,CAAC,UAA4B,yBC1B7B,iBAGA,qBAFA,EAEA,WADA,iBAA6D,CADJ,KACU,UACnE,YACA,UAAqC,CAFiE,KAAK,QAG3G,QCSA,aACA,cACA,4BACA,GACA,cACA,CAgEA,OA/DA,8BAGA,oBAKA,OAJA,yBACA,2BAEA,0BACA,CACA,EACA,8BACA,oBAEA,OADA,2BACA,CACA,EACA,4BACA,iCACA,EACA,iCACA,WACA,oBACA,qBAEA,OADA,SAtCA,IAsCA,UACA,CACA,CAAS,KAC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CA,EACA,IAAoD,eAAkB,SAAa,EAWnF,GAkFA,8BAKA,0BA0DA,QACA,eAEA,qBACA,gBACA,sBACA,KAEA,eADA,KAEA,yBAAiC,UAAa,CAG9C,CACA,oBACA,sCACA,CAIA,WACA,yBAEA,UACA,2CACA,0BACA,CACA,aACA,MACA,+BACA,aACA,yBAEA,8DACA,6CACA,CACA,OACA,0BACA,CACA,UACA,+CACA,eAMA,OALA,cAAoB,UAAa,EACjC,kBACA,SACA,yCAA4E,IAE5E,KAKA,UACA,mBACA,qDAKA,OAJA,kBACA,SACA,yCAA0E,IAE1E,CACA,CAIA,QAEA,OADA,6CACA,KAKA,8CACA,wBAA6B,iDAAiD,EAE9E,WACA,2CAAoD,OAAO,GAAG,4BAA4B,WAAW,EACrG,CACA,EAGA,QACA,mBAGA,KADA,sBAEA,gBACA,+FAEA,aADA,4BA3IA,GACA,MACA,SACA,IAEA,EACA,EACA,EACA,EACA,EANA,KACA,IAMA,aACA,yCACA,KAEA,kBAMA,kBAGA,IAFA,IACA,KACA,KAEA,SADA,gBACA,CAKA,IAJA,IACA,KACA,IACA,IACA,YAZA,MADA,iBACA,EAAkC,IAAlC,GAAkC,SAalC,IAEA,gCACA,KACA,IACA,yBACA,KAEA,KAEA,EAAQ,IACR,KAGA,mBACA,+BAEA,CACA,QACA,EAyFA,GACA,CACA,WACA,GACA,0BACA,CACA,CAIA,UACA,2CACA,0BACA,CAIA,aACA,MACA,wCACA,aACA,SAEA,8DACA,8BACA,CACA,OACA,0BACA,CAIA,UACA,sDACA,eAGA,OAFA,iBAyBA,GAAoC,iBAAqB,EAUzD,MATA,4BACA,gCAEA,UACA,8CAEA,kCACA,aAEA,CACA,EApCA,MAAoC,eAAwB,GAC5D,SAiBA,KAEA,cADA,uBACA,IACA,WACA,wBACA,CACA,EAvBA,iBACA,IACA,CAIA,aACA,uDACA,iBAAsB,yCAAmE,CACzF,CACA,8CACA,yBAA8B,iDAAiD,CAC/E,CACA,WACA,gDAAmE,EACnE,CACA,YCvTA,MAAM,YAAa,kEAAmE,IAAS,EAAK,GAAL,CAAK,KAAS,MAAM,EAMn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a,KAAM,SAAUrC,CAAU,EACxB,GAAI,KAAOnX,EAAQlB,MAAM,CACvB,EAASA,MAAM,CAAG,GAAKrC,EAAe0a,EAAYnX,EAAQwI,UAAU,OACjE,GAAI,KAAOxI,EAAQlB,MAAM,EAAI,OAASkB,EAAQ/I,WAAW,CAAE,CAC9D+I,EAAQ/I,WAAW,CAAGkgB,EACtB,GAAI,CACF3F,GAAqBxR,EAASmX,EAChC,CAAE,MAAOnc,EAAO,CACdmP,GAAoBnK,EAAShF,EAAO,MAClCwN,GAAWxI,EAAShF,EACxB,CACF,CACF,EACAkU,OAAQ,SAAU1J,CAAM,EACtBxF,EAAQ/I,WAAW,CAAG,KACtB6a,GAAM9R,EAASwF,EACjB,CACF,EACA,CAAEiU,cAAe,CAAE,EAEvB,mCCtuFA,CAO8B,CAL9B,GAAM,EAAQ,KAA0D,EAK1C,UALjB,YAKiB,CACX,cACC,eACG,kBACQ,0BAC/B,IAA+B,2BACA,0BACI,yDCLnC,OAA6B,eAC7B,cACA,oCACA,uBACA,+CACA,YAAoB,mBAAsB,IAC1C,8CACA,CACA,MACA,yBACA,EACA,GAAO,QACP,EACA,gHAEA,CACA,oBACA,2CACA,6BACA,+BACA,kCACA,+BACA,kCACA,+BACA,2BACA,2BACA,kBAQA,kCACA,gBACA,wBAEA,OACA,WACA,OACA,MACA,aALA,UAKA,OACA,OACA,CACA,CAWA,cACA,MACA,oBACA,UACA,cAEA,CAUA,aACA,oBAVA,EACA,EAUA,iDAXA,EAYA,SAXA,GAAwB,mBAExB,IACA,8BACA,YACK,GAOL,cACA,CACA,cA+IA,kBACA,oBACA,SACA,IAIA,OArHA,sBACA,IAlEA,IAnBA,EAqFA,WACA,2CACA,SACA,sBAEA,UACA,aACA,aACA,aACA,KACA,KACA,cACA,mBACA,OACA,OACA,KACA,KACA,QACA,OACA,cAEA,YACA,EACA,EACA,EACA,EAGA,CACA,CACA,KACA,OACA,OACA,EACA,oBACA,KACA,MACA,SACA,GACA,wBACA,uBACA,QACA,EAAW,EACX,SACA,QA9GA,EAgHA,EAhHA,EAiHA,EACA,cACA,iBACA,GACA,mBACA,EACA,OACA,KACA,EAVA,EA9GA,EACA,OACA,EACA,OACA,OACA,OACA,UAoHA,WACA,EAEA,IACA,uBACA,QACA,YAAoB,WAAqB,IACzC,EACA,IADA,OACA,GACA,KACA,EACA,EACA,EACA,EACA,QAEA,wBA7JA,QADA,EA8JA,IA7JA,wBAIA,kBAHA,GACA,SACA,iBACA,MAyJA,EACA,IACA,gBACA,oBAGA,EACA,IADA,UACA,KACA,KACA,EACA,EACA,EACA,EACA,QAEA,iBACA,6BACA,SA3HA,YACA,iBACA,gBACA,mBACA,WACA,uBAEA,OACA,0BACA,YACA,oBACA,OACA,YACA,sBACA,sBACA,UACA,CAAe,CACf,YACA,sBACA,gCACA,EACA,EACA,UAEA,gBACA,mBACA,WACA,eAEA,CACA,OACA,EA6FA,GACA,EACA,EACA,EACA,EAGA,aACA,EACA,GACA,oBAJA,cAKA,mBAA+B,8BAAyC,EACxE,GAGA,CACA,QACA,EAKA,sBACA,sBACA,CAAG,EACH,CACA,CACA,cACA,mBACA,gBACA,QACA,KACA,YACA,iCACA,yBACA,CAAO,CACP,YACA,iCACA,yBACA,GAEA,yCACA,CACA,gDACA,UAEA,aACA,kBACA,CACA,aACA,OAAW,2BACX,CACA,UAAgB,EAChB,MACA,wBACA,EACA,EACA,WACA,uBACA,CAAO,CACP,EAEA,CAAG,CACH,kBACA,QAIA,OAHA,eACA,GACA,CAAK,EACL,CACA,CAAG,CACH,oBACA,OACA,gBACA,QACA,CAAO,MAEJ,CACH,iBACA,6BACA,QACA,CACA,EACA,UAAgB,GAChB,UAAgB,GAChB,YAAkB,GAClB,UAAgB,GAChB,iEAAuE,CACvE,EACA,OAAa,aACb,kBACA,UACA,qCACA,0BAEA,UADA,cAEA,mBACA,IACA,2BAAmC,IAAW,KAC9C,mBACA,GACA,sBACA,6BACA,CACA,iBACA,uBAEA,SADA,cAEA,kBACA,EAAQ,IACR,gBACA,gBAEA,SADA,cAEA,OACA,WACA,CACA,sBACA,qBACA,IACA,8BAGA,MAFA,MACA,IACA,KACA,CAAM,SACN,sBACA,CACA,CACA,EACA,cAAoB,iBACpB,WACA,sBACA,UAAuB,UACvB,QACA,SACA,WACA,oCACA,6BACA,EACA,aACA,WACA,cACA,gBACA,6BACA,YACA,yBACA,2BACA,QACA,uBAAkD,IAAc,IAChE,oBACA,YACA,CACA,oCACA,EACA,eAAqB,iBACrB,MACA,IAAc,CACd,OACA,WACA,wCACA,aACA,WACA,cACA,gBACA,YACA,yBACA,2BACA,QACA,uBAAwD,IAAoB,IAC5E,oBACA,YACA,CACA,qBACA,0BACA,eACA,YACA,kCACA,EACA,WAAiB,YACjB,OAAW,aACX,EACA,YAAkB,aAClB,OAAW,oBACX,EACA,gBAAsB,GACtB,MAAY,aACZ,OACA,WACA,UAAgB,qBAA4B,CAC5C,OACA,CACA,EACA,MAAY,eACZ,OACA,WACA,OACA,yBACA,CACA,EACA,KAAW,aACX,iBACA,EACA,aAAmB,eACnB,2BACA,EACA,eAAqB,cACrB,OAAa,YACb,kBACA,EACA,SAAe,eACf,uBACA,EACA,SAAe,4DCtab,iBAAkE,SCHpE,MAAM,aAAa,OAAO,QAA8F,UAAtF,YAAuC,IAAtB,sBAAsB,GAAS,yBAAyB,aAAa,GAAiB,KAAS,cAAgC,WAAW,cAAkB,iBAAiB,YAAY,YAAY,KAAW,IAAI,oBAAsC,KAAQ,QAAQ,eAAiB,iBAAiB,KAAmE,KAAc,aAA+B,aAAiB,6ECCzd,IAAMC,EAAgB,cAAsB,EAKR,uBAA+B,EAW5C,CAjBJ,MAAc,yBAKsC,EAQvC,mBAA2B,+BADzB,CAW/B,EAE0B,OAAe,iGCzBnD,IAAMC,EAAqB,sBAEpB,OAAMC,UAA2BvrB,MAGtC0oB,YAA4BlG,CAAmB,CAAE,CAC/C,KAAK,CAAE,yBAAwBA,GAAAA,IAAAA,CADLA,WAAAA,CAAAA,EAAAA,IAAAA,CAF5B7B,MAAAA,CAAoC2K,CAIpC,CACF,CAEO,SAASE,EAAqB7gB,CAAY,QAC/C,UACE,OAAOA,GACC,OAARA,CACA,CAAE,YAAYA,GAAAA,CAAE,SAChB,OAAOA,EAAIgW,MAAM,EAKZhW,EAAIgW,MAAM,GAAK2K,CACxB,8CCnBO,OAAMG,UAA8BzrB,wBAApC,iBACWoc,IAAAA,CAHc,EAGPsP,wBACzB,gMCJO,aACA,SAEA,2BACA,wCACA,kBAGA,SAEA,UACA,UAEA,sBACA,2BACA,4BACA,gCAIA,MACA,MAEA,UAEA,UAIA,aA6CP,GAGA,gBAIA,4BAGA,0BAGA,+BAGA,UAGA,wBAGA,wBAGA,uBAGA,mCACA,EACA,EACA,KACA,OACA,cACA,wBACA,gBACA,CACA,YACA,wBACA,gBACA,aACA,aACA,CACA,eAEA,MACA,CACA,YACA,sBACA,kBACA,CACA,SACA,wBACA,gBACA,sBACA,kBACA,SACA,aACA,CACA,UAEA,wBACA,sBACA,kBACA,gBACA,EAEA,0DCpHW,UAEX,eAIA,EAgBW,aAEX,sCAIA,gDCpDO,MAAsC,cAAuB,2DEDpE,yFACA,SACA,UACA,OACA,CACA,WAGA,CACA,MACA,OACA,CACA,OACA,OACA,CACA,YACA,OACA,CACA,eACA,QACA,CACA,CACA,mEACO,oBACP,EACA,MAEA,KACA,CACO,qBACP,EACA,UAEA,SACA,8IENA,yBAA2B,EAAK,kBACzB,cACP,OACA,yBACA,mBACA,6BACA,8BACA,CACA,CAUO,cACP,MACA,0DAQW,kBACX,QACA,+CAUA,gCACA,wBACA,UAAkB,GAAqB,UAAU,SAAa,+EAA+E,EAAW,+HAExJ,MACA,4BACA,oCACU,gCACV,eAEA,UAA4B,oBAAkB,UAAU,SAAa,kDAAkD,EAAW,6EAGlI,OAFA,4BACA,4BACA,CACA,EAAU,CAIV,CAkBW,OAtBQ,EAsBR,GAtBmG,CAsBnG,GApBF,EAsBT,UAAoB,oBAAkB,UAAU,SAAa,oDAAoD,EAAW,+EAI5H,OAHA,eACA,4BACA,4BACA,CACA,CAgEW,oBACX,8BACA,GACA,qCACA,0BACA,8BACA,mBAGA,0BAIA,SAnDA,OAEA,QADA,SAA4B,GAAO,kEAAkE,EAAW,IAEhH,sBACA,wBACA,GACA,wBAGA,oDACA,YACA,CAAS,CAET,EAsCA,OACA,WAAmD,GAAO,kEAAkE,EAAW,GACvI,CAQO,kBACP,YAqEA,MACA,+IAEA,KAvEA,GACA,wBAGA,oDACA,YACA,CAAS,EAEL,EAAK,yBACT,CACA,gBACA,eAAoB,GAAO,kEAAkE,EAAW,mKACxG,CAUA,iBAHA,GACA,iKACA,EACA,gBACA,sGAGA,cACA,eAEA,OADA,SAHA,6BAIA,CACA,CA0FA,oBAAiD,sBAAsB,CAAC,YACxE,oBAAiD,sBAAsB,CAAC,YACxE,oBAA+C,oBAAoB,CAAC,iIC/Q7D,2BAGA,OAFA,uBAGA,SCtDA,SACP,qBACA,MAGA,SAAqD,SDmC9C,KACP,MAAoB,GAAc,ECpC4C,GDoC5C,YAIlC,OACA,qBAJA,MAAsC,IAA2B,IACjE,gBAIA,wBAHA,MAAgD,IAA0C,CAI1F,CACA,EC5C8E,0BAC9E,iBAAwD,EAA4B,iBACpF,iDAEA,mDACA,sBACA,CACA,SACA,wBACA,sFAEA,0BACA,KAAkB,EAClB,0BACA,YACA,SAA4D,CAAtC,KAAsC,CAC5D,EADwE,CAAK,KACzD,EACpB,QACA,CAAS,CAF+B,CAIxC,UAIA,0BACA,KAAkB,EAClB,SACA,YACA,KAH8C,IAGc,CAAtC,KAAsC,CAC5D,EADwE,CAAK,KACzD,EACpB,SACA,CAFwC,OAExC,WACA,CAAS,CACT,CACA,YCnBA,gBACA,iGACA,2CACA,cACA,YAA6B,QAAkB,IAC/C,yBAIA,iBAFoC,IAAe,IAEnD,SACA,QAEA,CACA,CAKO,sBACP,gBAGA,qBACA,cACA,GACA,2BAEA,CACA,SACA,OACA,eACA,QACA,mBAIA,KACA,oBACA,mBACA,CAAS,CACT,cAMA,OALA,WAGA,WA3DA,YACA,MAAoB,GAAc,SAClC,aAAyB,IAAc,CACvC,0BAEA,OAAW,GAAc,QACzB,EAqDA,YAEA,UACS,CACT,cACA,eAGA,UAA2C,IAAc,CAAC,GAAc,kBACxE,OAGA,UAAgC,IAAqB,QACrD,CACA,iBACS,CACT,mBACA,eACA,CAAS,CACT,qBACA,sBACA,eAzEA,KACA,UAAwB,IAAc,CAAC,GAAc,UACrD,OAAW,IAA4B,UACvC,EAsEA,2BACA,OACA,kBACA,CACA,wBACS,CACT,8BACA,+BACA,MAAgD,QAA0B,qBAC1E,4BACA,CACA,iCACS,CACT,gBAIA,OAHA,aACA,iBAAsC,EAAiB,uCAEvD,YACS,CACT,8BACA,eACA,kEAEA,EApEA,2CACA,qGC1C4F,sBAC5F,MACA,WAIA,WACA,IACA,gBACA,EAAM,OAEN,eAiBA,KACA,iCACA,qCACA,OACA,uDACA,wHACA,sEACA,CACA,EAzBA,OACA,aACA,CACA,CACA,cACA,OACA,sCACA,kBACA,IACA,oBACA,wBACS,CACT,sDACA,0BACA,IAEA,CAUA,oCAA+C,iDAA8D,EAC7G,MACA,oBACA,0DACA,oBACA,EACA,CACA,iCCpCO,SACP,uBAAkB,0BAAiC,EACnD,4BACA,iBACA,eACA,mBACA,sBAAiC,MACjC,0BACA,CACA,SACA,GAAY,OAAU,IACtB,gBACA,IAEA,mEACU,wBAEV,yBAEA,kEAEA,CACA,eAEA,gBACA,IAEA,MAA8B,IAAoB,YAClD,GACA,2BAEA,MAA+B,GAAqB,YAKpD,yBACA,uBAGA,kCACA,2DACA,iDAOA,MAAgC,QAAY,WAC5C,IACA,MAAsB,GAAqB,MAC3C,oBACA,CAAiB,SACjB,CAAc,SACd,kCACA,CACA,CAAS,EACT,yBACA,CACA,4BAEA,OADA,sCACA,mBACA,CACA,qBACA,sCACA,iCACA,gBAEA,MAA0B,GAAgB,YAC1C,MACA,UAAsB,GAAc,mDAEpC,OAAe,EAAsB,OACrC,aADqC,KACrC,SACA,6BAEA,CACA,qBAIA,GADA,gIACA,iBAEA,IACA,qDACA,CAAc,SACd,kBAAkC,GAAc,4EAChD,OACA,CAAiB,EACjB,CAEA,CACA,CACA,aACA,kHACA,eCtGO,iBAA2B,6EAA6E,EAkB/G,OACA,mBAFA,8DAGA,OACA,sBACA,MAAe,OAAgB,IAC/B,iBAEA,kDACA,sCACA,4BACA,4BACA,wBACA,4CACA,0BACA,oBACA,oBACA,kBACA,kEAAqG,CACrG,+CACA,sBAMA,GACA,cAAY,gCAAuC,EACnD,WAAe,EAAY,CAC3B,SAD2B,CAC3B,EACA,UACA,aACA,CAAK,CACL,EAbA,EACA,EAGA,OADA,UACA,CACA,+BCtCW,gBACX,0BACA,gCACA,gCAAqD,GAAY,sGAAsG,GAAY,uJACnL,CAAS,EACT,OACA,CAAS,CACT,CAAK,EAKL,OADA,WACA,CACA,CACA,2ECpBO,SACP,iBACA,mBACA,mBACA,iBACA,eACA,6BACA,CACA,SACA,iBACA,4BACA,mBACA,iDACA,MACA,CACA,mBACA,uCAEA,oBACA,oBACA,kBACA,aACA,CACA,aACA,MACA,cACA,oBACA,CACA,OACA,aACA,wBACA,cAIA,OADA,cACA,CACA,CACA,SACA,uBACA,cACA,qBACA,oBACA,wBAEA,CACA,mBACA,qDACA,6BAEA,CACA,yBACA,qCACA,eACA,0BACA,mBACA,qBACA,oBACA,CACA,CACA,QACA,mBACA,mBACA,gBACA,CACA,OACA,UACA,kBACA,CAEA,UACA,oBACA,qCACA,qBACA,qBAEA,CACA,QACA,mBACA,mBACA,gBACA,CACA,WACA,uBAEA,kBACA,sBAEA,iHC5EW,cAGX,WACA,OACA,EACA,EACA,CAEA,sBACA,kBACA,gBACA,wBACA,kBACK,EACL,+BACA,YACK,EACL,sBACA,gBACA,wBACA,kBACK,EAIL,OAHA,+BACA,YACK,EACL,CACA,EACA,EACA,oDE9BO,+BAsDP,gBACA,MAEA,GACA,2CACA,iGAOA,oBACA,qBACA,KACA,6CACA,oBACA,CAAK,EACL,CAglBO,cAEP,GAxpBA,mBAwpBA,OAGA,MD9oBO,YACP,KC6oBsC,CD7oBV,OAAW,CACvC,OACA,yBAYA,EACA,EAZA,eAQA,cAKA,yBAIU,CAKV,8DACA,oDAKA,cAEA,EA7CA,gBA6CA,EA5CA,OACA,gCACA,OACA,WACA,cACA,WAuCA,EAtCA,eAsCA,EArCA,UACA,EAqCA,aAhBA,EAvCA,+CAwCA,IAiBA,WACA,uBAAgD,IAAO,MACvD,cACA,SACA,mBACA,cACA,gBAA6C,GAAc,uBAK3D,SAA+C,EAAa,GAE5D,OADA,CAD4D,CAC5D,QACA,CACA,CAAiB,CAEjB,CAGA,aACA,GACA,EACA,EACA,KACA,CAEA,OADA,UACA,WAKA,SAAuC,EAAa,GAEpD,OADA,OACA,CACA,CAAS,CACT,CACA,ECqkBsC,iBAEtC,kBAtlBO,6BAA6C,yBAAwC,EAG5F,uBACA,QACA,EACA,IAEA,CADA,yCACA,YACA,aACA,CAAU,MAEV,QACA,CACA,kCACA,oEAGA,2DACA,6CAKA,oDACA,eACA,eAEA,6CACA,GACA,cAEA,MAAuB,QAAS,WAAsB,IAAkB,eAAiB,IAAa,QACtG,WACA,KAAkB,IAAQ,QAC1B,UACA,QACA,EACA,EACA,2BACA,YACA,aACA,gBACA,0CACA,+CACA,CACA,CAAS,eACT,MAkDA,EAuJA,EAqJA,EAxUA,EApBA,MAMA,IAKA,cAVA,cAaA,uDACA,KAEA,uBACA,cAGA,MACA,UACA,+IACA,EAGA,kBACA,WA/HO,KACP,SACA,KACA,YAAmB,WAAiB,KACpC,WAcA,GAbA,mBACA,QACA,MACA,uCACA,CAAa,EACH,SAAsB,IAAyB,CACzD,QACA,MACA,iCAAkD,IAAyB,CAAC,EAC/D,EAEb,UAEA,SAA+B,IAAwB,EACvD,oDAAgE,EAAY,wCAC5E,KACA,CACA,CACA,cAEA,YAAqB,YAAc,EADnC,gDAAwD,EAAY,KACjC,GACnC,qBAAiC,EAAI,IAAI,EAAO,GAGhD,QACA,EAiGA,uBAA2E,aAAiB,GAC5F,8GACA,MACA,kBAEA,0BACA,eACA,eACA,SAGA,CAEA,qDAGA,6DACA,wBACA,aACA,IAEA,iCAGA,2BACA,iCAEA,uBAAwD,EAAwB,qBAAqB,EAAuB,kCAC5H,SACA,UAGA,MACA,gCAEA,0CAMA,4BAGA,+BACA,KAIA,2CACA,MAEA,kCACA,aAAwC,GAAwB,EAEhE,EAzMO,cACP,IACA,MACA,UACA,EAAmC,IAAc,MACvC,uCACV,SACU,cACV,yCAAyD,EAAc,QAAQ,EAAM,4CAErF,QACA,CAAM,SAEN,gEACA,QAEA,MACA,CACA,EAuLA,WACA,mBACA,8DAAwI,EACxI,0CACA,IACA,MACA,OACA,iEAUA,EACA,WACA,YAEA,gBACA,UACA,EAEA,GAEA,+CACA,uCAOA,OAJA,IACA,YACA,QAEuB,OAAkB,2BAEzC,UACA,qBAEA,gCACA,KAEA,qBAEA,sCACA,sDAAsF,GAAU,kDAEhG,+BACA,KAEA,kBAEA,kBACA,mDAAmF,GAAU,+CAE7F,KAEA,mBAEA,sBACA,6BACA,EAA8C,IAAc,CAK5D,CAsBA,GArBA,WACA,uBAGkB,wBAClB,IACA,mCACkB,GAClB,IACA,kBACkB,GAClB,IACA,oBAGA,eACA,iBAAqF,IAAc,GAdnG,EAAsC,IAAc,CACpD,gCAec,GACd,kBAA6C,GAAgB,EAI7D,yBACA,IAGA,mBAGA,UACA,2BAKA,OAJA,IACA,YACA,QAE+B,OAAkB,2BAEzB,QAAyB,4BAAkD,GAAO,EAAE,QAAgB,EAE5H,CAGA,UACA,gBAEA,CACA,8BAEA,kBAAoB,GAAmB,EACvC,0CACA,uDACA,IACA,mCACA,CAAkB,SAClB,mDACA,CAEA,sBACA,mBACA,4BACA,eACA,OACA,QACA,cACA,UACA,YACA,YACA,SACA,OACA,WACA,WACA,iBACA,SACA,YAEA,MACA,SACA,CACA,CACA,MACA,QACA,GACA,wBAEA,eAEA,UAEA,sBACA,EAAkB,UAClB,YAA4B,wBAAuC,EACnE,GACA,KACA,UACA,iBACA,CACA,CAEA,OACA,KACA,MACA,yBACA,mBACA,UACA,CACA,EACA,6BAYA,GAXA,OACA,KACA,QACA,MACA,iBACA,mCACA,eACA,gBACA,sBACA,CAAyB,EAEzB,wEACA,SAAwE,IAAc,CAAG,IAAc,GACvG,OAAsE,OAAc,EACpF,4BAGA,4BACA,GACA,gDACA,KAAsC,EAAM,2BAC5C,gBACA,SACA,EAgBA,OAbA,eACA,KAAsC,IAAe,OACrD,OACA,YACA,CAA6B,EAC7B,cACA,aACA,WACA,WACA,MACA,CAA6B,EAC7B,UAEA,gBACA,kBACA,gBACA,wBAC6B,CAC7B,CAA0B,IAK1B,MAAuD,EAAa,GA4BpE,OAxBA,CAJoE,CAIpE,6BACA,MACA,MAAmD,EAAM,QACzD,GACA,gDACA,0BACA,gBACA,UAEA,2DACA,GACA,eACA,KAA8C,IAAe,OAC7D,OACA,YACA,CAAqC,EACrC,cACA,aACA,WACA,WACA,MACA,CAAqC,CAErC,CAA6B,qEAC7B,CACA,CACA,CAIA,OADA,UACA,CACA,CAAiB,YAEjB,MADA,IACA,CACA,CAAiB,CACjB,EAEA,KACA,KACA,SACA,MAKA,GAJA,8DACA,oCACA,MAEA,OACA,kBACA,iDACA,KAA8B,IAAoB,OAClD,aACA,WACA,WACA,OACA,WACA,aACA,CAAqB,EAerB,GAdA,GAIA,yBACA,MAAkC,QAA6B,GAG/D,EACA,UAGA,2CAEA,yCAAuF,IAAe,QAGtG,6BACA,SAC0B,CAC1B,eACA,0BACA,2BACA,4BACA,2BACA,kBACA,gBACA,wBACA,CAAyC,eACzC,0BACA,mCACqC,EAGrC,uBACA,yBACA,CAEA,gBAGA,CACA,MACA,GACA,KACA,QACA,MACA,cACA,0BACA,eACA,qBACA,uCACA,CAAyB,EAEzB,mBAAkD,EAAM,uBACxD,kBACA,gBACqB,EAIrB,OAHA,+BACA,YACqB,EACrB,CACA,CACA,CACA,gDACA,IAAwB,SAAQ,EAGhC,GADA,eACA,gBAEA,2BAKA,OAJA,IACA,YACA,QAE+B,OAAkB,2BAEzB,QAAyB,uBAA6C,GAAO,EAAE,QAAgB,EAEvH,CACA,iBACA,MAAwB,MAAY,EACpC,gEACA,qBAEA,2BACA,MAAmC,OAAkB,2BAEzB,QAAyB,4BAAkD,GAAO,EAAE,QAAgB,EAEhI,CACA,iCACA,2BAEA,CACA,iBAKA,UAgDA,cAhDA,EACA,OACA,2BACA,8BACA,MACA,cACA,4BACA,kBACA,gBACA,wBACqB,CACrB,CASA,cAIA,KAAsB,GAsBtB,MAFA,CAnBA,GADmC,CACnC,eACA,WACA,OACA,2BACA,kBACA,gBACA,wBAEA,CAAiB,eACjB,MAGA,8CAGA,8BACA,EAAiB,EAGjB,YAA8C,EAC9C,0BACA,eACA,CAGA,CAAS,EACT,KACA,IACA,cACA,EAAc,OACd,GACA,WAEA,CAEA,QACA,EASA,OAJA,mBACA,6BACA,uBACA,iBACA,CACA,EAUA,IACA,8FCpqBA,kBAaA,OAZA,2CACA,uBACA,yBACA,2CACA,6BACA,6EACA,iDACA,yCACA,uCACA,2DACA,mDACA,mCACA,CACA,CAAC,MAAqB,EACtB,cAGA,OAFA,yEACA,iDACA,CACA,CAAC,MAAyB,EAC1B,cAKA,OAJA,mDACA,mCACA,+DACA,2CACA,CACA,CAAC,MAAqB,EACtB,cAgCA,OA/BA,2CACA,yCACA,2DACA,iEACA,+DACA,6DACA,iEACA,6DACA,iEACA,qDACA,6CACA,iCACA,iCACA,yCACA,iDACA,2CACA,uDACA,yDACA,mDACA,yEACA,uDACA,6CACA,2CACA,uDACA,uCACA,+CAEA,gBACA,0BACA,4BACA,gCACA,CACA,CAAC,MAAyB,EAC1B,cAEA,OADA,wCACA,CACA,CAAC,MAAsB,EACvB,cAMA,OALA,iDACA,yCACA,yCACA,yCACA,6CACA,CACA,CAAC,MAAiB,EAClB,cAKA,OAJA,4CACA,4DACA,0CACA,0BACA,CACA,CAAC,MAAoB,EACrB,cAEA,OADA,qCACA,CACA,CAAC,MAAiB,EAClB,cAEA,OADA,+BACA,CACA,CAAC,MAAe,EAChB,cAEA,OADA,gDACA,CACA,CAAC,MAAgC,EACjC,cAGA,OAFA,sDACA,sDACA,CACA,CAAC,MAA0B,EAC3B,cAEA,OADA,+BACA,CACA,CAAC,MAAqB,EAEf,OACP,qBACA,2BACA,4BACA,wBACA,kBACA,0BACA,wBACA,kBACA,mCACA,mCACA,mCACA,qCACA,oCACA,uCACA,+BACA,wCACA,CAGO,GACP,oCACA,qCACA,wCACA,kCClIA,qDAiBA,IAAQ,4EARR,EAAU,EAAQ,IAAoB,CAS/B,YATU,KASV,MACP,iBACA,mCACA,CACA,CAKA,cACA,CALO,kBACP,8BACA,eACA,EAEA,aACA,kCAEA,GACA,qBAEA,aACA,aACA,gCACA,CAAS,GAET,OACA,EACA,UACA,wCACA,IACA,UACA,GACA,WACA,QACA,MACA,OACA,CAAS,CACT,CACA,CACA,SAKA,oBACA,qCACA,CACA,aACA,QACA,CACA,0BACA,iBACA,KAEA,OADA,gBACA,CACA,CACA,qBACA,2CACA,CACA,6BACA,iBACA,uBAEA,WAEA,uBACA,kBACA,CACA,YACA,MACA,aAEA,IAAgB,aAAc,sBAC9B,KACA,UACA,EAAU,CACV,KACA,SACA,KAEA,EACA,gBACA,IAAa,IAAwB,8DACrC,WAGA,oFACA,KACA,EAGU,mDACV,QAHA,iCACA,MAIA,UAMA,OALA,cACA,mBACA,mBACA,iBAEA,4EACA,8FACA,OACA,YACA,6CAAiF,IAAgB,kBACjG,uBAA+C,yCAAyC,QAAQ,kEAAoF,GACpL,QACA,qBACA,CAAyB,CAEzB,EACA,GACA,+CAAuG,IAEvG,IACA,cACA,sBAEA,WACA,GAAwB,OAAU,IAElC,kBACA,QAGA,IACyB,UAEzB,MADA,OACA,CACA,CAAyB,aAKzB,OAHA,QACA,IAEA,CACA,CAAkB,SAGlB,MAFA,OACA,IACA,CACA,CACA,CAAa,EACb,CACA,WACA,WACA,wBACA,KACA,EAAc,CACd,KACA,QACA,EAAa,EAAwB,kDAGrC,WACA,OACA,6CACA,4BAEA,yBACA,eACA,wBAUA,+CAVA,EACA,wCACA,2BACA,yBAEA,OADA,cACA,uBACA,EACA,yBAEA,CAGA,CAHc,CAlBd,CAsBA,CACA,gBACA,WACA,gFACA,gDACA,CACA,kBAEA,OADA,gCAEA,CACA,wBACA,6BACA,eACA,CACA,0BACA,6BACA,WACA,GACA,UAEA,CACA,CACA,YACA,YACA,YACA,CAAC,+BCpNM,2HGDA,IAAI,EAAe,YAO1B,OAP0B,EAC1B,oBACA,wBACA,gBACA,gBACA,sBACA,gBACA,CACA,CAAC,GAAG,EACO,EAAoB,YAM/B,OALA,KAD+B,KAC/B,YACA,wBACA,gBACA,gBACA,gBACA,CACA,CAAC,GAAG,kBCZJ,gBACA,GACA,IACA,IACA,IACA,IACA,EAEA,gBACA,GACA,GACA,IACA,IACA,IACA,EAIA,gBACA,GACA,GACA,IACA,IACA,GACA,IACA,GACA,EAEA,gBACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,EAEA,gBACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,EAEA,gBACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA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6BACA,sBACA,UAA4C,oBAAkB,yEAG9D,OAFA,oCACA,4BACA,CACA,CAIA,QAEA,qBACA,oBAGA,kBACA,KAEA,oBAGA,iBAGA,kBACA,KACA,aAGA,wBACA,0CACA,KACA,SAEA,WAqHA,KACA,OACA,WACA,UACA,aACA,mBACA,UACA,WACA,aACA,eACA,aAIA,OADA,KAD8C,IAAoB,YAClE,WAA0E,EAAK,GAChD,GAAc,WAE7C,aACA,gDACA,SACA,OAA2B,GAAc,WACzC,CACA,CACA,EACA,GACA,SACA,UACA,cACA,4CACA,eACA,cACA,UACA,WACA,WACA,WACA,WACA,kBACA,eAOA,OAJA,KAD8C,IAAoB,YAClE,WAA0E,EAAK,GAIhD,GAAc,WAE7C,aACA,mCAOA,aACA,SAIA,OAA2B,GAAc,WACzC,CACA,CACA,EACA,qBACA,EApLA,IACA,CAEA,MAAkC,SxBnbvB,GAEX,cACA,CwBgb6D,CxBhb7D,aACA,cAEA,sBAIA,MAHA,iBAEA,gCAEA,EwBwa6D,uBAC7D,EAAmC,QAAS,GAG5C,OADA,uCACA,QAAwC,IAAyB,aACjE,sCAA+D,EAAM,EACrE,YACA,cACA,CACA,CAAqB,iCACrB,CAAiB,IAGjB,4BAEA,0BACA,UACA,CAAa,EAEb,yCACA,kJAEA,4CAEA,4LAEA,QACA,CACA,CAiBA,yBACA,mBACA,mBACA,0BACA,kBACA,sBACA,qBACA,qBAKA,IACA,WACA,UACA,cACA,qBAAyE,GAAc,oBAAoB,GAC3G,eACA,qBAAyE,IAAqB,UAAU,gBAAc,eAAe,IACrI,eACA,6CACA,WAIA,0BACA,MACA,SACA,MACA,aACA,mCAOA,cACA,SACA,OAAuB,GAAc,WACrC,CACA,CACA,EACA,IACA,WACA,UAEA,aACA,QACA,oBACA,yCACA,YACA,qBAAmE,QAAQ,CPphBhE,GACX,iBAIA,OAHA,wBACA,YACA,kBACA,CACA,EO8gB2E,aAC3E,cACA,eACA,gCAEA,WAIA,MACA,aACA,iDACA,SACA,OAAuB,GAAc,WACrC,CACA,CACA,EAiEA,IACA,WACA,UACA,cACA,6CACA,eACA,cA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EAAKF,aAAa,CACrC9sB,EAAS6B,QAAQ,CAAC,KAEjB7B,EADAysB,EAAczsB,EAAU,KAE1BqC,CAAAA,EAAAA,CAFeoqB,CAEfpqB,CAAAA,CAAmBA,CAACrC,EIiB1B,CACA,eACA,0BAEA,cACA,uBAEA,eACA,iBACA,CACA,aACA,yBACA,CACA,cACA,QACA,iHACA,iEAAiF,EAAO,GAExF,iBACA,CACA,oBACA,6BAEA,mBACA,4BAEA,mBACA,gCAEA,WACA,wBAEA,YACA,kBACA,CACA,eACA,4BAEA,gBACA,sBACA,CACA,WACA,wBAEA,YACA,kBACA,CACA,eACA,4BAEA,gBACA,sBACA,CACA,WACA,4BACA,sBACA,SAAkB,cAAc,IAAI,UAAU,EAAE,EAAS,EAAE,EAAO,EAAE,UAAU,EAE9E,YACA,iBACA,cACA,CACA,aACA,yBACA,CACA,eACA,4BAEA,gBACA,sBACA,CACA,WACA,wBAEA,YACA,kBACA,CACA,aACA,0BAEA,cACA,oBACA,CACA,eACA,4BAEA,gBACA,sBACA,CACA,eACA,4BAEA,gBACA,sBACA,CACA,eACA,wBAEA,gBACA,yCAAsE,EAAM,EAE5E,WACA,iBAEA,SACA,iBAEA,8CACA,OACA,eACA,mBACA,uBACA,uBACA,uBACA,eACA,uBACA,eACA,uBACA,mBACA,+BACA,eAEA,CACA,QACA,0CACA,CACA,6DC/KW,uBACX,cACA,2GACA,CACA,kBACA,WACA,CACA,CACO,wBACP,eAGA,QACA,0BACA,WAIA,sBACA,OAA2B,GAAc,YAEzC,sBAIA,8CAEA,cAEA,OAAuB,GAAc,WACrC,CAAa,CACb,aACA,sBACA,OAA2B,GAAc,cAEzC,sBAIA,8CAEA,OAAuB,GAAc,gBACrC,CAAa,CACb,SACA,6BAAqD,GAAc,UACnE,sBAIA,qDAEA,YAEuB,GAAc,SACrC,CAAa,CACb,oBACA,6BAAqD,GAAc,qBACnE,sBAIA,qDAEA,YAEuB,GAAc,oBACrC,CACA,CAAS,CACT,CAIA,eACA,oBACA,WACA,UACA,aACA,aACA,UACA,0BAEA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,CACT,CAOA,gBACA,8BACA,CACA,CAMA,sBACA,uBACA,QACA,CACA,YACA,sBACA,mBACA,iBACA,EACA,EACA,CACU,iBACV,UAEA,iBAEA,CACA,UACA,uBAEA,OACA,6BACA,yBACA,IACA,CACA,OACA,gCAEA,SACA,iBACA,CACA,aACA,8BACA,kBAEA,CACA,WACA,wCACA,sBAGA,aACA,OACA,EACA,EACA,CAEA,CACA,QACA,wCACA,qBACA,QACA,CACA,CACA,UACA,wCAGA,iBACA,QACA,CACA,CACA,oBACA,qBACA,CACA,+CCzKO,SACP,kBACA,+BACA,qBACA,UAEA,CACA,CACA,oBACA,2BACA,CACA,gBACA,uBACA,CACA,2BACA,kCACA,CACA,sHCVW,uBACX,cACA,yJACA,CACA,kBACA,WACA,CACA,CACO,QACP,eACA,oBACA,WACA,UACA,YACA,aACA,UACA,0BAEA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,CACT,CACA,CACA,yCAQO,gBACP,MARO,YACP,kBACA,kCAGA,EAFA,IAKA,GACA,gBACA,SAKA,UAA2B,IAAe,IAC1C,aAEA,eACA,SAGA,eACA,SAEA,QACA,CACO,QACP,iBACA,UAAoC,IAAe,cACnD,wBACA,SAEA,SACA,UACA,OAEA,MAA8B,GAAgB,YAM9C,GALA,GACA,0BAGA,EADA,WACA,yBACA,GACA,SACA,gBACA,UAA4C,IAAe,cAC3D,SACA,oBACA,CACA,IACA,CACA,EACA,eACA,WACA,UAEA,OACA,QAGA,cACA,sBACA,4CACA,IAEA,OADA,eACA,CACA,EAA8B,OAC9B,GACA,CACA,CACA,WACA,sBACA,4CACA,IAEA,OADA,YACA,CACA,EAA8B,OAC9B,GACA,CACA,CACA,SACA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,EACT,QACA,CACA,CACO,cACP,mBACA,WACA,UACA,aACA,sBAGA,OAFA,sBACA,eACA,CACA,CACA,WACA,sBAGA,OAFA,mBACA,YACA,CACA,CACA,SACA,OAA2B,GAAc,WACzC,CACA,CACA,CAAK,EA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CA,CACA,CACA,CAQA,sBACA,gCACA,MAEA,YAEA,aAAY,eAAsB,EAClC,eACA,8BAAyD,EAAU,GACnE,cACA,uBACA,MAEA,WACA,CACA,CAAK,EACL,SACA,qCAAiD,SAAY,GAE7D,qBACA,KAAY,GAAM,EAClB,UACA,eACA,WACA,aACA,gBACA,sCAAsD,UAAgB,EAAE,MAAY,GAGpF,CACA,OArCA,YACA,IAAY,2BAAwB,WACpC,sBAA+B,EAAM,uBACrC,SACA,sBACA,CAAK,CACL,EA+BA,EACA,CACA,cAUA,OATI,GAAM,qBACV,YAGA,oDACA,OAEA,qBACA,EACA,KACQ,GAAM,QACd,CACA,+BCjIA,qCAA6C,CAC7C,QACA,CAAC,EAAC,SAKF,KACA,0CACA,cACA,SACK,CACL,EACA,GACA,6BACA,QACA,CAAK,CACL,8BACA,QACA,CACA,CAAC,EACD,MAAiB,EAAQ,IAAW,EACpC,EAAe,EAAQ,IAAS,EAChC,CAFwB,QAExB,EADsB,EAEtB,2BAAsC,GAAM,OAC5C,CACA,cACA,qDACA,oDC3BA,WAA+B,IAAN,EACzB,IAD+B,8IAE/B,mKAEA,kBAEA,SACA,+BACA,IACA,UAIA,GAAmB,EAAM,aACzB,iBAIA,4BACA,eAIA,sBAGA,gCACA,SAGA,gCACA,kCAGA,8BACA,SAGA,8BACA,mCACA,QACA,MACI,8BACJ,mBACA,QACA,MAEA,kBACA,SAKA,wBAAuB,qCAA+D,CACtF,CAEA,0BAAwB,8CAA2D,EAAI,EACvF,UAEA,gBACA,QAGA,aAFA,KAEA,IACA,sEACA,CADiG,EACjG,OACA,YACU,eACV,iEAGA,oBAGA,iBACA,uDACA,iEACA,CADiF,EACjF,OACA,YACU,eACV,iEAGA,sBAGA,gBACA,WACA,uBACA,SAEA,CACA,CACA,CACA,QACA,CAEA,kBACA,4BACA,wBACA,IACA,eACA,EAAI,OACJ,uBACA,CACA,CAcA,YACA,iBAAsB,GACtB,eAAoB,GACpB,mBAAwB,CAfxB,cACA,4BACA,wBACA,IACA,cAAmC,QAAY,CAC/C,CAAI,SACJ,WACA,EAAI,OACJ,uBACA,CACA,EAMA,cAAmB,kDC7HnB,yFACA,SACA,UACA,OACA,CACA,WAGA,CACA,MACA,OACA,CACA,OACA,OACA,CACA,YACA,OACA,CACA,eACA,QACA,CACA,CACA,mEACO,oBACP,EACA,MAEA,KACA,gDC3BO,MAAiC,cAAuB,iDEAxD,MAAqC,cAAuB,4FCI5D,cACP,MAA0B,GAA4B,YACtD,MACA,sBACA,SAEA,+EAEA,iBAAiC,EAAkB,oEAEnD,oBACA,iBAAiC,EAAkB,8JACzC,6BACV,iBAAiC,EAAkB,wKAEnD,CACA,iBAAyB,EAAkB,mHAC3C,CACO,oBACP,+CACA,2BAEA,IACA,CACO,oBACP,yEACA,mBACA,wBAIA,2BAEA,IACA","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/action-utils.js","webpack://_N_E/../../../src/server/app-render/encryption-utils.ts","webpack://_N_E/./node_modules/next/dist/esm/server/web/globals.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/response.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/relativize-url.ts","webpack://_N_E/./node_modules/next/dist/esm/server/internal-utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/web-on-close.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/get-edge-preview-props.js","webpack://_N_E/./node_modules/next/dist/esm/server/after/builtin-request-context.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/adapter.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/incremental-cache/fetch-cache.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/incremental-cache/tags-manifest.external.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/incremental-cache/file-system-cache.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/interception-routes.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/is-dynamic.ts","webpack://_N_E/../../../src/shared/lib/utils.ts","webpack://_N_E/../../../../src/shared/lib/page-path/normalize-page-path.ts","webpack://_N_E/./node_modules/next/dist/esm/server/lib/to-route.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/incremental-cache/shared-revalidate-timings.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/incremental-cache/index.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/route-matcher.ts","webpack://_N_E/../../../src/shared/lib/escape-regexp.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/route-regex.ts","webpack://_N_E/./node_modules/next/dist/esm/server/route-matchers/route-matcher.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/internal-edge-wait-until.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/path-match.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/querystring.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/parse-relative-url.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/parse-url.ts","webpack://_N_E/./node_modules/next/dist/esm/server/api-utils/get-cookie-parser.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/prepare-destination.ts","webpack://_N_E/./node_modules/next/dist/esm/server/server-utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/edge-route-module-wrapper.js","webpack://_N_E/./node_modules/@ai-sdk/provider/dist/index.mjs","webpack://_N_E/./node_modules/nanoid/non-secure/index.js","webpack://_N_E/./node_modules/eventsource-parser/dist/index.js","webpack://_N_E/./node_modules/eventsource-parser/dist/stream.js","webpack://_N_E/./node_modules/@ai-sdk/provider-utils/dist/index.mjs","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/Options.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/Refs.js","webpack://_N_E/./node_modules/zod/lib/index.mjs","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/any.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/errorMessages.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/array.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/branded.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/catch.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/date.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/default.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/effects.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/enum.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/literal.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/string.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/record.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/map.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/never.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/null.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/union.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/number.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/object.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/optional.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/promise.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/set.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/selectParser.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/parseDef.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js","webpack://_N_E/./node_modules/zod-to-json-schema/dist/esm/index.js","webpack://_N_E/./node_modules/@ai-sdk/ui-utils/dist/index.mjs","webpack://_N_E/./node_modules/ai/dist/index.mjs","webpack://_N_E/./node_modules/@ai-sdk/openai/dist/index.mjs","webpack://_N_E/./lib/data.ts","webpack://_N_E/./app/api/openai/route.ts","webpack://_N_E/./app/api/openai/route.ts?022d","webpack://_N_E/?654b","webpack://_N_E/","webpack://_N_E/?626c","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/api/context.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/api/diag.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/context/context.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/diag/types.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/baggage/utils.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/metrics/NoopMeter.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/metrics/Metric.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace/span_kind.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-validators.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-impl.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace/internal/utils.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/context-api.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/diag-api.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/metrics/NoopMeterProvider.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/api/metrics.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/metrics-api.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/api/propagation.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/propagation-api.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/index.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/version.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/internal/semver.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/api/trace.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace-api.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace/status.js","webpack://_N_E/./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js","webpack://_N_E/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js","webpack://_N_E/./node_modules/next/dist/compiled/cookie/index.js","webpack://_N_E/./node_modules/next/dist/compiled/native-url/index.js","webpack://_N_E/./node_modules/next/dist/compiled/p-queue/index.js","webpack://_N_E/./node_modules/next/dist/compiled/path-browserify/index.js","webpack://_N_E/./node_modules/next/dist/compiled/path-to-regexp/index.js","webpack://_N_E/./node_modules/next/dist/compiled/querystring-es3/index.js","webpack://_N_E/./node_modules/next/dist/compiled/react-dom/cjs/react-dom.react-server.production.js","webpack://_N_E/./node_modules/next/dist/compiled/react-dom/react-dom.react-server.js","webpack://_N_E/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.js","webpack://_N_E/./node_modules/next/dist/compiled/react-server-dom-webpack/server.edge.js","webpack://_N_E/./node_modules/next/dist/compiled/react/cjs/react.react-server.production.js","webpack://_N_E/./node_modules/next/dist/compiled/react/react.react-server.js","webpack://_N_E/./node_modules/next/dist/compiled/string-hash/index.js","webpack://_N_E/../../../src/client/components/app-router-headers.ts","webpack://_N_E/../../../src/client/components/hooks-server-context.ts","webpack://_N_E/../../../src/client/components/static-generation-bailout.ts","webpack://_N_E/./node_modules/next/dist/esm/lib/constants.js","webpack://_N_E/./node_modules/next/dist/esm/lib/scheduler.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/after-task-async-storage-instance.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/after-task-async-storage.external.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/async-local-storage.js?f7c9","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/metadata-constants.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/dynamic-rendering.js","webpack://_N_E/./node_modules/next/dist/esm/server/api-utils/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js","webpack://_N_E/./node_modules/next/dist/esm/server/async-storage/request-store.js","webpack://_N_E/./node_modules/next/dist/esm/server/after/revalidation-utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/after/after-context.js","webpack://_N_E/./node_modules/next/dist/esm/server/async-storage/work-store.js","webpack://_N_E/./node_modules/next/dist/esm/server/dynamic-rendering-utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/lru-cache.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/clone-response.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/dedupe-fetch.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/patch-fetch.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/trace/constants.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/trace/tracer.js","webpack://_N_E/./node_modules/next/dist/esm/server/request-meta.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/next-request.js","webpack://_N_E/./node_modules/next/dist/esm/server/pipe-readable.js","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/types.js","webpack://_N_E/./node_modules/next/dist/esm/server/stream-utils/encodedTags.js","webpack://_N_E/./node_modules/next/dist/esm/server/stream-utils/node-web-streams-helper.js","webpack://_N_E/./node_modules/next/dist/esm/server/render-result.js","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-kind.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/app-route/module.compiled.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/route-module.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/http.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/implicit-tags.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/app-route/helpers/get-pathname-from-absolute-path.js","webpack://_N_E/./node_modules/next/dist/esm/lib/picocolors.js","webpack://_N_E/./node_modules/next/dist/esm/build/output/log.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/app-route/helpers/auto-implement-methods.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/app-route/helpers/parsed-url-query-to-params.js","webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/bailout-to-csr.ts","webpack://_N_E/../../../../src/client/components/http-access-fallback/http-access-fallback.ts","webpack://_N_E/../../../src/client/components/redirect-status-code.ts","webpack://_N_E/../../../src/client/components/redirect-error.ts","webpack://_N_E/../../../src/client/components/is-next-router-error.ts","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/create-error-handler.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/prospective-render-utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/action-async-storage-instance.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/action-async-storage.external.js","webpack://_N_E/../../../src/shared/lib/app-router-context.shared-runtime.ts","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/app-route/shared-modules.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/server-action-request-meta.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/app-route/helpers/clean-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/app-route/helpers/is-static-gen-enabled.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/cache-signal.js","webpack://_N_E/./node_modules/next/dist/esm/server/request/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/create-deduped-by-callsite-server-error-logger.js","webpack://_N_E/./node_modules/next/dist/esm/server/request/params.js","webpack://_N_E/../../../src/client/components/redirect.ts","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/app-route/module.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/error.js","webpack://_N_E/../../../../src/shared/lib/i18n/detect-domain-locale.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/add-path-prefix.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/add-path-suffix.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/add-locale.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/format-next-pathname-info.ts","webpack://_N_E/../../../src/shared/lib/get-hostname.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/remove-path-prefix.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/get-next-pathname-info.ts","webpack://_N_E/./node_modules/next/dist/esm/server/web/next-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/request.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/utils.js","webpack://_N_E/../../../../src/shared/lib/i18n/normalize-locale-path.ts","webpack://_N_E/../../../src/shared/lib/invariant-error.ts","webpack://_N_E/../../../src/shared/lib/is-thenable.ts","webpack://_N_E/../../../../src/shared/lib/isomorphic/path.js","webpack://_N_E/../../../../src/shared/lib/page-path/ensure-leading-slash.ts","webpack://_N_E/../../../src/shared/lib/segment.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/app-paths.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/parse-path.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/path-has-prefix.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/remove-trailing-slash.ts","webpack://_N_E/./node_modules/next/dist/experimental/testmode/context.js","webpack://_N_E/./node_modules/next/dist/experimental/testmode/fetch.js","webpack://_N_E/./node_modules/next/dist/experimental/testmode/server-edge.js","webpack://_N_E/./node_modules/secure-json-parse/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/async-local-storage.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/work-async-storage-instance.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/work-async-storage.external.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/work-unit-async-storage-instance.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/work-unit-async-storage.external.js"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix';\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix';\nimport { workAsyncStorage } from './work-async-storage.external';\n// This function creates a Flight-acceptable server module map proxy from our\n// Server Reference Manifest similar to our client module map.\n// This is because our manifest contains a lot of internal Next.js data that\n// are relevant to the runtime, workers, etc. that React doesn't need to know.\nexport function createServerModuleMap({ serverActionsManifest }) {\n    return new Proxy({}, {\n        get: (_, id)=>{\n            const workers = serverActionsManifest[process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'][id].workers;\n            const workStore = workAsyncStorage.getStore();\n            let workerEntry;\n            if (workStore) {\n                workerEntry = workers[normalizeWorkerPageName(workStore.page)];\n            } else {\n                // If there's no work store defined, we can assume that a server\n                // module map is needed during module evaluation, e.g. to create a\n                // server action using a higher-order function. Therefore it should be\n                // safe to return any entry from the manifest that matches the action\n                // ID. They all refer to the same module ID, which must also exist in\n                // the current page bundle. TODO: This is currently not guaranteed in\n                // Turbopack, and needs to be fixed.\n                workerEntry = Object.values(workers).at(0);\n            }\n            if (!workerEntry) {\n                return undefined;\n            }\n            const { moduleId, async } = workerEntry;\n            return {\n                id: moduleId,\n                name: id,\n                chunks: [],\n                async\n            };\n        }\n    });\n}\n/**\n * Checks if the requested action has a worker for the current page.\n * If not, it returns the first worker that has a handler for the action.\n */ export function selectWorkerForForwarding(actionId, pageName, serverActionsManifest) {\n    var _serverActionsManifest__actionId;\n    const workers = (_serverActionsManifest__actionId = serverActionsManifest[process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'][actionId]) == null ? void 0 : _serverActionsManifest__actionId.workers;\n    const workerName = normalizeWorkerPageName(pageName);\n    // no workers, nothing to forward to\n    if (!workers) return;\n    // if there is a worker for this page, no need to forward it.\n    if (workers[workerName]) {\n        return;\n    }\n    // otherwise, grab the first worker that has a handler for this action id\n    return denormalizeWorkerPageName(Object.keys(workers)[0]);\n}\n/**\n * The flight entry loader keys actions by bundlePath.\n * bundlePath corresponds with the relative path (including 'app') to the page entrypoint.\n */ function normalizeWorkerPageName(pageName) {\n    if (pathHasPrefix(pageName, 'app')) {\n        return pageName;\n    }\n    return 'app' + pageName;\n}\n/**\n * Converts a bundlePath (relative path to the entrypoint) to a routable page name\n */ function denormalizeWorkerPageName(bundlePath) {\n    return normalizeAppPath(removePathPrefix(bundlePath, 'app'));\n}\n\n//# sourceMappingURL=action-utils.js.map","import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport type {\n  ClientReferenceManifest,\n  ClientReferenceManifestForRsc,\n} from '../../build/webpack/plugins/flight-manifest-plugin'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { workAsyncStorage } from './work-async-storage.external'\n\nlet __next_loaded_action_key: CryptoKey\n\nexport function arrayBufferToString(\n  buffer: ArrayBuffer | Uint8Array<ArrayBufferLike>\n) {\n  const bytes = new Uint8Array(buffer)\n  const len = bytes.byteLength\n\n  // @anonrig: V8 has a limit of 65535 arguments in a function.\n  // For len < 65535, this is faster.\n  // https://github.com/vercel/next.js/pull/56377#pullrequestreview-1656181623\n  if (len < 65535) {\n    return String.fromCharCode.apply(null, bytes as unknown as number[])\n  }\n\n  let binary = ''\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i])\n  }\n  return binary\n}\n\nexport function stringToUint8Array(binary: string) {\n  const len = binary.length\n  const arr = new Uint8Array(len)\n\n  for (let i = 0; i < len; i++) {\n    arr[i] = binary.charCodeAt(i)\n  }\n\n  return arr\n}\n\nexport function encrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\nexport function decrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.decrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\n// This is a global singleton that is used to encode/decode the action bound args from\n// the closure. This can't be using a AsyncLocalStorage as it might happen on the module\n// level. Since the client reference manifest won't be mutated, let's use a global singleton\n// to keep it.\nconst SERVER_ACTION_MANIFESTS_SINGLETON = Symbol.for(\n  'next.server.action-manifests'\n)\n\nexport function setReferenceManifestsSingleton({\n  page,\n  clientReferenceManifest,\n  serverActionsManifest,\n  serverModuleMap,\n}: {\n  page: string\n  clientReferenceManifest: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest: DeepReadonly<ActionManifest>\n  serverModuleMap: {\n    [id: string]: {\n      id: string\n      chunks: string[]\n      name: string\n    }\n  }\n}) {\n  // @ts-expect-error\n  const clientReferenceManifestsPerPage = globalThis[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ]?.clientReferenceManifestsPerPage as\n    | undefined\n    | DeepReadonly<Record<string, ClientReferenceManifest>>\n\n  // @ts-expect-error\n  globalThis[SERVER_ACTION_MANIFESTS_SINGLETON] = {\n    clientReferenceManifestsPerPage: {\n      ...clientReferenceManifestsPerPage,\n      [normalizeAppPath(page)]: clientReferenceManifest,\n    },\n    serverActionsManifest,\n    serverModuleMap,\n  }\n}\n\nexport function getServerModuleMap() {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverModuleMap: {\n      [id: string]: {\n        id: string\n        chunks: string[]\n        name: string\n      }\n    }\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  return serverActionsManifestSingleton.serverModuleMap\n}\n\nexport function getClientReferenceManifestForRsc(): DeepReadonly<ClientReferenceManifestForRsc> {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    clientReferenceManifestsPerPage: DeepReadonly<\n      Record<string, ClientReferenceManifest>\n    >\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const { clientReferenceManifestsPerPage } = serverActionsManifestSingleton\n  const workStore = workAsyncStorage.getStore()\n\n  if (!workStore) {\n    // If there's no work store defined, we can assume that a client reference\n    // manifest is needed during module evaluation, e.g. to create a server\n    // action using a higher-order function. This might also use client\n    // components which need to be serialized by Flight, and therefore client\n    // references need to be resolvable. To make this work, we're returning a\n    // merged manifest across all pages. This is fine as long as the module IDs\n    // are not page specific, which they are not for Webpack. TODO: Fix this in\n    // Turbopack.\n    return mergeClientReferenceManifests(clientReferenceManifestsPerPage)\n  }\n\n  const clientReferenceManifest =\n    clientReferenceManifestsPerPage[workStore.route]\n\n  if (!clientReferenceManifest) {\n    throw new InvariantError(\n      `Missing Client Reference Manifest for ${workStore.route}.`\n    )\n  }\n\n  return clientReferenceManifest\n}\n\nexport async function getActionEncryptionKey() {\n  if (__next_loaded_action_key) {\n    return __next_loaded_action_key\n  }\n\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverActionsManifest: DeepReadonly<ActionManifest>\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const rawKey =\n    process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY ||\n    serverActionsManifestSingleton.serverActionsManifest.encryptionKey\n\n  if (rawKey === undefined) {\n    throw new InvariantError('Missing encryption key for Server Actions')\n  }\n\n  __next_loaded_action_key = await crypto.subtle.importKey(\n    'raw',\n    stringToUint8Array(atob(rawKey)),\n    'AES-GCM',\n    true,\n    ['encrypt', 'decrypt']\n  )\n\n  return __next_loaded_action_key\n}\n\nfunction mergeClientReferenceManifests(\n  clientReferenceManifestsPerPage: DeepReadonly<\n    Record<string, ClientReferenceManifest>\n  >\n): ClientReferenceManifestForRsc {\n  const clientReferenceManifests = Object.values(\n    clientReferenceManifestsPerPage as Record<string, ClientReferenceManifest>\n  )\n\n  const mergedClientReferenceManifest: ClientReferenceManifestForRsc = {\n    clientModules: {},\n    edgeRscModuleMapping: {},\n    rscModuleMapping: {},\n  }\n\n  for (const clientReferenceManifest of clientReferenceManifests) {\n    mergedClientReferenceManifest.clientModules = {\n      ...mergedClientReferenceManifest.clientModules,\n      ...clientReferenceManifest.clientModules,\n    }\n    mergedClientReferenceManifest.edgeRscModuleMapping = {\n      ...mergedClientReferenceManifest.edgeRscModuleMapping,\n      ...clientReferenceManifest.edgeRscModuleMapping,\n    }\n    mergedClientReferenceManifest.rscModuleMapping = {\n      ...mergedClientReferenceManifest.rscModuleMapping,\n      ...clientReferenceManifest.rscModuleMapping,\n    }\n  }\n\n  return mergedClientReferenceManifest\n}\n","export async function getEdgeInstrumentationModule() {\n    const instrumentation = '_ENTRIES' in globalThis && _ENTRIES.middleware_instrumentation && await _ENTRIES.middleware_instrumentation;\n    return instrumentation;\n}\nlet instrumentationModulePromise = null;\nasync function registerInstrumentation() {\n    // Ensure registerInstrumentation is not called in production build\n    if (process.env.NEXT_PHASE === 'phase-production-build') return;\n    if (!instrumentationModulePromise) {\n        instrumentationModulePromise = getEdgeInstrumentationModule();\n    }\n    const instrumentation = await instrumentationModulePromise;\n    if (instrumentation == null ? void 0 : instrumentation.register) {\n        try {\n            await instrumentation.register();\n        } catch (err) {\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n            throw err;\n        }\n    }\n}\nexport async function edgeInstrumentationOnRequestError(...args) {\n    const instrumentation = await getEdgeInstrumentationModule();\n    try {\n        var _instrumentation_onRequestError;\n        await (instrumentation == null ? void 0 : (_instrumentation_onRequestError = instrumentation.onRequestError) == null ? void 0 : _instrumentation_onRequestError.call(instrumentation, ...args));\n    } catch (err) {\n        // Log the soft error and continue, since the original error has already been thrown\n        console.error('Error in instrumentation.onRequestError:', err);\n    }\n}\nlet registerInstrumentationPromise = null;\nexport function ensureInstrumentationRegistered() {\n    if (!registerInstrumentationPromise) {\n        registerInstrumentationPromise = registerInstrumentation();\n    }\n    return registerInstrumentationPromise;\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === 'then') {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === 'function') {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nfunction enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== global.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = global.process.env;\n        global.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, '__import_unsupported', {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n    // Eagerly fire instrumentation hook to make the startup faster.\n    void ensureInstrumentationRegistered();\n}\nenhanceGlobals();\n\n//# sourceMappingURL=globals.js.map","import { PageSignatureError } from '../error';\nconst responseSymbol = Symbol('response');\nconst passThroughSymbol = Symbol('passThrough');\nconst waitUntilSymbol = Symbol('waitUntil');\nclass FetchEvent {\n    constructor(_request, waitUntil){\n        this[passThroughSymbol] = false;\n        this[waitUntilSymbol] = waitUntil ? {\n            kind: 'external',\n            function: waitUntil\n        } : {\n            kind: 'internal',\n            promises: []\n        };\n    }\n    // TODO: is this dead code? NextFetchEvent never lets this get called\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    // TODO: is this dead code? passThroughSymbol is unused\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        if (this[waitUntilSymbol].kind === 'external') {\n            // if we received an external waitUntil, we delegate to it\n            // TODO(after): this will make us not go through `getServerError(error, 'edge-server')` in `sandbox`\n            const waitUntil = this[waitUntilSymbol].function;\n            return waitUntil(promise);\n        } else {\n            // if we didn't receive an external waitUntil, we make it work on our own\n            // (and expect the caller to do something with the promises)\n            this[waitUntilSymbol].promises.push(promise);\n        }\n    }\n}\nexport function getWaitUntilPromiseFromEvent(event) {\n    return event[waitUntilSymbol].kind === 'internal' ? Promise.all(event[waitUntilSymbol].promises).then(()=>{}) : undefined;\n}\nexport class NextFetchEvent extends FetchEvent {\n    constructor(params){\n        var _params_context;\n        super(params.request, (_params_context = params.context) == null ? void 0 : _params_context.waitUntil);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map","import { stringifyCookie } from '../../web/spec-extension/cookies';\nimport { NextURL } from '../next-url';\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils';\nimport { ReflectAdapter } from './adapters/reflect';\nimport { ResponseCookies } from './cookies';\nconst INTERNALS = Symbol('internal response');\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var _init_request;\n    if (init == null ? void 0 : (_init_request = init.request) == null ? void 0 : _init_request.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error('request.headers must be an instance of Headers');\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set('x-middleware-request-' + key, value);\n            keys.push(key);\n        }\n        headers.set('x-middleware-override-headers', keys.join(','));\n    }\n}\n/**\n * This class extends the [Web `Response` API](https://developer.mozilla.org/docs/Web/API/Response) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextResponse`](https://nextjs.org/docs/app/api-reference/functions/next-response)\n */ export class NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        const headers = this.headers;\n        const cookies = new ResponseCookies(headers);\n        const cookiesProxy = new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'delete':\n                    case 'set':\n                        {\n                            return (...args)=>{\n                                const result = Reflect.apply(target[prop], target, args);\n                                const newHeaders = new Headers(headers);\n                                if (result instanceof ResponseCookies) {\n                                    headers.set('x-middleware-set-cookie', result.getAll().map((cookie)=>stringifyCookie(cookie)).join(','));\n                                }\n                                handleMiddlewareField(init, newHeaders);\n                                return result;\n                            };\n                        }\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n        this[INTERNALS] = {\n            cookies: cookiesProxy,\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeOutgoingHttpHeaders(headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === 'number' ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === 'object' ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set('Location', validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set('x-middleware-rewrite', validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set('x-middleware-next', '1');\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map","/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */\nexport function relativizeURL(url: string | string, base: string | URL) {\n  const baseURL = typeof base === 'string' ? new URL(base) : base\n  const relative = new URL(url, base)\n  const origin = `${baseURL.protocol}//${baseURL.host}`\n  return `${relative.protocol}//${relative.host}` === origin\n    ? relative.toString().replace(origin, '')\n    : relative.toString()\n}\n","import { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers';\nconst INTERNAL_QUERY_NAMES = [\n    '__nextFallback',\n    '__nextLocale',\n    '__nextInferredLocaleFromDefault',\n    '__nextDefaultLocale',\n    '__nextIsNotFound',\n    NEXT_RSC_UNION_QUERY\n];\nconst EDGE_EXTENDED_INTERNAL_QUERY_NAMES = [\n    '__nextDataReq'\n];\nexport function stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nexport function stripInternalSearchParams(url, isEdge) {\n    const isStringUrl = typeof url === 'string';\n    const instance = isStringUrl ? new URL(url) : url;\n    for (const name of INTERNAL_QUERY_NAMES){\n        instance.searchParams.delete(name);\n    }\n    if (isEdge) {\n        for (const name of EDGE_EXTENDED_INTERNAL_QUERY_NAMES){\n            instance.searchParams.delete(name);\n        }\n    }\n    return isStringUrl ? instance.toString() : instance;\n}\n\n//# sourceMappingURL=internal-utils.js.map","/** Monitor when the consumer finishes reading the response body.\nthat's as close as we can get to `res.on('close')` using web APIs.\n*/ export function trackBodyConsumed(body, onEnd) {\n    if (typeof body === 'string') {\n        const generator = async function* generate() {\n            const encoder = new TextEncoder();\n            yield encoder.encode(body);\n            onEnd();\n        };\n        // @ts-expect-error BodyInit typings doesn't seem to include AsyncIterables even though it's supported in practice\n        return generator();\n    } else {\n        return trackStreamConsumed(body, onEnd);\n    }\n}\nexport function trackStreamConsumed(stream, onEnd) {\n    const closePassThrough = new TransformStream({\n        flush: ()=>{\n            return onEnd();\n        }\n    });\n    return stream.pipeThrough(closePassThrough);\n}\nexport class CloseController {\n    onClose(callback) {\n        if (this.isClosed) {\n            throw new Error('Cannot subscribe to a closed CloseController');\n        }\n        this.target.addEventListener('close', callback);\n        this.listeners++;\n    }\n    dispatchClose() {\n        if (this.isClosed) {\n            throw new Error('Cannot close a CloseController multiple times');\n        }\n        if (this.listeners > 0) {\n            this.target.dispatchEvent(new Event('close'));\n        }\n        this.isClosed = true;\n    }\n    constructor(){\n        this.target = new EventTarget();\n        this.listeners = 0;\n        this.isClosed = false;\n    }\n}\n\n//# sourceMappingURL=web-on-close.js.map","/**\n * In edge runtime, these props directly accessed from environment variables.\n *   - local: env vars will be injected through edge-runtime as runtime env vars\n *   - deployment: env vars will be replaced by edge build pipeline\n */ export function getEdgePreviewProps() {\n    return {\n        previewModeId: process.env.NODE_ENV === 'production' ? process.env.__NEXT_PREVIEW_MODE_ID : 'development-id',\n        previewModeSigningKey: process.env.__NEXT_PREVIEW_MODE_SIGNING_KEY || '',\n        previewModeEncryptionKey: process.env.__NEXT_PREVIEW_MODE_ENCRYPTION_KEY || ''\n    };\n}\n\n//# sourceMappingURL=get-edge-preview-props.js.map","import { createAsyncLocalStorage } from '../app-render/async-local-storage';\nexport function getBuiltinRequestContext() {\n    const _globalThis = globalThis;\n    const ctx = _globalThis[NEXT_REQUEST_CONTEXT_SYMBOL];\n    return ctx == null ? void 0 : ctx.get();\n}\nconst NEXT_REQUEST_CONTEXT_SYMBOL = Symbol.for('@next/request-context');\n/** \"@next/request-context\" has a different signature from AsyncLocalStorage,\n * matching [AsyncContext.Variable](https://github.com/tc39/proposal-async-context).\n * We don't need a full AsyncContext adapter here, just having `.get()` is enough\n */ export function createLocalRequestContext() {\n    const storage = createAsyncLocalStorage();\n    return {\n        get: ()=>storage.getStore(),\n        run: (value, callback)=>storage.run(value, callback)\n    };\n}\n\n//# sourceMappingURL=builtin-request-context.js.map","import { PageSignatureError } from './error';\nimport { fromNodeOutgoingHttpHeaders, normalizeNextQueryParam } from './utils';\nimport { NextFetchEvent, getWaitUntilPromiseFromEvent } from './spec-extension/fetch-event';\nimport { NextRequest } from './spec-extension/request';\nimport { NextResponse } from './spec-extension/response';\nimport { relativizeURL } from '../../shared/lib/router/utils/relativize-url';\nimport { NextURL } from './next-url';\nimport { stripInternalSearchParams } from '../internal-utils';\nimport { normalizeRscURL } from '../../shared/lib/router/utils/app-paths';\nimport { FLIGHT_HEADERS } from '../../client/components/app-router-headers';\nimport { ensureInstrumentationRegistered } from './globals';\nimport { createRequestStoreForAPI } from '../async-storage/request-store';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { createWorkStore } from '../async-storage/work-store';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { NEXT_ROUTER_PREFETCH_HEADER } from '../../client/components/app-router-headers';\nimport { getTracer } from '../lib/trace/tracer';\nimport { MiddlewareSpan } from '../lib/trace/constants';\nimport { CloseController } from './web-on-close';\nimport { getEdgePreviewProps } from './get-edge-preview-props';\nimport { getBuiltinRequestContext } from '../after/builtin-request-context';\nexport class NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst headersGetter = {\n    keys: (headers)=>Array.from(headers.keys()),\n    get: (headers, key)=>headers.get(key) ?? undefined\n};\nlet propagator = (request, fn)=>{\n    const tracer = getTracer();\n    return tracer.withPropagatedContext(request.headers, fn, headersGetter);\n};\nlet testApisIntercepted = false;\nfunction ensureTestApisIntercepted() {\n    if (!testApisIntercepted) {\n        testApisIntercepted = true;\n        if (process.env.NEXT_PRIVATE_TEST_PROXY === 'true') {\n            const { interceptTestApis, wrapRequestHandler } = require('next/dist/experimental/testmode/server-edge');\n            interceptTestApis();\n            propagator = wrapRequestHandler(propagator);\n        }\n    }\n}\nexport async function adapter(params) {\n    var _getBuiltinRequestContext;\n    ensureTestApisIntercepted();\n    await ensureInstrumentationRegistered();\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== 'undefined';\n    params.request.url = normalizeRscURL(params.request.url);\n    const requestUrl = new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\n    // Instead we use the keys before iteration.\n    const keys = [\n        ...requestUrl.searchParams.keys()\n    ];\n    for (const key of keys){\n        const value = requestUrl.searchParams.getAll(key);\n        normalizeNextQueryParam(key, (normalizedKey)=>{\n            requestUrl.searchParams.delete(normalizedKey);\n            for (const val of value){\n                requestUrl.searchParams.append(normalizedKey, val);\n            }\n            requestUrl.searchParams.delete(key);\n        });\n    }\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = '';\n    const isNextDataRequest = params.request.headers['x-nextjs-data'];\n    if (isNextDataRequest && requestUrl.pathname === '/index') {\n        requestUrl.pathname = '/';\n    }\n    const requestHeaders = fromNodeOutgoingHttpHeaders(params.request.headers);\n    const flightHeaders = new Map();\n    // Headers should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const header of FLIGHT_HEADERS){\n            const key = header.toLowerCase();\n            const value = requestHeaders.get(key);\n            if (value) {\n                flightHeaders.set(key, value);\n                requestHeaders.delete(key);\n            }\n        }\n    }\n    const normalizeUrl = process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? new URL(params.request.url) : requestUrl;\n    const request = new NextRequestHint({\n        page: params.page,\n        // Strip internal query parameters off the request.\n        input: stripInternalSearchParams(normalizeUrl, true).toString(),\n        init: {\n            body: params.request.body,\n            headers: requestHeaders,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig,\n            signal: params.request.signal\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isNextDataRequest) {\n        Object.defineProperty(request, '__isData', {\n            enumerable: false,\n            value: true\n        });\n    }\n    if (!globalThis.__incrementalCache && params.IncrementalCache) {\n        ;\n        globalThis.__incrementalCache = new params.IncrementalCache({\n            appDir: true,\n            fetchCache: true,\n            minimalMode: process.env.NODE_ENV !== 'development',\n            fetchCacheKeyPrefix: process.env.__NEXT_FETCH_CACHE_KEY_PREFIX,\n            dev: process.env.NODE_ENV === 'development',\n            requestHeaders: params.request.headers,\n            requestProtocol: 'https',\n            getPrerenderManifest: ()=>{\n                return {\n                    version: -1,\n                    routes: {},\n                    dynamicRoutes: {},\n                    notFoundRoutes: [],\n                    preview: getEdgePreviewProps()\n                };\n            }\n        });\n    }\n    // if we're in an edge runtime sandbox, we should use the waitUntil\n    // that we receive from the enclosing NextServer\n    const outerWaitUntil = params.request.waitUntil ?? ((_getBuiltinRequestContext = getBuiltinRequestContext()) == null ? void 0 : _getBuiltinRequestContext.waitUntil);\n    const event = new NextFetchEvent({\n        request,\n        page: params.page,\n        context: outerWaitUntil ? {\n            waitUntil: outerWaitUntil\n        } : undefined\n    });\n    let response;\n    let cookiesFromResponse;\n    response = await propagator(request, ()=>{\n        // we only care to make async storage available for middleware\n        const isMiddleware = params.page === '/middleware' || params.page === '/src/middleware';\n        if (isMiddleware) {\n            // if we're in an edge function, we only get a subset of `nextConfig` (no `experimental`),\n            // so we have to inject it via DefinePlugin.\n            // in `next start` this will be passed normally (see `NextNodeServer.runMiddleware`).\n            const waitUntil = event.waitUntil.bind(event);\n            const closeController = new CloseController();\n            return getTracer().trace(MiddlewareSpan.execute, {\n                spanName: `middleware ${request.method} ${request.nextUrl.pathname}`,\n                attributes: {\n                    'http.target': request.nextUrl.pathname,\n                    'http.method': request.method\n                }\n            }, async ()=>{\n                try {\n                    var _params_request_nextConfig_experimental, _params_request_nextConfig, _params_request_nextConfig_experimental1, _params_request_nextConfig1;\n                    const onUpdateCookies = (cookies)=>{\n                        cookiesFromResponse = cookies;\n                    };\n                    const previewProps = getEdgePreviewProps();\n                    const requestStore = createRequestStoreForAPI(request, request.nextUrl, undefined, onUpdateCookies, previewProps);\n                    const workStore = createWorkStore({\n                        page: '/',\n                        fallbackRouteParams: null,\n                        renderOpts: {\n                            cacheLifeProfiles: (_params_request_nextConfig = params.request.nextConfig) == null ? void 0 : (_params_request_nextConfig_experimental = _params_request_nextConfig.experimental) == null ? void 0 : _params_request_nextConfig_experimental.cacheLife,\n                            experimental: {\n                                isRoutePPREnabled: false,\n                                dynamicIO: false,\n                                authInterrupts: !!((_params_request_nextConfig1 = params.request.nextConfig) == null ? void 0 : (_params_request_nextConfig_experimental1 = _params_request_nextConfig1.experimental) == null ? void 0 : _params_request_nextConfig_experimental1.authInterrupts)\n                            },\n                            buildId: buildId ?? '',\n                            supportsDynamicResponse: true,\n                            waitUntil,\n                            onClose: closeController.onClose.bind(closeController),\n                            onAfterTaskError: undefined\n                        },\n                        requestEndedState: {\n                            ended: false\n                        },\n                        isPrefetchRequest: request.headers.has(NEXT_ROUTER_PREFETCH_HEADER)\n                    });\n                    return await workAsyncStorage.run(workStore, ()=>workUnitAsyncStorage.run(requestStore, params.handler, request, event));\n                } finally{\n                    // middleware cannot stream, so we can consider the response closed\n                    // as soon as the handler returns.\n                    // we can delay running it until a bit later --\n                    // if it's needed, we'll have a `waitUntil` lock anyway.\n                    setTimeout(()=>{\n                        closeController.dispatchClose();\n                    }, 0);\n                }\n            });\n        }\n        return params.handler(request, event);\n    });\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError('Expected an instance of Response to be returned');\n    }\n    if (response && cookiesFromResponse) {\n        response.headers.set('set-cookie', cookiesFromResponse);\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get('x-middleware-rewrite');\n    if (response && rewrite && !isEdgeRendering) {\n        const rewriteUrl = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set('x-middleware-rewrite', String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ const relativizedRewrite = relativizeURL(String(rewriteUrl), String(requestUrl));\n        if (isNextDataRequest && // if the rewrite is external and external rewrite\n        // resolving config is enabled don't add this header\n        // so the upstream app can set it instead\n        !(process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE && relativizedRewrite.match(/http(s)?:\\/\\//))) {\n            response.headers.set('x-nextjs-rewrite', relativizedRewrite);\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get('Location');\n    if (response && redirect && !isEdgeRendering) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set('Location', String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isNextDataRequest) {\n            response.headers.delete('Location');\n            response.headers.set('x-nextjs-redirect', relativizeURL(String(redirectURL), String(requestUrl)));\n        }\n    }\n    const finalResponse = response ? response : NextResponse.next();\n    // Flight headers are not overridable / removable so they are applied at the end.\n    const middlewareOverrideHeaders = finalResponse.headers.get('x-middleware-override-headers');\n    const overwrittenHeaders = [];\n    if (middlewareOverrideHeaders) {\n        for (const [key, value] of flightHeaders){\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\n            overwrittenHeaders.push(key);\n        }\n        if (overwrittenHeaders.length > 0) {\n            finalResponse.headers.set('x-middleware-override-headers', middlewareOverrideHeaders + ',' + overwrittenHeaders.join(','));\n        }\n    }\n    return {\n        response: finalResponse,\n        waitUntil: getWaitUntilPromiseFromEvent(event) ?? Promise.resolve(),\n        fetchMetrics: request.fetchMetrics\n    };\n}\n\n//# sourceMappingURL=adapter.js.map","import { CachedRouteKind, IncrementalCacheKind } from '../../response-cache';\nimport { LRUCache } from '../lru-cache';\nimport { CACHE_ONE_YEAR, NEXT_CACHE_SOFT_TAGS_HEADER } from '../../../lib/constants';\nlet rateLimitedUntil = 0;\nlet memoryCache;\nconst CACHE_TAGS_HEADER = 'x-vercel-cache-tags';\nconst CACHE_HEADERS_HEADER = 'x-vercel-sc-headers';\nconst CACHE_STATE_HEADER = 'x-vercel-cache-state';\nconst CACHE_REVALIDATE_HEADER = 'x-vercel-revalidate';\nconst CACHE_FETCH_URL_HEADER = 'x-vercel-cache-item-name';\nconst CACHE_CONTROL_VALUE_HEADER = 'x-vercel-cache-control';\nconst DEBUG = Boolean(process.env.NEXT_PRIVATE_DEBUG_CACHE);\nasync function fetchRetryWithTimeout(url, init, retryIndex = 0) {\n    const controller = new AbortController();\n    const timeout = setTimeout(()=>{\n        controller.abort();\n    }, 500);\n    return fetch(url, {\n        ...init || {},\n        signal: controller.signal\n    }).catch((err)=>{\n        if (retryIndex === 3) {\n            throw err;\n        } else {\n            if (DEBUG) {\n                console.log(`Fetch failed for ${url} retry ${retryIndex}`);\n            }\n            return fetchRetryWithTimeout(url, init, retryIndex + 1);\n        }\n    }).finally(()=>{\n        clearTimeout(timeout);\n    });\n}\nexport default class FetchCache {\n    hasMatchingTags(arr1, arr2) {\n        if (arr1.length !== arr2.length) return false;\n        const set1 = new Set(arr1);\n        const set2 = new Set(arr2);\n        if (set1.size !== set2.size) return false;\n        for (let tag of set1){\n            if (!set2.has(tag)) return false;\n        }\n        return true;\n    }\n    static isAvailable(ctx) {\n        return !!(ctx._requestHeaders['x-vercel-sc-host'] || process.env.SUSPENSE_CACHE_URL);\n    }\n    constructor(ctx){\n        this.headers = {};\n        this.headers['Content-Type'] = 'application/json';\n        if (CACHE_HEADERS_HEADER in ctx._requestHeaders) {\n            const newHeaders = JSON.parse(ctx._requestHeaders[CACHE_HEADERS_HEADER]);\n            for(const k in newHeaders){\n                this.headers[k] = newHeaders[k];\n            }\n            delete ctx._requestHeaders[CACHE_HEADERS_HEADER];\n        }\n        const scHost = ctx._requestHeaders['x-vercel-sc-host'] || process.env.SUSPENSE_CACHE_URL;\n        const scBasePath = ctx._requestHeaders['x-vercel-sc-basepath'] || process.env.SUSPENSE_CACHE_BASEPATH;\n        if (process.env.SUSPENSE_CACHE_AUTH_TOKEN) {\n            this.headers['Authorization'] = `Bearer ${process.env.SUSPENSE_CACHE_AUTH_TOKEN}`;\n        }\n        if (scHost) {\n            const scProto = process.env.SUSPENSE_CACHE_PROTO || 'https';\n            this.cacheEndpoint = `${scProto}://${scHost}${scBasePath || ''}`;\n            if (DEBUG) {\n                console.log('using cache endpoint', this.cacheEndpoint);\n            }\n        } else if (DEBUG) {\n            console.log('no cache endpoint available');\n        }\n        if (ctx.maxMemoryCacheSize) {\n            if (!memoryCache) {\n                if (DEBUG) {\n                    console.log('using memory store for fetch cache');\n                }\n                memoryCache = new LRUCache(ctx.maxMemoryCacheSize, function length({ value }) {\n                    var _JSON_stringify;\n                    if (!value) {\n                        return 25;\n                    } else if (value.kind === CachedRouteKind.REDIRECT) {\n                        return JSON.stringify(value.props).length;\n                    } else if (value.kind === CachedRouteKind.IMAGE) {\n                        throw new Error('invariant image should not be incremental-cache');\n                    } else if (value.kind === CachedRouteKind.FETCH) {\n                        return JSON.stringify(value.data || '').length;\n                    } else if (value.kind === CachedRouteKind.APP_ROUTE) {\n                        return value.body.length;\n                    }\n                    // rough estimate of size of cache value\n                    return value.html.length + (((_JSON_stringify = JSON.stringify(value.kind === CachedRouteKind.APP_PAGE ? value.rscData : value.pageData)) == null ? void 0 : _JSON_stringify.length) || 0);\n                });\n            }\n        } else {\n            if (DEBUG) {\n                console.log('not using memory store for fetch cache');\n            }\n        }\n    }\n    resetRequestCache() {\n        memoryCache == null ? void 0 : memoryCache.reset();\n    }\n    async revalidateTag(...args) {\n        let [tags] = args;\n        tags = typeof tags === 'string' ? [\n            tags\n        ] : tags;\n        if (DEBUG) {\n            console.log('revalidateTag', tags);\n        }\n        if (!tags.length) return;\n        if (Date.now() < rateLimitedUntil) {\n            if (DEBUG) {\n                console.log('rate limited ', rateLimitedUntil);\n            }\n            return;\n        }\n        for(let i = 0; i < Math.ceil(tags.length / 64); i++){\n            const currentTags = tags.slice(i * 64, i * 64 + 64);\n            try {\n                const res = await fetchRetryWithTimeout(`${this.cacheEndpoint}/v1/suspense-cache/revalidate?tags=${currentTags.map((tag)=>encodeURIComponent(tag)).join(',')}`, {\n                    method: 'POST',\n                    headers: this.headers,\n                    // @ts-expect-error not on public type\n                    next: {\n                        internal: true\n                    }\n                });\n                if (res.status === 429) {\n                    const retryAfter = res.headers.get('retry-after') || '60000';\n                    rateLimitedUntil = Date.now() + parseInt(retryAfter);\n                }\n                if (!res.ok) {\n                    throw new Error(`Request failed with status ${res.status}.`);\n                }\n            } catch (err) {\n                console.warn(`Failed to revalidate tag`, currentTags, err);\n            }\n        }\n    }\n    async get(...args) {\n        var _data_value;\n        const [key, ctx] = args;\n        const { tags, softTags, kind: kindHint, fetchIdx, fetchUrl } = ctx;\n        if (kindHint !== IncrementalCacheKind.FETCH) {\n            return null;\n        }\n        if (Date.now() < rateLimitedUntil) {\n            if (DEBUG) {\n                console.log('rate limited');\n            }\n            return null;\n        }\n        // memory cache is cleared at the end of each request\n        // so that revalidate events are pulled from upstream\n        // on successive requests\n        let data = memoryCache == null ? void 0 : memoryCache.get(key);\n        const hasFetchKindAndMatchingTags = (data == null ? void 0 : (_data_value = data.value) == null ? void 0 : _data_value.kind) === CachedRouteKind.FETCH && this.hasMatchingTags(tags ?? [], data.value.tags ?? []);\n        // Get data from fetch cache. Also check if new tags have been\n        // specified with the same cache key (fetch URL)\n        if (this.cacheEndpoint && (!data || !hasFetchKindAndMatchingTags)) {\n            try {\n                const start = Date.now();\n                const fetchParams = {\n                    internal: true,\n                    fetchType: 'cache-get',\n                    fetchUrl: fetchUrl,\n                    fetchIdx\n                };\n                const res = await fetch(`${this.cacheEndpoint}/v1/suspense-cache/${key}`, {\n                    method: 'GET',\n                    headers: {\n                        ...this.headers,\n                        [CACHE_FETCH_URL_HEADER]: fetchUrl,\n                        [CACHE_TAGS_HEADER]: (tags == null ? void 0 : tags.join(',')) || '',\n                        [NEXT_CACHE_SOFT_TAGS_HEADER]: (softTags == null ? void 0 : softTags.join(',')) || ''\n                    },\n                    next: fetchParams\n                });\n                if (res.status === 429) {\n                    const retryAfter = res.headers.get('retry-after') || '60000';\n                    rateLimitedUntil = Date.now() + parseInt(retryAfter);\n                }\n                if (res.status === 404) {\n                    if (DEBUG) {\n                        console.log(`no fetch cache entry for ${key}, duration: ${Date.now() - start}ms`);\n                    }\n                    return null;\n                }\n                if (!res.ok) {\n                    console.error(await res.text());\n                    throw new Error(`invalid response from cache ${res.status}`);\n                }\n                const cached = await res.json();\n                if (!cached || cached.kind !== CachedRouteKind.FETCH) {\n                    DEBUG && console.log({\n                        cached\n                    });\n                    throw new Error('invalid cache value');\n                }\n                // if new tags were specified, merge those tags to the existing tags\n                if (cached.kind === CachedRouteKind.FETCH) {\n                    cached.tags ??= [];\n                    for (const tag of tags ?? []){\n                        if (!cached.tags.includes(tag)) {\n                            cached.tags.push(tag);\n                        }\n                    }\n                }\n                const cacheState = res.headers.get(CACHE_STATE_HEADER);\n                const age = res.headers.get('age');\n                data = {\n                    value: cached,\n                    // if it's already stale set it to a time in the past\n                    // if not derive last modified from age\n                    lastModified: cacheState !== 'fresh' ? Date.now() - CACHE_ONE_YEAR : Date.now() - parseInt(age || '0', 10) * 1000\n                };\n                if (DEBUG) {\n                    console.log(`got fetch cache entry for ${key}, duration: ${Date.now() - start}ms, size: ${Object.keys(cached).length}, cache-state: ${cacheState} tags: ${tags == null ? void 0 : tags.join(',')} softTags: ${softTags == null ? void 0 : softTags.join(',')}`);\n                }\n                if (data) {\n                    memoryCache == null ? void 0 : memoryCache.set(key, data);\n                }\n            } catch (err) {\n                // unable to get data from fetch-cache\n                if (DEBUG) {\n                    console.error(`Failed to get from fetch-cache`, err);\n                }\n            }\n        }\n        return data || null;\n    }\n    async set(...args) {\n        const [key, data, ctx] = args;\n        const { fetchCache, fetchIdx, fetchUrl, tags } = ctx;\n        if (!fetchCache) return;\n        if (Date.now() < rateLimitedUntil) {\n            if (DEBUG) {\n                console.log('rate limited');\n            }\n            return;\n        }\n        memoryCache == null ? void 0 : memoryCache.set(key, {\n            value: data,\n            lastModified: Date.now()\n        });\n        if (this.cacheEndpoint) {\n            try {\n                const start = Date.now();\n                if (data !== null && 'revalidate' in data) {\n                    this.headers[CACHE_REVALIDATE_HEADER] = data.revalidate.toString();\n                }\n                if (!this.headers[CACHE_REVALIDATE_HEADER] && data !== null && 'data' in data) {\n                    this.headers[CACHE_CONTROL_VALUE_HEADER] = data.data.headers['cache-control'];\n                }\n                const body = JSON.stringify({\n                    ...data,\n                    // we send the tags in the header instead\n                    // of in the body here\n                    tags: undefined\n                });\n                if (DEBUG) {\n                    console.log('set cache', key);\n                }\n                const fetchParams = {\n                    internal: true,\n                    fetchType: 'cache-set',\n                    fetchUrl,\n                    fetchIdx\n                };\n                const res = await fetch(`${this.cacheEndpoint}/v1/suspense-cache/${key}`, {\n                    method: 'POST',\n                    headers: {\n                        ...this.headers,\n                        [CACHE_FETCH_URL_HEADER]: fetchUrl || '',\n                        [CACHE_TAGS_HEADER]: (tags == null ? void 0 : tags.join(',')) || ''\n                    },\n                    body: body,\n                    next: fetchParams\n                });\n                if (res.status === 429) {\n                    const retryAfter = res.headers.get('retry-after') || '60000';\n                    rateLimitedUntil = Date.now() + parseInt(retryAfter);\n                }\n                if (!res.ok) {\n                    DEBUG && console.log(await res.text());\n                    throw new Error(`invalid response ${res.status}`);\n                }\n                if (DEBUG) {\n                    console.log(`successfully set to fetch-cache for ${key}, duration: ${Date.now() - start}ms, size: ${body.length}`);\n                }\n            } catch (err) {\n                // unable to set to fetch-cache\n                if (DEBUG) {\n                    console.error(`Failed to update fetch cache`, err);\n                }\n            }\n        }\n        return;\n    }\n}\n\n//# sourceMappingURL=fetch-cache.js.map","// we share tags manifest between \"use cache\" handlers and\n// previous file-system-cache\nexport const tagsManifest = {\n    items: {}\n};\nexport const isTagStale = (tags, timestamp)=>{\n    for (const tag of tags){\n        const tagEntry = tagsManifest.items[tag];\n        if (typeof (tagEntry == null ? void 0 : tagEntry.revalidatedAt) === 'number' && // TODO: use performance.now and update file-system-cache?\n        tagEntry.revalidatedAt >= timestamp) {\n            return true;\n        }\n    }\n    return false;\n};\n\n//# sourceMappingURL=tags-manifest.external.js.map","import { CachedRouteKind, IncrementalCacheKind } from '../../response-cache';\nimport { LRUCache } from '../lru-cache';\nimport path from '../../../shared/lib/isomorphic/path';\nimport { NEXT_CACHE_TAGS_HEADER, NEXT_DATA_SUFFIX, NEXT_META_SUFFIX, RSC_PREFETCH_SUFFIX, RSC_SEGMENT_SUFFIX, RSC_SEGMENTS_DIR_SUFFIX, RSC_SUFFIX } from '../../../lib/constants';\nimport { tagsManifest } from './tags-manifest.external';\nlet memoryCache;\nexport default class FileSystemCache {\n    constructor(ctx){\n        this.fs = ctx.fs;\n        this.flushToDisk = ctx.flushToDisk;\n        this.serverDistDir = ctx.serverDistDir;\n        this.revalidatedTags = ctx.revalidatedTags;\n        this.debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;\n        if (ctx.maxMemoryCacheSize) {\n            if (!memoryCache) {\n                if (this.debug) {\n                    console.log('using memory store for fetch cache');\n                }\n                memoryCache = new LRUCache(ctx.maxMemoryCacheSize, function length({ value }) {\n                    var _JSON_stringify;\n                    if (!value) {\n                        return 25;\n                    } else if (value.kind === CachedRouteKind.REDIRECT) {\n                        return JSON.stringify(value.props).length;\n                    } else if (value.kind === CachedRouteKind.IMAGE) {\n                        throw new Error('invariant image should not be incremental-cache');\n                    } else if (value.kind === CachedRouteKind.FETCH) {\n                        return JSON.stringify(value.data || '').length;\n                    } else if (value.kind === CachedRouteKind.APP_ROUTE) {\n                        return value.body.length;\n                    }\n                    // rough estimate of size of cache value\n                    return value.html.length + (((_JSON_stringify = JSON.stringify(value.kind === CachedRouteKind.APP_PAGE ? value.rscData : value.pageData)) == null ? void 0 : _JSON_stringify.length) || 0);\n                });\n            }\n        } else if (this.debug) {\n            console.log('not using memory store for fetch cache');\n        }\n    }\n    resetRequestCache() {}\n    async revalidateTag(...args) {\n        let [tags] = args;\n        tags = typeof tags === 'string' ? [\n            tags\n        ] : tags;\n        if (this.debug) {\n            console.log('revalidateTag', tags);\n        }\n        if (tags.length === 0) {\n            return;\n        }\n        for (const tag of tags){\n            const data = tagsManifest.items[tag] || {};\n            data.revalidatedAt = Date.now();\n            tagsManifest.items[tag] = data;\n        }\n    }\n    async get(...args) {\n        var _data_value, _data_value1, _data_value2;\n        const [key, ctx] = args;\n        const { tags, softTags, kind, isRoutePPREnabled, isFallback } = ctx;\n        let data = memoryCache == null ? void 0 : memoryCache.get(key);\n        if (this.debug) {\n            console.log('get', key, tags, kind, !!data);\n        }\n        // let's check the disk for seed data\n        if (!data && process.env.NEXT_RUNTIME !== 'edge') {\n            if (kind === IncrementalCacheKind.APP_ROUTE) {\n                try {\n                    const filePath = this.getFilePath(`${key}.body`, IncrementalCacheKind.APP_ROUTE);\n                    const fileData = await this.fs.readFile(filePath);\n                    const { mtime } = await this.fs.stat(filePath);\n                    const meta = JSON.parse(await this.fs.readFile(filePath.replace(/\\.body$/, NEXT_META_SUFFIX), 'utf8'));\n                    const cacheEntry = {\n                        lastModified: mtime.getTime(),\n                        value: {\n                            kind: CachedRouteKind.APP_ROUTE,\n                            body: fileData,\n                            headers: meta.headers,\n                            status: meta.status\n                        }\n                    };\n                    return cacheEntry;\n                } catch  {\n                    return null;\n                }\n            }\n            try {\n                const filePath = this.getFilePath(kind === IncrementalCacheKind.FETCH ? key : `${key}.html`, kind);\n                const fileData = await this.fs.readFile(filePath, 'utf8');\n                const { mtime } = await this.fs.stat(filePath);\n                if (kind === IncrementalCacheKind.FETCH) {\n                    var _data_value3;\n                    if (!this.flushToDisk) return null;\n                    const lastModified = mtime.getTime();\n                    const parsedData = JSON.parse(fileData);\n                    data = {\n                        lastModified,\n                        value: parsedData\n                    };\n                    if (((_data_value3 = data.value) == null ? void 0 : _data_value3.kind) === CachedRouteKind.FETCH) {\n                        var _data_value4;\n                        const storedTags = (_data_value4 = data.value) == null ? void 0 : _data_value4.tags;\n                        // update stored tags if a new one is being added\n                        // TODO: remove this when we can send the tags\n                        // via header on GET same as SET\n                        if (!(tags == null ? void 0 : tags.every((tag)=>storedTags == null ? void 0 : storedTags.includes(tag)))) {\n                            if (this.debug) {\n                                console.log('tags vs storedTags mismatch', tags, storedTags);\n                            }\n                            await this.set(key, data.value, {\n                                tags,\n                                isRoutePPREnabled\n                            });\n                        }\n                    }\n                } else if (kind === IncrementalCacheKind.APP_PAGE) {\n                    // We try to load the metadata file, but if it fails, we don't\n                    // error. We also don't load it if this is a fallback.\n                    let meta;\n                    try {\n                        meta = JSON.parse(await this.fs.readFile(filePath.replace(/\\.html$/, NEXT_META_SUFFIX), 'utf8'));\n                    } catch  {}\n                    let maybeSegmentData;\n                    if (meta == null ? void 0 : meta.segmentPaths) {\n                        // Collect all the segment data for this page.\n                        // TODO: To optimize file system reads, we should consider creating\n                        // separate cache entries for each segment, rather than storing them\n                        // all on the page's entry. Though the behavior is\n                        // identical regardless.\n                        const segmentData = new Map();\n                        maybeSegmentData = segmentData;\n                        const segmentsDir = key + RSC_SEGMENTS_DIR_SUFFIX;\n                        await Promise.all(meta.segmentPaths.map(async (segmentPath)=>{\n                            const segmentDataFilePath = this.getFilePath(segmentPath === '/' ? segmentsDir + '/_index' + RSC_SEGMENT_SUFFIX : segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX, IncrementalCacheKind.APP_PAGE);\n                            try {\n                                segmentData.set(segmentPath, await this.fs.readFile(segmentDataFilePath));\n                            } catch  {\n                            // This shouldn't happen, but if for some reason we fail to\n                            // load a segment from the filesystem, treat it the same as if\n                            // the segment is dynamic and does not have a prefetch.\n                            }\n                        }));\n                    }\n                    let rscData;\n                    if (!isFallback) {\n                        rscData = await this.fs.readFile(this.getFilePath(`${key}${isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX}`, IncrementalCacheKind.APP_PAGE));\n                    }\n                    data = {\n                        lastModified: mtime.getTime(),\n                        value: {\n                            kind: CachedRouteKind.APP_PAGE,\n                            html: fileData,\n                            rscData,\n                            postponed: meta == null ? void 0 : meta.postponed,\n                            headers: meta == null ? void 0 : meta.headers,\n                            status: meta == null ? void 0 : meta.status,\n                            segmentData: maybeSegmentData\n                        }\n                    };\n                } else if (kind === IncrementalCacheKind.PAGES) {\n                    let meta;\n                    let pageData = {};\n                    if (!isFallback) {\n                        pageData = JSON.parse(await this.fs.readFile(this.getFilePath(`${key}${NEXT_DATA_SUFFIX}`, IncrementalCacheKind.PAGES), 'utf8'));\n                    }\n                    data = {\n                        lastModified: mtime.getTime(),\n                        value: {\n                            kind: CachedRouteKind.PAGES,\n                            html: fileData,\n                            pageData,\n                            headers: meta == null ? void 0 : meta.headers,\n                            status: meta == null ? void 0 : meta.status\n                        }\n                    };\n                } else {\n                    throw new Error(`Invariant: Unexpected route kind ${kind} in file system cache.`);\n                }\n                if (data) {\n                    memoryCache == null ? void 0 : memoryCache.set(key, data);\n                }\n            } catch  {\n                return null;\n            }\n        }\n        if ((data == null ? void 0 : (_data_value = data.value) == null ? void 0 : _data_value.kind) === CachedRouteKind.APP_PAGE || (data == null ? void 0 : (_data_value1 = data.value) == null ? void 0 : _data_value1.kind) === CachedRouteKind.PAGES) {\n            var _data_value_headers;\n            let cacheTags;\n            const tagsHeader = (_data_value_headers = data.value.headers) == null ? void 0 : _data_value_headers[NEXT_CACHE_TAGS_HEADER];\n            if (typeof tagsHeader === 'string') {\n                cacheTags = tagsHeader.split(',');\n            }\n            if (cacheTags == null ? void 0 : cacheTags.length) {\n                const isStale = cacheTags.some((tag)=>{\n                    var _tagsManifest_items_tag;\n                    return (tagsManifest == null ? void 0 : (_tagsManifest_items_tag = tagsManifest.items[tag]) == null ? void 0 : _tagsManifest_items_tag.revalidatedAt) && (tagsManifest == null ? void 0 : tagsManifest.items[tag].revalidatedAt) >= ((data == null ? void 0 : data.lastModified) || Date.now());\n                });\n                // we trigger a blocking validation if an ISR page\n                // had a tag revalidated, if we want to be a background\n                // revalidation instead we return data.lastModified = -1\n                if (isStale) {\n                    return null;\n                }\n            }\n        } else if ((data == null ? void 0 : (_data_value2 = data.value) == null ? void 0 : _data_value2.kind) === CachedRouteKind.FETCH) {\n            const combinedTags = [\n                ...tags || [],\n                ...softTags || []\n            ];\n            const wasRevalidated = combinedTags.some((tag)=>{\n                var _tagsManifest_items_tag;\n                if (this.revalidatedTags.includes(tag)) {\n                    return true;\n                }\n                return (tagsManifest == null ? void 0 : (_tagsManifest_items_tag = tagsManifest.items[tag]) == null ? void 0 : _tagsManifest_items_tag.revalidatedAt) && (tagsManifest == null ? void 0 : tagsManifest.items[tag].revalidatedAt) >= ((data == null ? void 0 : data.lastModified) || Date.now());\n            });\n            // When revalidate tag is called we don't return\n            // stale data so it's updated right away\n            if (wasRevalidated) {\n                data = undefined;\n            }\n        }\n        return data ?? null;\n    }\n    async set(...args) {\n        const [key, data, ctx] = args;\n        const { isFallback } = ctx;\n        memoryCache == null ? void 0 : memoryCache.set(key, {\n            value: data,\n            lastModified: Date.now()\n        });\n        if (this.debug) {\n            console.log('set', key);\n        }\n        if (!this.flushToDisk || !data) return;\n        if (data.kind === CachedRouteKind.APP_ROUTE) {\n            const filePath = this.getFilePath(`${key}.body`, IncrementalCacheKind.APP_ROUTE);\n            await this.fs.mkdir(path.dirname(filePath));\n            await this.fs.writeFile(filePath, data.body);\n            const meta = {\n                headers: data.headers,\n                status: data.status,\n                postponed: undefined,\n                segmentPaths: undefined\n            };\n            await this.fs.writeFile(filePath.replace(/\\.body$/, NEXT_META_SUFFIX), JSON.stringify(meta, null, 2));\n        } else if (data.kind === CachedRouteKind.PAGES || data.kind === CachedRouteKind.APP_PAGE) {\n            const isAppPath = data.kind === CachedRouteKind.APP_PAGE;\n            const htmlPath = this.getFilePath(`${key}.html`, isAppPath ? IncrementalCacheKind.APP_PAGE : IncrementalCacheKind.PAGES);\n            await this.fs.mkdir(path.dirname(htmlPath));\n            await this.fs.writeFile(htmlPath, data.html);\n            // Fallbacks don't generate a data file.\n            if (!isFallback) {\n                await this.fs.writeFile(this.getFilePath(`${key}${isAppPath ? ctx.isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX : NEXT_DATA_SUFFIX}`, isAppPath ? IncrementalCacheKind.APP_PAGE : IncrementalCacheKind.PAGES), isAppPath ? data.rscData : JSON.stringify(data.pageData));\n            }\n            if ((data == null ? void 0 : data.kind) === CachedRouteKind.APP_PAGE) {\n                const meta = {\n                    headers: data.headers,\n                    status: data.status,\n                    postponed: data.postponed,\n                    segmentPaths: undefined\n                };\n                await this.fs.writeFile(htmlPath.replace(/\\.html$/, NEXT_META_SUFFIX), JSON.stringify(meta));\n            }\n        } else if (data.kind === CachedRouteKind.FETCH) {\n            const filePath = this.getFilePath(key, IncrementalCacheKind.FETCH);\n            await this.fs.mkdir(path.dirname(filePath));\n            await this.fs.writeFile(filePath, JSON.stringify({\n                ...data,\n                tags: ctx.tags\n            }));\n        }\n    }\n    getFilePath(pathname, kind) {\n        switch(kind){\n            case IncrementalCacheKind.FETCH:\n                // we store in .next/cache/fetch-cache so it can be persisted\n                // across deploys\n                return path.join(this.serverDistDir, '..', 'cache', 'fetch-cache', pathname);\n            case IncrementalCacheKind.PAGES:\n                return path.join(this.serverDistDir, 'pages', pathname);\n            case IncrementalCacheKind.IMAGE:\n            case IncrementalCacheKind.APP_PAGE:\n            case IncrementalCacheKind.APP_ROUTE:\n                return path.join(this.serverDistDir, 'app', pathname);\n            default:\n                throw new Error(`Unexpected file path kind: ${kind}`);\n        }\n    }\n}\n\n//# sourceMappingURL=file-system-cache.js.map","import { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n    '(..)(..)',\n    '(.)',\n    '(..)',\n    '(...)'\n];\nexport function isInterceptionRouteAppPath(path) {\n    // TODO-APP: add more serious validation\n    return path.split('/').find((segment)=>INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m))) !== undefined;\n}\nexport function extractInterceptionRouteInformation(path) {\n    let interceptingRoute, marker, interceptedRoute;\n    for (const segment of path.split('/')){\n        marker = INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m));\n        if (marker) {\n            ;\n            [interceptingRoute, interceptedRoute] = path.split(marker, 2);\n            break;\n        }\n    }\n    if (!interceptingRoute || !marker || !interceptedRoute) {\n        throw new Error(`Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`);\n    }\n    interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n    ;\n    switch(marker){\n        case '(.)':\n            // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n            if (interceptingRoute === '/') {\n                interceptedRoute = `/${interceptedRoute}`;\n            } else {\n                interceptedRoute = interceptingRoute + '/' + interceptedRoute;\n            }\n            break;\n        case '(..)':\n            // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n            if (interceptingRoute === '/') {\n                throw new Error(`Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`);\n            }\n            interceptedRoute = interceptingRoute.split('/').slice(0, -1).concat(interceptedRoute).join('/');\n            break;\n        case '(...)':\n            // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n            interceptedRoute = '/' + interceptedRoute;\n            break;\n        case '(..)(..)':\n            // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n            const splitInterceptingRoute = interceptingRoute.split('/');\n            if (splitInterceptingRoute.length <= 2) {\n                throw new Error(`Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`);\n            }\n            interceptedRoute = splitInterceptingRoute.slice(0, -2).concat(interceptedRoute).join('/');\n            break;\n        default:\n            throw new Error('Invariant: unexpected marker');\n    }\n    return {\n        interceptingRoute,\n        interceptedRoute\n    };\n}\n\n//# sourceMappingURL=interception-routes.js.map","import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from '../../../../server/lib/interception-routes'\n\n// Identify /[param]/ in route string\nconst TEST_ROUTE = /\\/\\[[^/]+?\\](?=\\/|$)/\n\nexport function isDynamicRoute(route: string): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  return TEST_ROUTE.test(route)\n}\n","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n  domainLocales?: DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration#on-demand-revalidation-with-revalidatepath\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n","import { ensureLeadingSlash } from './ensure-leading-slash'\nimport { isDynamicRoute } from '../router/utils'\nimport { NormalizeError } from '../utils'\n\n/**\n * Takes a page and transforms it into its file counterpart ensuring that the\n * output is normalized. Note this function is not idempotent because a page\n * `/index` can be referencing `/index/index.js` and `/index/index` could be\n * referencing `/index/index/index.js`. Examples:\n *  - `/` -> `/index`\n *  - `/index/foo` -> `/index/index/foo`\n *  - `/index` -> `/index/index`\n */\nexport function normalizePagePath(page: string): string {\n  const normalized =\n    /^\\/index(\\/|$)/.test(page) && !isDynamicRoute(page)\n      ? `/index${page}`\n      : page === '/'\n        ? '/index'\n        : ensureLeadingSlash(page)\n\n  if (process.env.NEXT_RUNTIME !== 'edge') {\n    const { posix } = require('path')\n    const resolvedPage = posix.normalize(normalized)\n    if (resolvedPage !== normalized) {\n      throw new NormalizeError(\n        `Requested and resolved page mismatch: ${normalized} ${resolvedPage}`\n      )\n    }\n  }\n\n  return normalized\n}\n","/**\n * This transforms a URL pathname into a route. It removes any trailing slashes\n * and the `/index` suffix.\n *\n * @param {string} pathname - The URL path that needs to be optimized.\n * @returns {string} - The route\n *\n * @example\n * // returns '/example'\n * toRoute('/example/index/');\n *\n * @example\n * // returns '/example'\n * toRoute('/example/');\n *\n * @example\n * // returns '/'\n * toRoute('/index/');\n *\n * @example\n * // returns '/'\n * toRoute('/');\n */ export function toRoute(pathname) {\n    return pathname.replace(/(?:\\/index)?\\/?$/, '') || '/';\n}\n\n//# sourceMappingURL=to-route.js.map","/**\n * A shared cache of revalidate timings for routes. This cache is used so we\n * don't have to modify the prerender manifest when we want to update the\n * revalidate timings for a route.\n */ export class SharedRevalidateTimings {\n    static #_ = /**\n   * The in-memory cache of revalidate timings for routes. This cache is\n   * populated when the cache is updated with new timings.\n   */ this.timings = new Map();\n    constructor(/**\n     * The prerender manifest that contains the initial revalidate timings for\n     * routes.\n     */ prerenderManifest){\n        this.prerenderManifest = prerenderManifest;\n    }\n    /**\n   * Try to get the revalidate timings for a route. This will first try to get\n   * the timings from the in-memory cache. If the timings are not present in the\n   * in-memory cache, then the timings will be sourced from the prerender\n   * manifest.\n   *\n   * @param route the route to get the revalidate timings for\n   * @returns the revalidate timings for the route, or undefined if the timings\n   *          are not present in the in-memory cache or the prerender manifest\n   */ get(route) {\n        var _this_prerenderManifest_routes_route, _this_prerenderManifest_dynamicRoutes_route;\n        // This is a copy on write cache that is updated when the cache is updated.\n        // If the cache is never written to, then the timings will be sourced from\n        // the prerender manifest.\n        let revalidate = SharedRevalidateTimings.timings.get(route);\n        if (typeof revalidate !== 'undefined') return revalidate;\n        revalidate = (_this_prerenderManifest_routes_route = this.prerenderManifest.routes[route]) == null ? void 0 : _this_prerenderManifest_routes_route.initialRevalidateSeconds;\n        if (typeof revalidate !== 'undefined') return revalidate;\n        revalidate = (_this_prerenderManifest_dynamicRoutes_route = this.prerenderManifest.dynamicRoutes[route]) == null ? void 0 : _this_prerenderManifest_dynamicRoutes_route.fallbackRevalidate;\n        if (typeof revalidate !== 'undefined') return revalidate;\n        return undefined;\n    }\n    /**\n   * Set the revalidate timings for a route.\n   *\n   * @param route the route to set the revalidate timings for\n   * @param revalidate the revalidate timings for the route\n   */ set(route, revalidate) {\n        SharedRevalidateTimings.timings.set(route, revalidate);\n    }\n    /**\n   * Clear the in-memory cache of revalidate timings for routes.\n   */ clear() {\n        SharedRevalidateTimings.timings.clear();\n    }\n}\n\n//# sourceMappingURL=shared-revalidate-timings.js.map","import { IncrementalCacheKind, CachedRouteKind } from '../../response-cache';\nimport FetchCache from './fetch-cache';\nimport FileSystemCache from './file-system-cache';\nimport { normalizePagePath } from '../../../shared/lib/page-path/normalize-page-path';\nimport { CACHE_ONE_YEAR, NEXT_CACHE_REVALIDATED_TAGS_HEADER, NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER, PRERENDER_REVALIDATE_HEADER } from '../../../lib/constants';\nimport { toRoute } from '../to-route';\nimport { SharedRevalidateTimings } from './shared-revalidate-timings';\nimport { workUnitAsyncStorageInstance } from '../../app-render/work-unit-async-storage-instance';\nimport { getPrerenderResumeDataCache, getRenderResumeDataCache } from '../../app-render/work-unit-async-storage.external';\nexport class CacheHandler {\n    // eslint-disable-next-line\n    constructor(_ctx){}\n    async get(..._args) {\n        return {};\n    }\n    async set(..._args) {}\n    async revalidateTag(..._args) {}\n    resetRequestCache() {}\n}\nexport class IncrementalCache {\n    constructor({ fs, dev, dynamicIO, flushToDisk, fetchCache, minimalMode, serverDistDir, requestHeaders, requestProtocol, maxMemoryCacheSize, getPrerenderManifest, fetchCacheKeyPrefix, CurCacheHandler, allowedRevalidateHeaderKeys }){\n        var _this_prerenderManifest_preview, _this_prerenderManifest, _this_prerenderManifest_preview1, _this_prerenderManifest1;\n        this.locks = new Map();\n        const debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;\n        this.hasCustomCacheHandler = Boolean(CurCacheHandler);\n        const cacheHandlersSymbol = Symbol.for('@next/cache-handlers');\n        const _globalThis = globalThis;\n        if (!CurCacheHandler) {\n            // if we have a global cache handler available leverage it\n            const globalCacheHandler = _globalThis[cacheHandlersSymbol];\n            if (globalCacheHandler == null ? void 0 : globalCacheHandler.FetchCache) {\n                CurCacheHandler = globalCacheHandler.FetchCache;\n            } else {\n                if (fs && serverDistDir) {\n                    if (debug) {\n                        console.log('using filesystem cache handler');\n                    }\n                    CurCacheHandler = FileSystemCache;\n                }\n                if (FetchCache.isAvailable({\n                    _requestHeaders: requestHeaders\n                }) && minimalMode && fetchCache) {\n                    if (debug) {\n                        console.log('using fetch cache handler');\n                    }\n                    CurCacheHandler = FetchCache;\n                }\n            }\n        } else if (debug) {\n            console.log('using custom cache handler', CurCacheHandler.name);\n        }\n        if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {\n            // Allow cache size to be overridden for testing purposes\n            maxMemoryCacheSize = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10);\n        }\n        this.dev = dev;\n        this.hasDynamicIO = dynamicIO;\n        this.disableForTestmode = process.env.NEXT_PRIVATE_TEST_PROXY === 'true';\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        const minimalModeKey = 'minimalMode';\n        this[minimalModeKey] = minimalMode;\n        this.requestHeaders = requestHeaders;\n        this.requestProtocol = requestProtocol;\n        this.allowedRevalidateHeaderKeys = allowedRevalidateHeaderKeys;\n        this.prerenderManifest = getPrerenderManifest();\n        this.revalidateTimings = new SharedRevalidateTimings(this.prerenderManifest);\n        this.fetchCacheKeyPrefix = fetchCacheKeyPrefix;\n        let revalidatedTags = [];\n        if (requestHeaders[PRERENDER_REVALIDATE_HEADER] === ((_this_prerenderManifest = this.prerenderManifest) == null ? void 0 : (_this_prerenderManifest_preview = _this_prerenderManifest.preview) == null ? void 0 : _this_prerenderManifest_preview.previewModeId)) {\n            this.isOnDemandRevalidate = true;\n        }\n        if (minimalMode && typeof requestHeaders[NEXT_CACHE_REVALIDATED_TAGS_HEADER] === 'string' && requestHeaders[NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] === ((_this_prerenderManifest1 = this.prerenderManifest) == null ? void 0 : (_this_prerenderManifest_preview1 = _this_prerenderManifest1.preview) == null ? void 0 : _this_prerenderManifest_preview1.previewModeId)) {\n            revalidatedTags = requestHeaders[NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(',');\n        }\n        if (CurCacheHandler) {\n            this.cacheHandler = new CurCacheHandler({\n                dev,\n                fs,\n                flushToDisk,\n                serverDistDir,\n                revalidatedTags,\n                maxMemoryCacheSize,\n                _requestHeaders: requestHeaders,\n                fetchCacheKeyPrefix\n            });\n        }\n    }\n    calculateRevalidate(pathname, fromTime, dev, isFallback) {\n        // in development we don't have a prerender-manifest\n        // and default to always revalidating to allow easier debugging\n        if (dev) return Math.floor(performance.timeOrigin + performance.now() - 1000);\n        // if an entry isn't present in routes we fallback to a default\n        // of revalidating after 1 second unless it's a fallback request.\n        const initialRevalidateSeconds = this.revalidateTimings.get(toRoute(pathname)) ?? (isFallback ? false : 1);\n        const revalidateAfter = typeof initialRevalidateSeconds === 'number' ? initialRevalidateSeconds * 1000 + fromTime : initialRevalidateSeconds;\n        return revalidateAfter;\n    }\n    _getPathname(pathname, fetchCache) {\n        return fetchCache ? pathname : normalizePagePath(pathname);\n    }\n    resetRequestCache() {\n        var _this_cacheHandler_resetRequestCache, _this_cacheHandler;\n        (_this_cacheHandler = this.cacheHandler) == null ? void 0 : (_this_cacheHandler_resetRequestCache = _this_cacheHandler.resetRequestCache) == null ? void 0 : _this_cacheHandler_resetRequestCache.call(_this_cacheHandler);\n    }\n    async lock(cacheKey) {\n        let unlockNext = ()=>Promise.resolve();\n        const existingLock = this.locks.get(cacheKey);\n        if (existingLock) {\n            await existingLock;\n        }\n        const newLock = new Promise((resolve)=>{\n            unlockNext = async ()=>{\n                resolve();\n                this.locks.delete(cacheKey) // Remove the lock upon release\n                ;\n            };\n        });\n        this.locks.set(cacheKey, newLock);\n        return unlockNext;\n    }\n    async revalidateTag(tags) {\n        var _this_cacheHandler_revalidateTag, _this_cacheHandler;\n        return (_this_cacheHandler = this.cacheHandler) == null ? void 0 : (_this_cacheHandler_revalidateTag = _this_cacheHandler.revalidateTag) == null ? void 0 : _this_cacheHandler_revalidateTag.call(_this_cacheHandler, tags);\n    }\n    // x-ref: https://github.com/facebook/react/blob/2655c9354d8e1c54ba888444220f63e836925caa/packages/react/src/ReactFetch.js#L23\n    async generateCacheKey(url, init = {}) {\n        // this should be bumped anytime a fix is made to cache entries\n        // that should bust the cache\n        const MAIN_KEY_PREFIX = 'v3';\n        const bodyChunks = [];\n        const encoder = new TextEncoder();\n        const decoder = new TextDecoder();\n        if (init.body) {\n            // handle ReadableStream body\n            if (typeof init.body.getReader === 'function') {\n                const readableBody = init.body;\n                const chunks = [];\n                try {\n                    await readableBody.pipeTo(new WritableStream({\n                        write (chunk) {\n                            if (typeof chunk === 'string') {\n                                chunks.push(encoder.encode(chunk));\n                                bodyChunks.push(chunk);\n                            } else {\n                                chunks.push(chunk);\n                                bodyChunks.push(decoder.decode(chunk, {\n                                    stream: true\n                                }));\n                            }\n                        }\n                    }));\n                    // Flush the decoder.\n                    bodyChunks.push(decoder.decode());\n                    // Create a new buffer with all the chunks.\n                    const length = chunks.reduce((total, arr)=>total + arr.length, 0);\n                    const arrayBuffer = new Uint8Array(length);\n                    // Push each of the chunks into the new array buffer.\n                    let offset = 0;\n                    for (const chunk of chunks){\n                        arrayBuffer.set(chunk, offset);\n                        offset += chunk.length;\n                    }\n                    ;\n                    init._ogBody = arrayBuffer;\n                } catch (err) {\n                    console.error('Problem reading body', err);\n                }\n            } else if (typeof init.body.keys === 'function') {\n                const formData = init.body;\n                init._ogBody = init.body;\n                for (const key of new Set([\n                    ...formData.keys()\n                ])){\n                    const values = formData.getAll(key);\n                    bodyChunks.push(`${key}=${(await Promise.all(values.map(async (val)=>{\n                        if (typeof val === 'string') {\n                            return val;\n                        } else {\n                            return await val.text();\n                        }\n                    }))).join(',')}`);\n                }\n            // handle blob body\n            } else if (typeof init.body.arrayBuffer === 'function') {\n                const blob = init.body;\n                const arrayBuffer = await blob.arrayBuffer();\n                bodyChunks.push(await blob.text());\n                init._ogBody = new Blob([\n                    arrayBuffer\n                ], {\n                    type: blob.type\n                });\n            } else if (typeof init.body === 'string') {\n                bodyChunks.push(init.body);\n                init._ogBody = init.body;\n            }\n        }\n        const headers = typeof (init.headers || {}).keys === 'function' ? Object.fromEntries(init.headers) : Object.assign({}, init.headers);\n        if ('traceparent' in headers) delete headers['traceparent'];\n        const cacheString = JSON.stringify([\n            MAIN_KEY_PREFIX,\n            this.fetchCacheKeyPrefix || '',\n            url,\n            init.method,\n            headers,\n            init.mode,\n            init.redirect,\n            init.credentials,\n            init.referrer,\n            init.referrerPolicy,\n            init.integrity,\n            init.cache,\n            bodyChunks\n        ]);\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            function bufferToHex(buffer) {\n                return Array.prototype.map.call(new Uint8Array(buffer), (b)=>b.toString(16).padStart(2, '0')).join('');\n            }\n            const buffer = encoder.encode(cacheString);\n            return bufferToHex(await crypto.subtle.digest('SHA-256', buffer));\n        } else {\n            const crypto1 = require('crypto');\n            return crypto1.createHash('sha256').update(cacheString).digest('hex');\n        }\n    }\n    // get data from cache if available\n    async get(cacheKey, ctx) {\n        var _this_cacheHandler, _cacheData_value;\n        // unlike other caches if we have a cacheScope we use it even if\n        // testmode would normally disable it or if requestHeaders say 'no-cache'.\n        if (this.hasDynamicIO && ctx.kind === IncrementalCacheKind.FETCH) {\n            const workUnitStore = workUnitAsyncStorageInstance.getStore();\n            const resumeDataCache = workUnitStore ? getRenderResumeDataCache(workUnitStore) : null;\n            if (resumeDataCache) {\n                const memoryCacheData = resumeDataCache.fetch.get(cacheKey);\n                if ((memoryCacheData == null ? void 0 : memoryCacheData.kind) === CachedRouteKind.FETCH) {\n                    return {\n                        isStale: false,\n                        value: memoryCacheData,\n                        revalidateAfter: false,\n                        isFallback: false\n                    };\n                }\n            }\n        }\n        // we don't leverage the prerender cache in dev mode\n        // so that getStaticProps is always called for easier debugging\n        if (this.disableForTestmode || this.dev && (ctx.kind !== IncrementalCacheKind.FETCH || this.requestHeaders['cache-control'] === 'no-cache')) {\n            return null;\n        }\n        const { isFallback } = ctx;\n        cacheKey = this._getPathname(cacheKey, ctx.kind === IncrementalCacheKind.FETCH);\n        let entry = null;\n        let revalidate = ctx.revalidate;\n        const cacheData = await ((_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.get(cacheKey, ctx));\n        if ((cacheData == null ? void 0 : (_cacheData_value = cacheData.value) == null ? void 0 : _cacheData_value.kind) === CachedRouteKind.FETCH) {\n            const combinedTags = [\n                ...ctx.tags || [],\n                ...ctx.softTags || []\n            ];\n            // if a tag was revalidated we don't return stale data\n            if (combinedTags.some((tag)=>{\n                var _this_revalidatedTags;\n                return (_this_revalidatedTags = this.revalidatedTags) == null ? void 0 : _this_revalidatedTags.includes(tag);\n            })) {\n                return null;\n            }\n            revalidate = revalidate || cacheData.value.revalidate;\n            const age = (performance.timeOrigin + performance.now() - (cacheData.lastModified || 0)) / 1000;\n            const isStale = age > revalidate;\n            const data = cacheData.value.data;\n            return {\n                isStale: isStale,\n                value: {\n                    kind: CachedRouteKind.FETCH,\n                    data,\n                    revalidate: revalidate\n                },\n                revalidateAfter: performance.timeOrigin + performance.now() + revalidate * 1000,\n                isFallback\n            };\n        }\n        const curRevalidate = this.revalidateTimings.get(toRoute(cacheKey));\n        let isStale;\n        let revalidateAfter;\n        if ((cacheData == null ? void 0 : cacheData.lastModified) === -1) {\n            isStale = -1;\n            revalidateAfter = -1 * CACHE_ONE_YEAR;\n        } else {\n            revalidateAfter = this.calculateRevalidate(cacheKey, (cacheData == null ? void 0 : cacheData.lastModified) || performance.timeOrigin + performance.now(), this.dev ? ctx.kind !== IncrementalCacheKind.FETCH : false, ctx.isFallback);\n            isStale = revalidateAfter !== false && revalidateAfter < performance.timeOrigin + performance.now() ? true : undefined;\n        }\n        if (cacheData) {\n            entry = {\n                isStale,\n                curRevalidate,\n                revalidateAfter,\n                value: cacheData.value,\n                isFallback\n            };\n        }\n        if (!cacheData && this.prerenderManifest.notFoundRoutes.includes(cacheKey)) {\n            // for the first hit after starting the server the cache\n            // may not have a way to save notFound: true so if\n            // the prerender-manifest marks this as notFound then we\n            // return that entry and trigger a cache set to give it a\n            // chance to update in-memory entries\n            entry = {\n                isStale,\n                value: null,\n                curRevalidate,\n                revalidateAfter,\n                isFallback\n            };\n            this.set(cacheKey, entry.value, ctx);\n        }\n        return entry;\n    }\n    // populate the incremental cache with new data\n    async set(pathname, data, ctx) {\n        // Even if we otherwise disable caching for testMode or if no fetchCache is configured\n        // we still always stash results in the cacheScope if one exists. This is because this\n        // is a transient in memory cache that populates caches ahead of a dynamic render in dev mode\n        // to allow the RSC debug info to have the right environment associated to it.\n        if (this.hasDynamicIO && (data == null ? void 0 : data.kind) === CachedRouteKind.FETCH) {\n            const workUnitStore = workUnitAsyncStorageInstance.getStore();\n            const prerenderResumeDataCache = workUnitStore ? getPrerenderResumeDataCache(workUnitStore) : null;\n            if (prerenderResumeDataCache) {\n                prerenderResumeDataCache.fetch.set(pathname, data);\n            }\n        }\n        if (this.disableForTestmode || this.dev && !ctx.fetchCache) return;\n        pathname = this._getPathname(pathname, ctx.fetchCache);\n        // FetchCache has upper limit of 2MB per-entry currently\n        const itemSize = JSON.stringify(data).length;\n        if (ctx.fetchCache && // we don't show this error/warning when a custom cache handler is being used\n        // as it might not have this limit\n        !this.hasCustomCacheHandler && itemSize > 2 * 1024 * 1024) {\n            if (this.dev) {\n                throw new Error(`Failed to set Next.js data cache, items over 2MB can not be cached (${itemSize} bytes)`);\n            }\n            return;\n        }\n        try {\n            var _this_cacheHandler;\n            // Set the value for the revalidate seconds so if it changes we can\n            // update the cache with the new value.\n            if (typeof ctx.revalidate !== 'undefined' && !ctx.fetchCache) {\n                this.revalidateTimings.set(toRoute(pathname), ctx.revalidate);\n            }\n            await ((_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.set(pathname, data, ctx));\n        } catch (error) {\n            console.warn('Failed to update prerender cache for', pathname, error);\n        }\n    }\n}\n\n//# sourceMappingURL=index.js.map","import type { RouteRegex } from './route-regex'\nimport { DecodeError } from '../../utils'\nimport type { Params } from '../../../../server/request/params'\n\nexport interface RouteMatchFn {\n  (pathname: string | null | undefined): false | Params\n}\n\nexport function getRouteMatcher({ re, groups }: RouteRegex): RouteMatchFn {\n  return (pathname: string | null | undefined) => {\n    const routeMatch = re.exec(pathname!)\n    if (!routeMatch) {\n      return false\n    }\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch (_) {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n    const params: { [paramName: string]: string | string[] } = {}\n\n    Object.keys(groups).forEach((slugName: string) => {\n      const g = groups[slugName]\n      const m = routeMatch[g.pos]\n      if (m !== undefined) {\n        params[slugName] = ~m.indexOf('/')\n          ? m.split('/').map((entry) => decode(entry))\n          : g.repeat\n            ? [decode(m)]\n            : decode(m)\n      }\n    })\n    return params\n  }\n}\n","// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n","import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from '../../../../server/lib/interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nconst PARAMETER_PATTERN = /\\[((?:\\[.*\\])|.+)\\]/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[1])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nfunction parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n\nfunction getParametrizedRoute(route: string) {\n  const segments = removeTrailingSlash(route).slice(1).split('/')\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n  return {\n    parameterizedRoute: segments\n      .map((segment) => {\n        const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n          segment.startsWith(m)\n        )\n        const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n        if (markerMatch && paramMatches) {\n          const { key, optional, repeat } = parseMatchedParameter(\n            paramMatches[1]\n          )\n          groups[key] = { pos: groupIndex++, repeat, optional }\n          return `/${escapeStringRegexp(markerMatch)}([^/]+?)`\n        } else if (paramMatches) {\n          const { key, repeat, optional } = parseMatchedParameter(\n            paramMatches[1]\n          )\n          groups[key] = { pos: groupIndex++, repeat, optional }\n          return repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n        } else {\n          return `/${escapeStringRegexp(segment)}`\n        }\n      })\n      .join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(normalizedRoute: string): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(normalizedRoute)\n  return {\n    re: new RegExp(`^${parameterizedRoute}(?:/)?$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  return repeat\n    ? optional\n      ? `(?:/${interceptionPrefix}(?<${cleanedKey}>.+?))?`\n      : `/${interceptionPrefix}(?<${cleanedKey}>.+?)`\n    : `/${interceptionPrefix}(?<${cleanedKey}>[^/]+?)`\n}\n\nfunction getNamedParametrizedRoute(route: string, prefixRouteKeys: boolean) {\n  const segments = removeTrailingSlash(route).slice(1).split('/')\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n  return {\n    namedParameterizedRoute: segments\n      .map((segment) => {\n        const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n          segment.startsWith(m)\n        )\n        const paramMatches = segment.match(/\\[((?:\\[.*\\])|.+)\\]/) // Check for parameters\n\n        if (hasInterceptionMarker && paramMatches) {\n          const [usedMarker] = segment.split(paramMatches[0])\n\n          return getSafeKeyFromSegment({\n            getSafeRouteKey,\n            interceptionMarker: usedMarker,\n            segment: paramMatches[1],\n            routeKeys,\n            keyPrefix: prefixRouteKeys\n              ? NEXT_INTERCEPTION_MARKER_PREFIX\n              : undefined,\n          })\n        } else if (paramMatches) {\n          return getSafeKeyFromSegment({\n            getSafeRouteKey,\n            segment: paramMatches[1],\n            routeKeys,\n            keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined,\n          })\n        } else {\n          return `/${escapeStringRegexp(segment)}`\n        }\n      })\n      .join(''),\n    routeKeys,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  prefixRouteKey: boolean\n) {\n  const result = getNamedParametrizedRoute(normalizedRoute, prefixRouteKey)\n  return {\n    ...getRouteRegex(normalizedRoute),\n    namedRegex: `^${result.namedParameterizedRoute}(?:/)?$`,\n    routeKeys: result.routeKeys,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(normalizedRoute)\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n","import { isDynamicRoute } from '../../shared/lib/router/utils';\nimport { getRouteMatcher } from '../../shared/lib/router/utils/route-matcher';\nimport { getRouteRegex } from '../../shared/lib/router/utils/route-regex';\nexport class RouteMatcher {\n    constructor(definition){\n        this.definition = definition;\n        if (isDynamicRoute(definition.pathname)) {\n            this.dynamic = getRouteMatcher(getRouteRegex(definition.pathname));\n        }\n    }\n    /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part.\n   */ get identity() {\n        return this.definition.pathname;\n    }\n    get isDynamic() {\n        return this.dynamic !== undefined;\n    }\n    match(pathname) {\n        const result = this.test(pathname);\n        if (!result) return null;\n        return {\n            definition: this.definition,\n            params: result.params\n        };\n    }\n    test(pathname) {\n        if (this.dynamic) {\n            const params = this.dynamic(pathname);\n            if (!params) return null;\n            return {\n                params\n            };\n        }\n        if (pathname === this.definition.pathname) {\n            return {};\n        }\n        return null;\n    }\n}\n\n//# sourceMappingURL=route-matcher.js.map","// An internal module to expose the \"waitUntil\" API to Edge SSR and Edge Route Handler functions.\n// This is highly experimental and subject to change.\n// We still need a global key to bypass Webpack's layering of modules.\nconst GLOBAL_KEY = Symbol.for('__next_internal_waitUntil__');\nconst state = // @ts-ignore\nglobalThis[GLOBAL_KEY] || // @ts-ignore\n(globalThis[GLOBAL_KEY] = {\n    waitUntilCounter: 0,\n    waitUntilResolve: undefined,\n    waitUntilPromise: null\n});\n// No matter how many concurrent requests are being handled, we want to make sure\n// that the final promise is only resolved once all of the waitUntil promises have\n// settled.\nfunction resolveOnePromise() {\n    state.waitUntilCounter--;\n    if (state.waitUntilCounter === 0) {\n        state.waitUntilResolve();\n        state.waitUntilPromise = null;\n    }\n}\nexport function internal_getCurrentFunctionWaitUntil() {\n    return state.waitUntilPromise;\n}\nexport function internal_runWithWaitUntil(fn) {\n    const result = fn();\n    if (result && typeof result === 'object' && 'then' in result && 'finally' in result && typeof result.then === 'function' && typeof result.finally === 'function') {\n        if (!state.waitUntilCounter) {\n            // Create the promise for the next batch of waitUntil calls.\n            state.waitUntilPromise = new Promise((resolve)=>{\n                state.waitUntilResolve = resolve;\n            });\n        }\n        state.waitUntilCounter++;\n        return result.finally(()=>{\n            resolveOnePromise();\n        });\n    }\n    return result;\n}\n\n//# sourceMappingURL=internal-edge-wait-until.js.map","import type { Key } from 'next/dist/compiled/path-to-regexp'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { regexpToFunction } from 'next/dist/compiled/path-to-regexp'\n\ninterface Options {\n  /**\n   * A transformer function that will be applied to the regexp generated\n   * from the provided path and path-to-regexp.\n   */\n  regexModifier?: (regex: string) => string\n  /**\n   * When true the function will remove all unnamed parameters\n   * from the matched parameters.\n   */\n  removeUnnamedParams?: boolean\n  /**\n   * When true the regexp won't allow an optional trailing delimiter\n   * to match.\n   */\n  strict?: boolean\n\n  /**\n   * When true the matcher will be case-sensitive, defaults to false\n   */\n  sensitive?: boolean\n}\n\nexport type PatchMatcher = (\n  pathname?: string | null,\n  params?: Record<string, any>\n) => Record<string, any> | false\n\n/**\n * Generates a path matcher function for a given path and options based on\n * path-to-regexp. By default the match will be case insensitive, non strict\n * and delimited by `/`.\n */\nexport function getPathMatch(path: string, options?: Options): PatchMatcher {\n  const keys: Key[] = []\n  const regexp = pathToRegexp(path, keys, {\n    delimiter: '/',\n    sensitive:\n      typeof options?.sensitive === 'boolean' ? options.sensitive : false,\n    strict: options?.strict,\n  })\n\n  const matcher = regexpToFunction<Record<string, any>>(\n    options?.regexModifier\n      ? new RegExp(options.regexModifier(regexp.source), regexp.flags)\n      : regexp,\n    keys\n  )\n\n  /**\n   * A matcher function that will check if a given pathname matches the path\n   * given in the builder function. When the path does not match it will return\n   * `false` but if it does it will return an object with the matched params\n   * merged with the params provided in the second argument.\n   */\n  return (pathname, params) => {\n    // If no pathname is provided it's not a match.\n    if (typeof pathname !== 'string') return false\n\n    const match = matcher(pathname)\n\n    // If the path did not match `false` will be returned.\n    if (!match) return false\n\n    /**\n     * If unnamed params are not allowed they must be removed from\n     * the matched parameters. path-to-regexp uses \"string\" for named and\n     * \"number\" for unnamed parameters.\n     */\n    if (options?.removeUnnamedParams) {\n      for (const key of keys) {\n        if (typeof key.name === 'number') {\n          delete match.params[key.name]\n        }\n      }\n    }\n\n    return { ...params, ...match.params }\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  searchParams.forEach((value, key) => {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(query[key])) {\n      ;(query[key] as string[]).push(value)\n    } else {\n      query[key] = [query[key] as string, value]\n    }\n  })\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (\n    typeof param === 'string' ||\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(\n  urlQuery: ParsedUrlQuery\n): URLSearchParams {\n  const result = new URLSearchParams()\n  Object.entries(urlQuery).forEach(([key, value]) => {\n    if (Array.isArray(value)) {\n      value.forEach((item) => result.append(key, stringifyUrlQueryParam(item)))\n    } else {\n      result.set(key, stringifyUrlQueryParam(value))\n    }\n  })\n  return result\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  searchParamsList.forEach((searchParams) => {\n    Array.from(searchParams.keys()).forEach((key) => target.delete(key))\n    searchParams.forEach((value, key) => target.append(key, value))\n  })\n  return target\n}\n","import type { ParsedUrlQuery } from 'querystring'\nimport { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\nexport interface ParsedRelativeUrl {\n  hash: string\n  href: string\n  pathname: string\n  query: ParsedUrlQuery\n  search: string\n}\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery?: true\n): ParsedRelativeUrl\nexport function parseRelativeUrl(\n  url: string,\n  base: string | undefined,\n  parseQuery: false\n): Omit<ParsedRelativeUrl, 'query'>\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery = true\n): ParsedRelativeUrl | Omit<ParsedRelativeUrl, 'query'> {\n  const globalBase = new URL(\n    typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n  )\n\n  const resolvedBase = base\n    ? new URL(base, globalBase)\n    : url.startsWith('.')\n      ? new URL(\n          typeof window === 'undefined' ? 'http://n' : window.location.href\n        )\n      : globalBase\n\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`)\n  }\n\n  return {\n    pathname,\n    query: parseQuery ? searchParamsToUrlQuery(searchParams) : undefined,\n    search,\n    hash,\n    href: href.slice(origin.length),\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nimport { searchParamsToUrlQuery } from './querystring'\nimport { parseRelativeUrl } from './parse-relative-url'\n\nexport interface ParsedUrl {\n  hash: string\n  hostname?: string | null\n  href: string\n  pathname: string\n  port?: string | null\n  protocol?: string | null\n  query: ParsedUrlQuery\n  search: string\n}\n\nexport function parseUrl(url: string): ParsedUrl {\n  if (url.startsWith('/')) {\n    return parseRelativeUrl(url)\n  }\n\n  const parsedURL = new URL(url)\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search,\n  }\n}\n","/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */ export function getCookieParser(headers) {\n    return function parseCookie() {\n        const { cookie } = headers;\n        if (!cookie) {\n            return {};\n        }\n        const { parse: parseCookieFn } = require('next/dist/compiled/cookie');\n        return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie);\n    };\n}\n\n//# sourceMappingURL=get-cookie-parser.js.map","import type { IncomingMessage } from 'http'\nimport type { Key } from 'next/dist/compiled/path-to-regexp'\nimport type { NextParsedUrlQuery } from '../../../../server/request-meta'\nimport type { RouteHas } from '../../../../lib/load-custom-routes'\nimport type { BaseNextRequest } from '../../../../server/base-http'\n\nimport { compile, pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { parseUrl } from './parse-url'\nimport {\n  INTERCEPTION_ROUTE_MARKERS,\n  isInterceptionRouteAppPath,\n} from '../../../../server/lib/interception-routes'\nimport { NEXT_RSC_UNION_QUERY } from '../../../../client/components/app-router-headers'\nimport { getCookieParser } from '../../../../server/api-utils/get-cookie-parser'\nimport type { Params } from '../../../../server/request/params'\n\n/**\n * Ensure only a-zA-Z are used for param names for proper interpolating\n * with path-to-regexp\n */\nfunction getSafeParamName(paramName: string) {\n  let newParamName = ''\n\n  for (let i = 0; i < paramName.length; i++) {\n    const charCode = paramName.charCodeAt(i)\n\n    if (\n      (charCode > 64 && charCode < 91) || // A-Z\n      (charCode > 96 && charCode < 123) // a-z\n    ) {\n      newParamName += paramName[i]\n    }\n  }\n  return newParamName\n}\n\nfunction escapeSegment(str: string, segmentName: string) {\n  return str.replace(\n    new RegExp(`:${escapeStringRegexp(segmentName)}`, 'g'),\n    `__ESC_COLON_${segmentName}`\n  )\n}\n\nfunction unescapeSegments(str: string) {\n  return str.replace(/__ESC_COLON_/gi, ':')\n}\n\nexport function matchHas(\n  req: BaseNextRequest | IncomingMessage,\n  query: Params,\n  has: RouteHas[] = [],\n  missing: RouteHas[] = []\n): false | Params {\n  const params: Params = {}\n\n  const hasMatch = (hasItem: RouteHas) => {\n    let value\n    let key = hasItem.key\n\n    switch (hasItem.type) {\n      case 'header': {\n        key = key!.toLowerCase()\n        value = req.headers[key] as string\n        break\n      }\n      case 'cookie': {\n        if ('cookies' in req) {\n          value = req.cookies[hasItem.key]\n        } else {\n          const cookies = getCookieParser(req.headers)()\n          value = cookies[hasItem.key]\n        }\n\n        break\n      }\n      case 'query': {\n        value = query[key!]\n        break\n      }\n      case 'host': {\n        const { host } = req?.headers || {}\n        // remove port from host if present\n        const hostname = host?.split(':', 1)[0].toLowerCase()\n        value = hostname\n        break\n      }\n      default: {\n        break\n      }\n    }\n\n    if (!hasItem.value && value) {\n      params[getSafeParamName(key!)] = value\n      return true\n    } else if (value) {\n      const matcher = new RegExp(`^${hasItem.value}$`)\n      const matches = Array.isArray(value)\n        ? value.slice(-1)[0].match(matcher)\n        : value.match(matcher)\n\n      if (matches) {\n        if (Array.isArray(matches)) {\n          if (matches.groups) {\n            Object.keys(matches.groups).forEach((groupKey) => {\n              params[groupKey] = matches.groups![groupKey]\n            })\n          } else if (hasItem.type === 'host' && matches[0]) {\n            params.host = matches[0]\n          }\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  const allMatch =\n    has.every((item) => hasMatch(item)) &&\n    !missing.some((item) => hasMatch(item))\n\n  if (allMatch) {\n    return params\n  }\n  return false\n}\n\nexport function compileNonPath(value: string, params: Params): string {\n  if (!value.includes(':')) {\n    return value\n  }\n\n  for (const key of Object.keys(params)) {\n    if (value.includes(`:${key}`)) {\n      value = value\n        .replace(\n          new RegExp(`:${key}\\\\*`, 'g'),\n          `:${key}--ESCAPED_PARAM_ASTERISKS`\n        )\n        .replace(\n          new RegExp(`:${key}\\\\?`, 'g'),\n          `:${key}--ESCAPED_PARAM_QUESTION`\n        )\n        .replace(new RegExp(`:${key}\\\\+`, 'g'), `:${key}--ESCAPED_PARAM_PLUS`)\n        .replace(\n          new RegExp(`:${key}(?!\\\\w)`, 'g'),\n          `--ESCAPED_PARAM_COLON${key}`\n        )\n    }\n  }\n  value = value\n    .replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, '\\\\$1')\n    .replace(/--ESCAPED_PARAM_PLUS/g, '+')\n    .replace(/--ESCAPED_PARAM_COLON/g, ':')\n    .replace(/--ESCAPED_PARAM_QUESTION/g, '?')\n    .replace(/--ESCAPED_PARAM_ASTERISKS/g, '*')\n\n  // the value needs to start with a forward-slash to be compiled\n  // correctly\n  return compile(`/${value}`, { validate: false })(params).slice(1)\n}\n\nexport function prepareDestination(args: {\n  appendParamsToQuery: boolean\n  destination: string\n  params: Params\n  query: NextParsedUrlQuery\n}) {\n  const query = Object.assign({}, args.query)\n  delete query.__nextLocale\n  delete query.__nextDefaultLocale\n  delete query.__nextDataReq\n  delete query.__nextInferredLocaleFromDefault\n  delete query[NEXT_RSC_UNION_QUERY]\n\n  let escapedDestination = args.destination\n\n  for (const param of Object.keys({ ...args.params, ...query })) {\n    escapedDestination = param\n      ? escapeSegment(escapedDestination, param)\n      : escapedDestination\n  }\n\n  const parsedDestination = parseUrl(escapedDestination)\n  const destQuery = parsedDestination.query\n  const destPath = unescapeSegments(\n    `${parsedDestination.pathname!}${parsedDestination.hash || ''}`\n  )\n  const destHostname = unescapeSegments(parsedDestination.hostname || '')\n  const destPathParamKeys: Key[] = []\n  const destHostnameParamKeys: Key[] = []\n  pathToRegexp(destPath, destPathParamKeys)\n  pathToRegexp(destHostname, destHostnameParamKeys)\n\n  const destParams: (string | number)[] = []\n\n  destPathParamKeys.forEach((key) => destParams.push(key.name))\n  destHostnameParamKeys.forEach((key) => destParams.push(key.name))\n\n  const destPathCompiler = compile(\n    destPath,\n    // we don't validate while compiling the destination since we should\n    // have already validated before we got to this point and validating\n    // breaks compiling destinations with named pattern params from the source\n    // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n    // since compile validation is meant for reversing and not for inserting\n    // params from a separate path-regex into another\n    { validate: false }\n  )\n\n  const destHostnameCompiler = compile(destHostname, { validate: false })\n\n  // update any params in query values\n  for (const [key, strOrArray] of Object.entries(destQuery)) {\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    if (Array.isArray(strOrArray)) {\n      destQuery[key] = strOrArray.map((value) =>\n        compileNonPath(unescapeSegments(value), args.params)\n      )\n    } else if (typeof strOrArray === 'string') {\n      destQuery[key] = compileNonPath(unescapeSegments(strOrArray), args.params)\n    }\n  }\n\n  // add path params to query if it's not a redirect and not\n  // already defined in destination query or path\n  let paramKeys = Object.keys(args.params).filter(\n    (name) => name !== 'nextInternalLocale'\n  )\n\n  if (\n    args.appendParamsToQuery &&\n    !paramKeys.some((key) => destParams.includes(key))\n  ) {\n    for (const key of paramKeys) {\n      if (!(key in destQuery)) {\n        destQuery[key] = args.params[key]\n      }\n    }\n  }\n\n  let newUrl\n\n  // The compiler also that the interception route marker is an unnamed param, hence '0',\n  // so we need to add it to the params object.\n  if (isInterceptionRouteAppPath(destPath)) {\n    for (const segment of destPath.split('/')) {\n      const marker = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n        segment.startsWith(m)\n      )\n      if (marker) {\n        if (marker === '(..)(..)') {\n          args.params['0'] = '(..)'\n          args.params['1'] = '(..)'\n        } else {\n          args.params['0'] = marker\n        }\n        break\n      }\n    }\n  }\n\n  try {\n    newUrl = destPathCompiler(args.params)\n\n    const [pathname, hash] = newUrl.split('#', 2)\n    parsedDestination.hostname = destHostnameCompiler(args.params)\n    parsedDestination.pathname = pathname\n    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`\n    delete (parsedDestination as any).search\n  } catch (err: any) {\n    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {\n      throw new Error(\n        `To use a multi-match in the destination you must add \\`*\\` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match`\n      )\n    }\n    throw err\n  }\n\n  // Query merge order lowest priority to highest\n  // 1. initial URL query values\n  // 2. path segment values\n  // 3. destination specified query values\n  parsedDestination.query = {\n    ...query,\n    ...parsedDestination.query,\n  }\n\n  return {\n    newUrl,\n    destQuery,\n    parsedDestination,\n  }\n}\n","import { format as formatUrl, parse as parseUrl } from 'url';\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path';\nimport { getPathMatch } from '../shared/lib/router/utils/path-match';\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex';\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher';\nimport { matchHas, prepareDestination } from '../shared/lib/router/utils/prepare-destination';\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash';\nimport { normalizeRscURL } from '../shared/lib/router/utils/app-paths';\nimport { NEXT_INTERCEPTION_MARKER_PREFIX, NEXT_QUERY_PARAM_PREFIX } from '../lib/constants';\nexport function normalizeVercelUrl(req, trustQuery, paramKeys, pageIsDynamic, defaultRouteRegex) {\n    // make sure to normalize req.url on Vercel to strip dynamic params\n    // from the query which are added during routing\n    if (pageIsDynamic && trustQuery && defaultRouteRegex) {\n        const _parsedUrl = parseUrl(req.url, true);\n        delete _parsedUrl.search;\n        for (const key of Object.keys(_parsedUrl.query)){\n            const isNextQueryPrefix = key !== NEXT_QUERY_PARAM_PREFIX && key.startsWith(NEXT_QUERY_PARAM_PREFIX);\n            const isNextInterceptionMarkerPrefix = key !== NEXT_INTERCEPTION_MARKER_PREFIX && key.startsWith(NEXT_INTERCEPTION_MARKER_PREFIX);\n            if (isNextQueryPrefix || isNextInterceptionMarkerPrefix || (paramKeys || Object.keys(defaultRouteRegex.groups)).includes(key)) {\n                delete _parsedUrl.query[key];\n            }\n        }\n        req.url = formatUrl(_parsedUrl);\n    }\n}\nexport function interpolateDynamicPath(pathname, params, defaultRouteRegex) {\n    if (!defaultRouteRegex) return pathname;\n    for (const param of Object.keys(defaultRouteRegex.groups)){\n        const { optional, repeat } = defaultRouteRegex.groups[param];\n        let builtParam = `[${repeat ? '...' : ''}${param}]`;\n        if (optional) {\n            builtParam = `[${builtParam}]`;\n        }\n        let paramValue;\n        const value = params[param];\n        if (Array.isArray(value)) {\n            paramValue = value.map((v)=>v && encodeURIComponent(v)).join('/');\n        } else if (value) {\n            paramValue = encodeURIComponent(value);\n        } else {\n            paramValue = '';\n        }\n        pathname = pathname.replaceAll(builtParam, paramValue);\n    }\n    return pathname;\n}\nexport function normalizeDynamicRouteParams(params, ignoreOptional, defaultRouteRegex, defaultRouteMatches) {\n    let hasValidParams = true;\n    if (!defaultRouteRegex) return {\n        params,\n        hasValidParams: false\n    };\n    params = Object.keys(defaultRouteRegex.groups).reduce((prev, key)=>{\n        let value = params[key];\n        if (typeof value === 'string') {\n            value = normalizeRscURL(value);\n        }\n        if (Array.isArray(value)) {\n            value = value.map((val)=>{\n                if (typeof val === 'string') {\n                    val = normalizeRscURL(val);\n                }\n                return val;\n            });\n        }\n        // if the value matches the default value we can't rely\n        // on the parsed params, this is used to signal if we need\n        // to parse x-now-route-matches or not\n        const defaultValue = defaultRouteMatches[key];\n        const isOptional = defaultRouteRegex.groups[key].optional;\n        const isDefaultValue = Array.isArray(defaultValue) ? defaultValue.some((defaultVal)=>{\n            return Array.isArray(value) ? value.some((val)=>val.includes(defaultVal)) : value == null ? void 0 : value.includes(defaultVal);\n        }) : value == null ? void 0 : value.includes(defaultValue);\n        if (isDefaultValue || typeof value === 'undefined' && !(isOptional && ignoreOptional)) {\n            hasValidParams = false;\n        }\n        // non-provided optional values should be undefined so normalize\n        // them to undefined\n        if (isOptional && (!value || Array.isArray(value) && value.length === 1 && // fallback optional catch-all SSG pages have\n        // [[...paramName]] for the root path on Vercel\n        (value[0] === 'index' || value[0] === `[[...${key}]]`))) {\n            value = undefined;\n            delete params[key];\n        }\n        // query values from the proxy aren't already split into arrays\n        // so make sure to normalize catch-all values\n        if (value && typeof value === 'string' && defaultRouteRegex.groups[key].repeat) {\n            value = value.split('/');\n        }\n        if (value) {\n            prev[key] = value;\n        }\n        return prev;\n    }, {});\n    return {\n        params,\n        hasValidParams\n    };\n}\nexport function getUtils({ page, i18n, basePath, rewrites, pageIsDynamic, trailingSlash, caseSensitive }) {\n    let defaultRouteRegex;\n    let dynamicRouteMatcher;\n    let defaultRouteMatches;\n    if (pageIsDynamic) {\n        defaultRouteRegex = getNamedRouteRegex(page, false);\n        dynamicRouteMatcher = getRouteMatcher(defaultRouteRegex);\n        defaultRouteMatches = dynamicRouteMatcher(page);\n    }\n    function handleRewrites(req, parsedUrl) {\n        const rewriteParams = {};\n        let fsPathname = parsedUrl.pathname;\n        const matchesPage = ()=>{\n            const fsPathnameNoSlash = removeTrailingSlash(fsPathname || '');\n            return fsPathnameNoSlash === removeTrailingSlash(page) || (dynamicRouteMatcher == null ? void 0 : dynamicRouteMatcher(fsPathnameNoSlash));\n        };\n        const checkRewrite = (rewrite)=>{\n            const matcher = getPathMatch(rewrite.source + (trailingSlash ? '(/)?' : ''), {\n                removeUnnamedParams: true,\n                strict: true,\n                sensitive: !!caseSensitive\n            });\n            let params = matcher(parsedUrl.pathname);\n            if ((rewrite.has || rewrite.missing) && params) {\n                const hasParams = matchHas(req, parsedUrl.query, rewrite.has, rewrite.missing);\n                if (hasParams) {\n                    Object.assign(params, hasParams);\n                } else {\n                    params = false;\n                }\n            }\n            if (params) {\n                const { parsedDestination, destQuery } = prepareDestination({\n                    appendParamsToQuery: true,\n                    destination: rewrite.destination,\n                    params: params,\n                    query: parsedUrl.query\n                });\n                // if the rewrite destination is external break rewrite chain\n                if (parsedDestination.protocol) {\n                    return true;\n                }\n                Object.assign(rewriteParams, destQuery, params);\n                Object.assign(parsedUrl.query, parsedDestination.query);\n                delete parsedDestination.query;\n                Object.assign(parsedUrl, parsedDestination);\n                fsPathname = parsedUrl.pathname;\n                if (basePath) {\n                    fsPathname = fsPathname.replace(new RegExp(`^${basePath}`), '') || '/';\n                }\n                if (i18n) {\n                    const destLocalePathResult = normalizeLocalePath(fsPathname, i18n.locales);\n                    fsPathname = destLocalePathResult.pathname;\n                    parsedUrl.query.nextInternalLocale = destLocalePathResult.detectedLocale || params.nextInternalLocale;\n                }\n                if (fsPathname === page) {\n                    return true;\n                }\n                if (pageIsDynamic && dynamicRouteMatcher) {\n                    const dynamicParams = dynamicRouteMatcher(fsPathname);\n                    if (dynamicParams) {\n                        parsedUrl.query = {\n                            ...parsedUrl.query,\n                            ...dynamicParams\n                        };\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        for (const rewrite of rewrites.beforeFiles || []){\n            checkRewrite(rewrite);\n        }\n        if (fsPathname !== page) {\n            let finished = false;\n            for (const rewrite of rewrites.afterFiles || []){\n                finished = checkRewrite(rewrite);\n                if (finished) break;\n            }\n            if (!finished && !matchesPage()) {\n                for (const rewrite of rewrites.fallback || []){\n                    finished = checkRewrite(rewrite);\n                    if (finished) break;\n                }\n            }\n        }\n        return rewriteParams;\n    }\n    function getParamsFromRouteMatches(req, renderOpts, detectedLocale) {\n        return getRouteMatcher(function() {\n            const { groups, routeKeys } = defaultRouteRegex;\n            return {\n                re: {\n                    // Simulate a RegExp match from the \\`req.url\\` input\n                    exec: (str)=>{\n                        const obj = Object.fromEntries(new URLSearchParams(str));\n                        const matchesHasLocale = i18n && detectedLocale && obj['1'] === detectedLocale;\n                        for (const key of Object.keys(obj)){\n                            const value = obj[key];\n                            if (key !== NEXT_QUERY_PARAM_PREFIX && key.startsWith(NEXT_QUERY_PARAM_PREFIX)) {\n                                const normalizedKey = key.substring(NEXT_QUERY_PARAM_PREFIX.length);\n                                obj[normalizedKey] = value;\n                                delete obj[key];\n                            }\n                        }\n                        // favor named matches if available\n                        const routeKeyNames = Object.keys(routeKeys || {});\n                        const filterLocaleItem = (val)=>{\n                            if (i18n) {\n                                // locale items can be included in route-matches\n                                // for fallback SSG pages so ensure they are\n                                // filtered\n                                const isCatchAll = Array.isArray(val);\n                                const _val = isCatchAll ? val[0] : val;\n                                if (typeof _val === 'string' && i18n.locales.some((item)=>{\n                                    if (item.toLowerCase() === _val.toLowerCase()) {\n                                        detectedLocale = item;\n                                        renderOpts.locale = detectedLocale;\n                                        return true;\n                                    }\n                                    return false;\n                                })) {\n                                    // remove the locale item from the match\n                                    if (isCatchAll) {\n                                        ;\n                                        val.splice(0, 1);\n                                    }\n                                    // the value is only a locale item and\n                                    // shouldn't be added\n                                    return isCatchAll ? val.length === 0 : true;\n                                }\n                            }\n                            return false;\n                        };\n                        if (routeKeyNames.every((name)=>obj[name])) {\n                            return routeKeyNames.reduce((prev, keyName)=>{\n                                const paramName = routeKeys == null ? void 0 : routeKeys[keyName];\n                                if (paramName && !filterLocaleItem(obj[keyName])) {\n                                    prev[groups[paramName].pos] = obj[keyName];\n                                }\n                                return prev;\n                            }, {});\n                        }\n                        return Object.keys(obj).reduce((prev, key)=>{\n                            if (!filterLocaleItem(obj[key])) {\n                                let normalizedKey = key;\n                                if (matchesHasLocale) {\n                                    normalizedKey = parseInt(key, 10) - 1 + '';\n                                }\n                                return Object.assign(prev, {\n                                    [normalizedKey]: obj[key]\n                                });\n                            }\n                            return prev;\n                        }, {});\n                    }\n                },\n                groups\n            };\n        }())(req.headers['x-now-route-matches']);\n    }\n    return {\n        handleRewrites,\n        defaultRouteRegex,\n        dynamicRouteMatcher,\n        defaultRouteMatches,\n        getParamsFromRouteMatches,\n        normalizeDynamicRouteParams: (params, ignoreOptional)=>normalizeDynamicRouteParams(params, ignoreOptional, defaultRouteRegex, defaultRouteMatches),\n        normalizeVercelUrl: (req, trustQuery, paramKeys)=>normalizeVercelUrl(req, trustQuery, paramKeys, pageIsDynamic, defaultRouteRegex),\n        interpolateDynamicPath: (pathname, params)=>interpolateDynamicPath(pathname, params, defaultRouteRegex)\n    };\n}\n\n//# sourceMappingURL=server-utils.js.map","import './globals';\nimport { adapter } from './adapter';\nimport { IncrementalCache } from '../lib/incremental-cache';\nimport { RouteMatcher } from '../route-matchers/route-matcher';\nimport { internal_getCurrentFunctionWaitUntil } from './internal-edge-wait-until';\nimport { getUtils } from '../server-utils';\nimport { searchParamsToUrlQuery } from '../../shared/lib/router/utils/querystring';\nimport { CloseController, trackStreamConsumed } from './web-on-close';\nimport { getEdgePreviewProps } from './get-edge-preview-props';\n/**\n * EdgeRouteModuleWrapper is a wrapper around a route module.\n *\n * Note that this class should only be used in the edge runtime.\n */ export class EdgeRouteModuleWrapper {\n    /**\n   * The constructor is wrapped with private to ensure that it can only be\n   * constructed by the static wrap method.\n   *\n   * @param routeModule the route module to wrap\n   */ constructor(routeModule, nextConfig){\n        this.routeModule = routeModule;\n        this.nextConfig = nextConfig;\n        // TODO: (wyattjoh) possibly allow the module to define it's own matcher\n        this.matcher = new RouteMatcher(routeModule.definition);\n    }\n    /**\n   * This will wrap a module with the EdgeModuleWrapper and return a function\n   * that can be used as a handler for the edge runtime.\n   *\n   * @param module the module to wrap\n   * @param options any options that should be passed to the adapter and\n   *                override the ones passed from the runtime\n   * @returns a function that can be used as a handler for the edge runtime\n   */ static wrap(routeModule, options) {\n        // Create the module wrapper.\n        const wrapper = new EdgeRouteModuleWrapper(routeModule, options.nextConfig);\n        // Return the wrapping function.\n        return (opts)=>{\n            return adapter({\n                ...opts,\n                IncrementalCache,\n                // Bind the handler method to the wrapper so it still has context.\n                handler: wrapper.handler.bind(wrapper)\n            });\n        };\n    }\n    async handler(request, evt) {\n        const utils = getUtils({\n            pageIsDynamic: this.matcher.isDynamic,\n            page: this.matcher.definition.pathname,\n            basePath: request.nextUrl.basePath,\n            // We don't need the `handleRewrite` util, so can just pass an empty object\n            rewrites: {},\n            // only used for rewrites, so setting an arbitrary default value here\n            caseSensitive: false\n        });\n        const { params } = utils.normalizeDynamicRouteParams(searchParamsToUrlQuery(request.nextUrl.searchParams));\n        const waitUntil = evt.waitUntil.bind(evt);\n        const closeController = new CloseController();\n        const previewProps = getEdgePreviewProps();\n        // Create the context for the handler. This contains the params from the\n        // match (if any).\n        const context = {\n            params,\n            prerenderManifest: {\n                version: 4,\n                routes: {},\n                dynamicRoutes: {},\n                preview: previewProps,\n                notFoundRoutes: []\n            },\n            renderOpts: {\n                supportsDynamicResponse: true,\n                waitUntil,\n                onClose: closeController.onClose.bind(closeController),\n                onAfterTaskError: undefined,\n                experimental: {\n                    dynamicIO: !!process.env.__NEXT_DYNAMIC_IO,\n                    authInterrupts: !!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS\n                },\n                buildId: '',\n                cacheLifeProfiles: this.nextConfig.experimental.cacheLife\n            }\n        };\n        // Get the response from the handler.\n        let res = await this.routeModule.handle(request, context);\n        const waitUntilPromises = [\n            internal_getCurrentFunctionWaitUntil()\n        ];\n        if (context.renderOpts.pendingWaitUntil) {\n            waitUntilPromises.push(context.renderOpts.pendingWaitUntil);\n        }\n        evt.waitUntil(Promise.all(waitUntilPromises));\n        if (!res.body) {\n            // we can delay running it until a bit later --\n            // if it's needed, we'll have a `waitUntil` lock anyway.\n            setTimeout(()=>closeController.dispatchClose(), 0);\n        } else {\n            // NOTE: if this is a streaming response, onClose may be called later,\n            // so we can't rely on `closeController.listeners` -- it might be 0 at this point.\n            const trackedBody = trackStreamConsumed(res.body, ()=>closeController.dispatchClose());\n            res = new Response(trackedBody, {\n                status: res.status,\n                statusText: res.statusText,\n                headers: res.headers\n            });\n        }\n        return res;\n    }\n}\n\n//# sourceMappingURL=edge-route-module-wrapper.js.map","// src/errors/ai-sdk-error.ts\nvar marker = \"vercel.ai.error\";\nvar symbol = Symbol.for(marker);\nvar _a;\nvar _AISDKError = class _AISDKError extends Error {\n  /**\n   * Creates an AI SDK Error.\n   *\n   * @param {Object} params - The parameters for creating the error.\n   * @param {string} params.name - The name of the error.\n   * @param {string} params.message - The error message.\n   * @param {unknown} [params.cause] - The underlying cause of the error.\n   */\n  constructor({\n    name: name14,\n    message,\n    cause\n  }) {\n    super(message);\n    this[_a] = true;\n    this.name = name14;\n    this.cause = cause;\n  }\n  /**\n   * Checks if the given error is an AI SDK Error.\n   * @param {unknown} error - The error to check.\n   * @returns {boolean} True if the error is an AI SDK Error, false otherwise.\n   */\n  static isInstance(error) {\n    return _AISDKError.hasMarker(error, marker);\n  }\n  static hasMarker(error, marker15) {\n    const markerSymbol = Symbol.for(marker15);\n    return error != null && typeof error === \"object\" && markerSymbol in error && typeof error[markerSymbol] === \"boolean\" && error[markerSymbol] === true;\n  }\n  /**\n   * Returns a JSON representation of the error.\n   * @returns {Object} An object containing the error's name, message, and cause.\n   *\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message\n    };\n  }\n};\n_a = symbol;\nvar AISDKError = _AISDKError;\n\n// src/errors/api-call-error.ts\nvar name = \"AI_APICallError\";\nvar marker2 = `vercel.ai.error.${name}`;\nvar symbol2 = Symbol.for(marker2);\nvar _a2;\nvar APICallError = class extends AISDKError {\n  constructor({\n    message,\n    url,\n    requestBodyValues,\n    statusCode,\n    responseHeaders,\n    responseBody,\n    cause,\n    isRetryable = statusCode != null && (statusCode === 408 || // request timeout\n    statusCode === 409 || // conflict\n    statusCode === 429 || // too many requests\n    statusCode >= 500),\n    // server error\n    data\n  }) {\n    super({ name, message, cause });\n    this[_a2] = true;\n    this.url = url;\n    this.requestBodyValues = requestBodyValues;\n    this.statusCode = statusCode;\n    this.responseHeaders = responseHeaders;\n    this.responseBody = responseBody;\n    this.isRetryable = isRetryable;\n    this.data = data;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker2);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isAPICallError(error) {\n    return error instanceof Error && error.name === name && typeof error.url === \"string\" && typeof error.requestBodyValues === \"object\" && (error.statusCode == null || typeof error.statusCode === \"number\") && (error.responseHeaders == null || typeof error.responseHeaders === \"object\") && (error.responseBody == null || typeof error.responseBody === \"string\") && (error.cause == null || typeof error.cause === \"object\") && typeof error.isRetryable === \"boolean\" && (error.data == null || typeof error.data === \"object\");\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      url: this.url,\n      requestBodyValues: this.requestBodyValues,\n      statusCode: this.statusCode,\n      responseHeaders: this.responseHeaders,\n      responseBody: this.responseBody,\n      cause: this.cause,\n      isRetryable: this.isRetryable,\n      data: this.data\n    };\n  }\n};\n_a2 = symbol2;\n\n// src/errors/empty-response-body-error.ts\nvar name2 = \"AI_EmptyResponseBodyError\";\nvar marker3 = `vercel.ai.error.${name2}`;\nvar symbol3 = Symbol.for(marker3);\nvar _a3;\nvar EmptyResponseBodyError = class extends AISDKError {\n  // used in isInstance\n  constructor({ message = \"Empty response body\" } = {}) {\n    super({ name: name2, message });\n    this[_a3] = true;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker3);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isEmptyResponseBodyError(error) {\n    return error instanceof Error && error.name === name2;\n  }\n};\n_a3 = symbol3;\n\n// src/errors/get-error-message.ts\nfunction getErrorMessage(error) {\n  if (error == null) {\n    return \"unknown error\";\n  }\n  if (typeof error === \"string\") {\n    return error;\n  }\n  if (error instanceof Error) {\n    return error.message;\n  }\n  return JSON.stringify(error);\n}\n\n// src/errors/invalid-argument-error.ts\nvar name3 = \"AI_InvalidArgumentError\";\nvar marker4 = `vercel.ai.error.${name3}`;\nvar symbol4 = Symbol.for(marker4);\nvar _a4;\nvar InvalidArgumentError = class extends AISDKError {\n  constructor({\n    message,\n    cause,\n    argument\n  }) {\n    super({ name: name3, message, cause });\n    this[_a4] = true;\n    this.argument = argument;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker4);\n  }\n};\n_a4 = symbol4;\n\n// src/errors/invalid-prompt-error.ts\nvar name4 = \"AI_InvalidPromptError\";\nvar marker5 = `vercel.ai.error.${name4}`;\nvar symbol5 = Symbol.for(marker5);\nvar _a5;\nvar InvalidPromptError = class extends AISDKError {\n  constructor({\n    prompt: prompt2,\n    message,\n    cause\n  }) {\n    super({ name: name4, message: `Invalid prompt: ${message}`, cause });\n    this[_a5] = true;\n    this.prompt = prompt2;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker5);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isInvalidPromptError(error) {\n    return error instanceof Error && error.name === name4 && prompt != null;\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      prompt: this.prompt\n    };\n  }\n};\n_a5 = symbol5;\n\n// src/errors/invalid-response-data-error.ts\nvar name5 = \"AI_InvalidResponseDataError\";\nvar marker6 = `vercel.ai.error.${name5}`;\nvar symbol6 = Symbol.for(marker6);\nvar _a6;\nvar InvalidResponseDataError = class extends AISDKError {\n  constructor({\n    data,\n    message = `Invalid response data: ${JSON.stringify(data)}.`\n  }) {\n    super({ name: name5, message });\n    this[_a6] = true;\n    this.data = data;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker6);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isInvalidResponseDataError(error) {\n    return error instanceof Error && error.name === name5 && error.data != null;\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      data: this.data\n    };\n  }\n};\n_a6 = symbol6;\n\n// src/errors/json-parse-error.ts\nvar name6 = \"AI_JSONParseError\";\nvar marker7 = `vercel.ai.error.${name6}`;\nvar symbol7 = Symbol.for(marker7);\nvar _a7;\nvar JSONParseError = class extends AISDKError {\n  constructor({ text, cause }) {\n    super({\n      name: name6,\n      message: `JSON parsing failed: Text: ${text}.\nError message: ${getErrorMessage(cause)}`,\n      cause\n    });\n    this[_a7] = true;\n    this.text = text;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker7);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isJSONParseError(error) {\n    return error instanceof Error && error.name === name6 && \"text\" in error && typeof error.text === \"string\";\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n      valueText: this.text\n    };\n  }\n};\n_a7 = symbol7;\n\n// src/errors/load-api-key-error.ts\nvar name7 = \"AI_LoadAPIKeyError\";\nvar marker8 = `vercel.ai.error.${name7}`;\nvar symbol8 = Symbol.for(marker8);\nvar _a8;\nvar LoadAPIKeyError = class extends AISDKError {\n  // used in isInstance\n  constructor({ message }) {\n    super({ name: name7, message });\n    this[_a8] = true;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker8);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isLoadAPIKeyError(error) {\n    return error instanceof Error && error.name === name7;\n  }\n};\n_a8 = symbol8;\n\n// src/errors/load-setting-error.ts\nvar name8 = \"AI_LoadSettingError\";\nvar marker9 = `vercel.ai.error.${name8}`;\nvar symbol9 = Symbol.for(marker9);\nvar _a9;\nvar LoadSettingError = class extends AISDKError {\n  // used in isInstance\n  constructor({ message }) {\n    super({ name: name8, message });\n    this[_a9] = true;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker9);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isLoadSettingError(error) {\n    return error instanceof Error && error.name === name8;\n  }\n};\n_a9 = symbol9;\n\n// src/errors/no-content-generated-error.ts\nvar name9 = \"AI_NoContentGeneratedError\";\nvar marker10 = `vercel.ai.error.${name9}`;\nvar symbol10 = Symbol.for(marker10);\nvar _a10;\nvar NoContentGeneratedError = class extends AISDKError {\n  // used in isInstance\n  constructor({\n    message = \"No content generated.\"\n  } = {}) {\n    super({ name: name9, message });\n    this[_a10] = true;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker10);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isNoContentGeneratedError(error) {\n    return error instanceof Error && error.name === name9;\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      cause: this.cause,\n      message: this.message,\n      stack: this.stack\n    };\n  }\n};\n_a10 = symbol10;\n\n// src/errors/no-such-model-error.ts\nvar name10 = \"AI_NoSuchModelError\";\nvar marker11 = `vercel.ai.error.${name10}`;\nvar symbol11 = Symbol.for(marker11);\nvar _a11;\nvar NoSuchModelError = class extends AISDKError {\n  constructor({\n    errorName = name10,\n    modelId,\n    modelType,\n    message = `No such ${modelType}: ${modelId}`\n  }) {\n    super({ name: errorName, message });\n    this[_a11] = true;\n    this.modelId = modelId;\n    this.modelType = modelType;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker11);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isNoSuchModelError(error) {\n    return error instanceof Error && error.name === name10 && typeof error.modelId === \"string\" && typeof error.modelType === \"string\";\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      modelId: this.modelId,\n      modelType: this.modelType\n    };\n  }\n};\n_a11 = symbol11;\n\n// src/errors/too-many-embedding-values-for-call-error.ts\nvar name11 = \"AI_TooManyEmbeddingValuesForCallError\";\nvar marker12 = `vercel.ai.error.${name11}`;\nvar symbol12 = Symbol.for(marker12);\nvar _a12;\nvar TooManyEmbeddingValuesForCallError = class extends AISDKError {\n  constructor(options) {\n    super({\n      name: name11,\n      message: `Too many values for a single embedding call. The ${options.provider} model \"${options.modelId}\" can only embed up to ${options.maxEmbeddingsPerCall} values per call, but ${options.values.length} values were provided.`\n    });\n    this[_a12] = true;\n    this.provider = options.provider;\n    this.modelId = options.modelId;\n    this.maxEmbeddingsPerCall = options.maxEmbeddingsPerCall;\n    this.values = options.values;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker12);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isTooManyEmbeddingValuesForCallError(error) {\n    return error instanceof Error && error.name === name11 && \"provider\" in error && typeof error.provider === \"string\" && \"modelId\" in error && typeof error.modelId === \"string\" && \"maxEmbeddingsPerCall\" in error && typeof error.maxEmbeddingsPerCall === \"number\" && \"values\" in error && Array.isArray(error.values);\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      provider: this.provider,\n      modelId: this.modelId,\n      maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,\n      values: this.values\n    };\n  }\n};\n_a12 = symbol12;\n\n// src/errors/type-validation-error.ts\nvar name12 = \"AI_TypeValidationError\";\nvar marker13 = `vercel.ai.error.${name12}`;\nvar symbol13 = Symbol.for(marker13);\nvar _a13;\nvar _TypeValidationError = class _TypeValidationError extends AISDKError {\n  constructor({ value, cause }) {\n    super({\n      name: name12,\n      message: `Type validation failed: Value: ${JSON.stringify(value)}.\nError message: ${getErrorMessage(cause)}`,\n      cause\n    });\n    this[_a13] = true;\n    this.value = value;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker13);\n  }\n  /**\n   * Wraps an error into a TypeValidationError.\n   * If the cause is already a TypeValidationError with the same value, it returns the cause.\n   * Otherwise, it creates a new TypeValidationError.\n   *\n   * @param {Object} params - The parameters for wrapping the error.\n   * @param {unknown} params.value - The value that failed validation.\n   * @param {unknown} params.cause - The original error or cause of the validation failure.\n   * @returns {TypeValidationError} A TypeValidationError instance.\n   */\n  static wrap({\n    value,\n    cause\n  }) {\n    return _TypeValidationError.isInstance(cause) && cause.value === value ? cause : new _TypeValidationError({ value, cause });\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isTypeValidationError(error) {\n    return error instanceof Error && error.name === name12;\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n      value: this.value\n    };\n  }\n};\n_a13 = symbol13;\nvar TypeValidationError = _TypeValidationError;\n\n// src/errors/unsupported-functionality-error.ts\nvar name13 = \"AI_UnsupportedFunctionalityError\";\nvar marker14 = `vercel.ai.error.${name13}`;\nvar symbol14 = Symbol.for(marker14);\nvar _a14;\nvar UnsupportedFunctionalityError = class extends AISDKError {\n  constructor({ functionality }) {\n    super({\n      name: name13,\n      message: `'${functionality}' functionality not supported.`\n    });\n    this[_a14] = true;\n    this.functionality = functionality;\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker14);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isUnsupportedFunctionalityError(error) {\n    return error instanceof Error && error.name === name13 && typeof error.functionality === \"string\";\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      functionality: this.functionality\n    };\n  }\n};\n_a14 = symbol14;\n\n// src/json-value/is-json.ts\nfunction isJSONValue(value) {\n  if (value === null || typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n    return true;\n  }\n  if (Array.isArray(value)) {\n    return value.every(isJSONValue);\n  }\n  if (typeof value === \"object\") {\n    return Object.entries(value).every(\n      ([key, val]) => typeof key === \"string\" && isJSONValue(val)\n    );\n  }\n  return false;\n}\nfunction isJSONArray(value) {\n  return Array.isArray(value) && value.every(isJSONValue);\n}\nfunction isJSONObject(value) {\n  return value != null && typeof value === \"object\" && Object.entries(value).every(\n    ([key, val]) => typeof key === \"string\" && isJSONValue(val)\n  );\n}\nexport {\n  AISDKError,\n  APICallError,\n  EmptyResponseBodyError,\n  InvalidArgumentError,\n  InvalidPromptError,\n  InvalidResponseDataError,\n  JSONParseError,\n  LoadAPIKeyError,\n  LoadSettingError,\n  NoContentGeneratedError,\n  NoSuchModelError,\n  TooManyEmbeddingValuesForCallError,\n  TypeValidationError,\n  UnsupportedFunctionalityError,\n  getErrorMessage,\n  isJSONArray,\n  isJSONObject,\n  isJSONValue\n};\n//# sourceMappingURL=index.mjs.map","// This alphabet uses `A-Za-z0-9_-` symbols.\n// The order of characters is optimized for better gzip and brotli compression.\n// References to the same file (works both for gzip and brotli):\n// `'use`, `andom`, and `rict'`\n// References to the brotli default dictionary:\n// `-26T`, `1983`, `40px`, `75px`, `bush`, `jack`, `mind`, `very`, and `wolf`\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size | 0\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size | 0\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","function createParser(onParse) {\n  let isFirstChunk;\n  let buffer;\n  let startingPosition;\n  let startingFieldLength;\n  let eventId;\n  let eventName;\n  let data;\n  reset();\n  return {\n    feed,\n    reset\n  };\n  function reset() {\n    isFirstChunk = true;\n    buffer = \"\";\n    startingPosition = 0;\n    startingFieldLength = -1;\n    eventId = void 0;\n    eventName = void 0;\n    data = \"\";\n  }\n  function feed(chunk) {\n    buffer = buffer ? buffer + chunk : chunk;\n    if (isFirstChunk && hasBom(buffer)) {\n      buffer = buffer.slice(BOM.length);\n    }\n    isFirstChunk = false;\n    const length = buffer.length;\n    let position = 0;\n    let discardTrailingNewline = false;\n    while (position < length) {\n      if (discardTrailingNewline) {\n        if (buffer[position] === \"\\n\") {\n          ++position;\n        }\n        discardTrailingNewline = false;\n      }\n      let lineLength = -1;\n      let fieldLength = startingFieldLength;\n      let character;\n      for (let index = startingPosition; lineLength < 0 && index < length; ++index) {\n        character = buffer[index];\n        if (character === \":\" && fieldLength < 0) {\n          fieldLength = index - position;\n        } else if (character === \"\\r\") {\n          discardTrailingNewline = true;\n          lineLength = index - position;\n        } else if (character === \"\\n\") {\n          lineLength = index - position;\n        }\n      }\n      if (lineLength < 0) {\n        startingPosition = length - position;\n        startingFieldLength = fieldLength;\n        break;\n      } else {\n        startingPosition = 0;\n        startingFieldLength = -1;\n      }\n      parseEventStreamLine(buffer, position, fieldLength, lineLength);\n      position += lineLength + 1;\n    }\n    if (position === length) {\n      buffer = \"\";\n    } else if (position > 0) {\n      buffer = buffer.slice(position);\n    }\n  }\n  function parseEventStreamLine(lineBuffer, index, fieldLength, lineLength) {\n    if (lineLength === 0) {\n      if (data.length > 0) {\n        onParse({\n          type: \"event\",\n          id: eventId,\n          event: eventName || void 0,\n          data: data.slice(0, -1)\n          // remove trailing newline\n        });\n\n        data = \"\";\n        eventId = void 0;\n      }\n      eventName = void 0;\n      return;\n    }\n    const noValue = fieldLength < 0;\n    const field = lineBuffer.slice(index, index + (noValue ? lineLength : fieldLength));\n    let step = 0;\n    if (noValue) {\n      step = lineLength;\n    } else if (lineBuffer[index + fieldLength + 1] === \" \") {\n      step = fieldLength + 2;\n    } else {\n      step = fieldLength + 1;\n    }\n    const position = index + step;\n    const valueLength = lineLength - step;\n    const value = lineBuffer.slice(position, position + valueLength).toString();\n    if (field === \"data\") {\n      data += value ? \"\".concat(value, \"\\n\") : \"\\n\";\n    } else if (field === \"event\") {\n      eventName = value;\n    } else if (field === \"id\" && !value.includes(\"\\0\")) {\n      eventId = value;\n    } else if (field === \"retry\") {\n      const retry = parseInt(value, 10);\n      if (!Number.isNaN(retry)) {\n        onParse({\n          type: \"reconnect-interval\",\n          value: retry\n        });\n      }\n    }\n  }\n}\nconst BOM = [239, 187, 191];\nfunction hasBom(buffer) {\n  return BOM.every((charCode, index) => buffer.charCodeAt(index) === charCode);\n}\nexport { createParser };\n//# sourceMappingURL=index.js.map\n","import { createParser } from './index.js';\nclass EventSourceParserStream extends TransformStream {\n  constructor() {\n    let parser;\n    super({\n      start(controller) {\n        parser = createParser(event => {\n          if (event.type === \"event\") {\n            controller.enqueue(event);\n          }\n        });\n      },\n      transform(chunk) {\n        parser.feed(chunk);\n      }\n    });\n  }\n}\nexport { EventSourceParserStream };\n//# sourceMappingURL=stream.js.map\n","// src/combine-headers.ts\nfunction combineHeaders(...headers) {\n  return headers.reduce(\n    (combinedHeaders, currentHeaders) => ({\n      ...combinedHeaders,\n      ...currentHeaders != null ? currentHeaders : {}\n    }),\n    {}\n  );\n}\n\n// src/convert-async-generator-to-readable-stream.ts\nfunction convertAsyncGeneratorToReadableStream(stream) {\n  return new ReadableStream({\n    /**\n     * Called when the consumer wants to pull more data from the stream.\n     *\n     * @param {ReadableStreamDefaultController<T>} controller - The controller to enqueue data into the stream.\n     * @returns {Promise<void>}\n     */\n    async pull(controller) {\n      try {\n        const { value, done } = await stream.next();\n        if (done) {\n          controller.close();\n        } else {\n          controller.enqueue(value);\n        }\n      } catch (error) {\n        controller.error(error);\n      }\n    },\n    /**\n     * Called when the consumer cancels the stream.\n     */\n    cancel() {\n    }\n  });\n}\n\n// src/extract-response-headers.ts\nfunction extractResponseHeaders(response) {\n  const headers = {};\n  response.headers.forEach((value, key) => {\n    headers[key] = value;\n  });\n  return headers;\n}\n\n// src/generate-id.ts\nimport { InvalidArgumentError } from \"@ai-sdk/provider\";\nimport { customAlphabet } from \"nanoid/non-secure\";\nvar createIdGenerator = ({\n  prefix,\n  size: defaultSize = 7,\n  alphabet = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\",\n  separator = \"-\"\n} = {}) => {\n  const generator = customAlphabet(alphabet, defaultSize);\n  if (prefix == null) {\n    return generator;\n  }\n  if (alphabet.includes(separator)) {\n    throw new InvalidArgumentError({\n      argument: \"separator\",\n      message: `The separator \"${separator}\" must not be part of the alphabet \"${alphabet}\".`\n    });\n  }\n  return (size) => `${prefix}${separator}${generator(size)}`;\n};\nvar generateId = createIdGenerator();\n\n// src/get-error-message.ts\nfunction getErrorMessage(error) {\n  if (error == null) {\n    return \"unknown error\";\n  }\n  if (typeof error === \"string\") {\n    return error;\n  }\n  if (error instanceof Error) {\n    return error.message;\n  }\n  return JSON.stringify(error);\n}\n\n// src/is-abort-error.ts\nfunction isAbortError(error) {\n  return error instanceof Error && (error.name === \"AbortError\" || error.name === \"TimeoutError\");\n}\n\n// src/load-api-key.ts\nimport { LoadAPIKeyError } from \"@ai-sdk/provider\";\nfunction loadApiKey({\n  apiKey,\n  environmentVariableName,\n  apiKeyParameterName = \"apiKey\",\n  description\n}) {\n  if (typeof apiKey === \"string\") {\n    return apiKey;\n  }\n  if (apiKey != null) {\n    throw new LoadAPIKeyError({\n      message: `${description} API key must be a string.`\n    });\n  }\n  if (typeof process === \"undefined\") {\n    throw new LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter. Environment variables is not supported in this environment.`\n    });\n  }\n  apiKey = process.env[environmentVariableName];\n  if (apiKey == null) {\n    throw new LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter or the ${environmentVariableName} environment variable.`\n    });\n  }\n  if (typeof apiKey !== \"string\") {\n    throw new LoadAPIKeyError({\n      message: `${description} API key must be a string. The value of the ${environmentVariableName} environment variable is not a string.`\n    });\n  }\n  return apiKey;\n}\n\n// src/load-setting.ts\nimport { LoadSettingError } from \"@ai-sdk/provider\";\nfunction loadSetting({\n  settingValue,\n  environmentVariableName,\n  settingName,\n  description\n}) {\n  if (typeof settingValue === \"string\") {\n    return settingValue;\n  }\n  if (settingValue != null) {\n    throw new LoadSettingError({\n      message: `${description} setting must be a string.`\n    });\n  }\n  if (typeof process === \"undefined\") {\n    throw new LoadSettingError({\n      message: `${description} setting is missing. Pass it using the '${settingName}' parameter. Environment variables is not supported in this environment.`\n    });\n  }\n  settingValue = process.env[environmentVariableName];\n  if (settingValue == null) {\n    throw new LoadSettingError({\n      message: `${description} setting is missing. Pass it using the '${settingName}' parameter or the ${environmentVariableName} environment variable.`\n    });\n  }\n  if (typeof settingValue !== \"string\") {\n    throw new LoadSettingError({\n      message: `${description} setting must be a string. The value of the ${environmentVariableName} environment variable is not a string.`\n    });\n  }\n  return settingValue;\n}\n\n// src/load-optional-setting.ts\nfunction loadOptionalSetting({\n  settingValue,\n  environmentVariableName\n}) {\n  if (typeof settingValue === \"string\") {\n    return settingValue;\n  }\n  if (settingValue != null || typeof process === \"undefined\") {\n    return void 0;\n  }\n  settingValue = process.env[environmentVariableName];\n  if (settingValue == null || typeof settingValue !== \"string\") {\n    return void 0;\n  }\n  return settingValue;\n}\n\n// src/parse-json.ts\nimport {\n  JSONParseError,\n  TypeValidationError as TypeValidationError2\n} from \"@ai-sdk/provider\";\nimport SecureJSON from \"secure-json-parse\";\n\n// src/validate-types.ts\nimport { TypeValidationError } from \"@ai-sdk/provider\";\n\n// src/validator.ts\nvar validatorSymbol = Symbol.for(\"vercel.ai.validator\");\nfunction validator(validate) {\n  return { [validatorSymbol]: true, validate };\n}\nfunction isValidator(value) {\n  return typeof value === \"object\" && value !== null && validatorSymbol in value && value[validatorSymbol] === true && \"validate\" in value;\n}\nfunction asValidator(value) {\n  return isValidator(value) ? value : zodValidator(value);\n}\nfunction zodValidator(zodSchema) {\n  return validator((value) => {\n    const result = zodSchema.safeParse(value);\n    return result.success ? { success: true, value: result.data } : { success: false, error: result.error };\n  });\n}\n\n// src/validate-types.ts\nfunction validateTypes({\n  value,\n  schema: inputSchema\n}) {\n  const result = safeValidateTypes({ value, schema: inputSchema });\n  if (!result.success) {\n    throw TypeValidationError.wrap({ value, cause: result.error });\n  }\n  return result.value;\n}\nfunction safeValidateTypes({\n  value,\n  schema\n}) {\n  const validator2 = asValidator(schema);\n  try {\n    if (validator2.validate == null) {\n      return { success: true, value };\n    }\n    const result = validator2.validate(value);\n    if (result.success) {\n      return result;\n    }\n    return {\n      success: false,\n      error: TypeValidationError.wrap({ value, cause: result.error })\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: TypeValidationError.wrap({ value, cause: error })\n    };\n  }\n}\n\n// src/parse-json.ts\nfunction parseJSON({\n  text,\n  schema\n}) {\n  try {\n    const value = SecureJSON.parse(text);\n    if (schema == null) {\n      return value;\n    }\n    return validateTypes({ value, schema });\n  } catch (error) {\n    if (JSONParseError.isJSONParseError(error) || TypeValidationError2.isTypeValidationError(error)) {\n      throw error;\n    }\n    throw new JSONParseError({ text, cause: error });\n  }\n}\nfunction safeParseJSON({\n  text,\n  schema\n}) {\n  try {\n    const value = SecureJSON.parse(text);\n    if (schema == null) {\n      return {\n        success: true,\n        value\n      };\n    }\n    return safeValidateTypes({ value, schema });\n  } catch (error) {\n    return {\n      success: false,\n      error: JSONParseError.isJSONParseError(error) ? error : new JSONParseError({ text, cause: error })\n    };\n  }\n}\nfunction isParsableJson(input) {\n  try {\n    SecureJSON.parse(input);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar isParseableJson = isParsableJson;\n\n// src/post-to-api.ts\nimport { APICallError } from \"@ai-sdk/provider\";\n\n// src/remove-undefined-entries.ts\nfunction removeUndefinedEntries(record) {\n  return Object.fromEntries(\n    Object.entries(record).filter(([_key, value]) => value != null)\n  );\n}\n\n// src/post-to-api.ts\nvar getOriginalFetch = () => globalThis.fetch;\nvar postJsonToApi = async ({\n  url,\n  headers,\n  body,\n  failedResponseHandler,\n  successfulResponseHandler,\n  abortSignal,\n  fetch\n}) => postToApi({\n  url,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    ...headers\n  },\n  body: {\n    content: JSON.stringify(body),\n    values: body\n  },\n  failedResponseHandler,\n  successfulResponseHandler,\n  abortSignal,\n  fetch\n});\nvar postToApi = async ({\n  url,\n  headers = {},\n  body,\n  successfulResponseHandler,\n  failedResponseHandler,\n  abortSignal,\n  fetch = getOriginalFetch()\n}) => {\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: removeUndefinedEntries(headers),\n      body: body.content,\n      signal: abortSignal\n    });\n    const responseHeaders = extractResponseHeaders(response);\n    if (!response.ok) {\n      let errorInformation;\n      try {\n        errorInformation = await failedResponseHandler({\n          response,\n          url,\n          requestBodyValues: body.values\n        });\n      } catch (error) {\n        if (isAbortError(error) || APICallError.isAPICallError(error)) {\n          throw error;\n        }\n        throw new APICallError({\n          message: \"Failed to process error response\",\n          cause: error,\n          statusCode: response.status,\n          url,\n          responseHeaders,\n          requestBodyValues: body.values\n        });\n      }\n      throw errorInformation.value;\n    }\n    try {\n      return await successfulResponseHandler({\n        response,\n        url,\n        requestBodyValues: body.values\n      });\n    } catch (error) {\n      if (error instanceof Error) {\n        if (isAbortError(error) || APICallError.isAPICallError(error)) {\n          throw error;\n        }\n      }\n      throw new APICallError({\n        message: \"Failed to process successful response\",\n        cause: error,\n        statusCode: response.status,\n        url,\n        responseHeaders,\n        requestBodyValues: body.values\n      });\n    }\n  } catch (error) {\n    if (isAbortError(error)) {\n      throw error;\n    }\n    if (error instanceof TypeError && error.message === \"fetch failed\") {\n      const cause = error.cause;\n      if (cause != null) {\n        throw new APICallError({\n          message: `Cannot connect to API: ${cause.message}`,\n          cause,\n          url,\n          requestBodyValues: body.values,\n          isRetryable: true\n          // retry when network error\n        });\n      }\n    }\n    throw error;\n  }\n};\n\n// src/response-handler.ts\nimport { APICallError as APICallError2, EmptyResponseBodyError } from \"@ai-sdk/provider\";\nimport {\n  EventSourceParserStream\n} from \"eventsource-parser/stream\";\nvar createJsonErrorResponseHandler = ({\n  errorSchema,\n  errorToMessage,\n  isRetryable\n}) => async ({ response, url, requestBodyValues }) => {\n  const responseBody = await response.text();\n  const responseHeaders = extractResponseHeaders(response);\n  if (responseBody.trim() === \"\") {\n    return {\n      responseHeaders,\n      value: new APICallError2({\n        message: response.statusText,\n        url,\n        requestBodyValues,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n        isRetryable: isRetryable == null ? void 0 : isRetryable(response)\n      })\n    };\n  }\n  try {\n    const parsedError = parseJSON({\n      text: responseBody,\n      schema: errorSchema\n    });\n    return {\n      responseHeaders,\n      value: new APICallError2({\n        message: errorToMessage(parsedError),\n        url,\n        requestBodyValues,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n        data: parsedError,\n        isRetryable: isRetryable == null ? void 0 : isRetryable(response, parsedError)\n      })\n    };\n  } catch (parseError) {\n    return {\n      responseHeaders,\n      value: new APICallError2({\n        message: response.statusText,\n        url,\n        requestBodyValues,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n        isRetryable: isRetryable == null ? void 0 : isRetryable(response)\n      })\n    };\n  }\n};\nvar createEventSourceResponseHandler = (chunkSchema) => async ({ response }) => {\n  const responseHeaders = extractResponseHeaders(response);\n  if (response.body == null) {\n    throw new EmptyResponseBodyError({});\n  }\n  return {\n    responseHeaders,\n    value: response.body.pipeThrough(new TextDecoderStream()).pipeThrough(new EventSourceParserStream()).pipeThrough(\n      new TransformStream({\n        transform({ data }, controller) {\n          if (data === \"[DONE]\") {\n            return;\n          }\n          controller.enqueue(\n            safeParseJSON({\n              text: data,\n              schema: chunkSchema\n            })\n          );\n        }\n      })\n    )\n  };\n};\nvar createJsonStreamResponseHandler = (chunkSchema) => async ({ response }) => {\n  const responseHeaders = extractResponseHeaders(response);\n  if (response.body == null) {\n    throw new EmptyResponseBodyError({});\n  }\n  let buffer = \"\";\n  return {\n    responseHeaders,\n    value: response.body.pipeThrough(new TextDecoderStream()).pipeThrough(\n      new TransformStream({\n        transform(chunkText, controller) {\n          if (chunkText.endsWith(\"\\n\")) {\n            controller.enqueue(\n              safeParseJSON({\n                text: buffer + chunkText,\n                schema: chunkSchema\n              })\n            );\n            buffer = \"\";\n          } else {\n            buffer += chunkText;\n          }\n        }\n      })\n    )\n  };\n};\nvar createJsonResponseHandler = (responseSchema) => async ({ response, url, requestBodyValues }) => {\n  const responseBody = await response.text();\n  const parsedResult = safeParseJSON({\n    text: responseBody,\n    schema: responseSchema\n  });\n  const responseHeaders = extractResponseHeaders(response);\n  if (!parsedResult.success) {\n    throw new APICallError2({\n      message: \"Invalid JSON response\",\n      cause: parsedResult.error,\n      statusCode: response.status,\n      responseHeaders,\n      responseBody,\n      url,\n      requestBodyValues\n    });\n  }\n  return {\n    responseHeaders,\n    value: parsedResult.value\n  };\n};\n\n// src/uint8-utils.ts\nvar { btoa, atob } = globalThis;\nfunction convertBase64ToUint8Array(base64String) {\n  const base64Url = base64String.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  const latin1string = atob(base64Url);\n  return Uint8Array.from(latin1string, (byte) => byte.codePointAt(0));\n}\nfunction convertUint8ArrayToBase64(array) {\n  let latin1string = \"\";\n  for (let i = 0; i < array.length; i++) {\n    latin1string += String.fromCodePoint(array[i]);\n  }\n  return btoa(latin1string);\n}\n\n// src/without-trailing-slash.ts\nfunction withoutTrailingSlash(url) {\n  return url == null ? void 0 : url.replace(/\\/$/, \"\");\n}\nexport {\n  asValidator,\n  combineHeaders,\n  convertAsyncGeneratorToReadableStream,\n  convertBase64ToUint8Array,\n  convertUint8ArrayToBase64,\n  createEventSourceResponseHandler,\n  createIdGenerator,\n  createJsonErrorResponseHandler,\n  createJsonResponseHandler,\n  createJsonStreamResponseHandler,\n  extractResponseHeaders,\n  generateId,\n  getErrorMessage,\n  isAbortError,\n  isParsableJson,\n  isParseableJson,\n  isValidator,\n  loadApiKey,\n  loadOptionalSetting,\n  loadSetting,\n  parseJSON,\n  postJsonToApi,\n  postToApi,\n  safeParseJSON,\n  safeValidateTypes,\n  validateTypes,\n  validator,\n  validatorSymbol,\n  withoutTrailingSlash,\n  zodValidator\n};\n//# sourceMappingURL=index.mjs.map","export const ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nexport const jsonDescription = (jsonSchema, def) => {\n    if (def.description) {\n        try {\n            return {\n                ...jsonSchema,\n                ...JSON.parse(def.description),\n            };\n        }\n        catch { }\n    }\n    return jsonSchema;\n};\nexport const defaultOptions = {\n    name: undefined,\n    $refStrategy: \"root\",\n    basePath: [\"#\"],\n    effectStrategy: \"input\",\n    pipeStrategy: \"all\",\n    dateStrategy: \"format:date-time\",\n    mapStrategy: \"entries\",\n    removeAdditionalStrategy: \"passthrough\",\n    definitionPath: \"definitions\",\n    target: \"jsonSchema7\",\n    strictUnions: false,\n    definitions: {},\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: \"escape\",\n    applyRegexFlags: false,\n    emailStrategy: \"format:email\",\n    base64Strategy: \"contentEncoding:base64\",\n    nameStrategy: \"ref\",\n};\nexport const getDefaultOptions = (options) => (typeof options === \"string\"\n    ? {\n        ...defaultOptions,\n        name: options,\n    }\n    : {\n        ...defaultOptions,\n        ...options,\n    });\n","import { getDefaultOptions } from \"./Options.js\";\nexport const getRefs = (options) => {\n    const _options = getDefaultOptions(options);\n    const currentPath = _options.name !== undefined\n        ? [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            def._def,\n            {\n                def: def._def,\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n","var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        var _a, _b;\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if ((_b = (_a = err === null || err === void 0 ? void 0 : err.message) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (!decoded.typ || !decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch (_a) {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\"\n        ? params(data)\n        : typeof params === \"string\"\n            ? { message: params }\n            : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nfunction custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    var _a, _b;\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n","export function parseAnyDef() {\n    return {};\n}\n","export function addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nexport function setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n","import { ZodFirstPartyTypeKind } from \"zod\";\nimport { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseArrayDef(def, refs) {\n    const res = {\n        type: \"array\",\n    };\n    if (def.type?._def &&\n        def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n        res.items = parseDef(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    if (def.minLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseBigintDef(def, refs) {\n    const res = {\n        type: \"integer\",\n        format: \"int64\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n","export function parseBooleanDef() {\n    return {\n        type: \"boolean\",\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseBrandedDef(_def, refs) {\n    return parseDef(_def.type._def, refs);\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseCatchDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case \"string\":\n        case \"format:date-time\":\n            return {\n                type: \"string\",\n                format: \"date-time\",\n            };\n        case \"format:date\":\n            return {\n                type: \"string\",\n                format: \"date\",\n            };\n        case \"integer\":\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: \"integer\",\n        format: \"unix-time\",\n    };\n    if (refs.target === \"openApi3\") {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                setResponseValueAndErrors(res, \"minimum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case \"max\":\n                setResponseValueAndErrors(res, \"maximum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n","import { parseDef } from \"../parseDef.js\";\nexport function parseDefaultDef(_def, refs) {\n    return {\n        ...parseDef(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseEffectsDef(_def, refs) {\n    return refs.effectStrategy === \"input\"\n        ? parseDef(_def.schema._def, refs)\n        : {};\n}\n","export function parseEnumDef(def) {\n    return {\n        type: \"string\",\n        enum: Array.from(def.values),\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nconst isJsonSchema7AllOfType = (type) => {\n    if (\"type\" in type && type.type === \"string\")\n        return false;\n    return \"allOf\" in type;\n};\nexport function parseIntersectionDef(def, refs) {\n    const allOf = [\n        parseDef(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n        }),\n        parseDef(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"1\"],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === \"jsonSchema2019-09\"\n        ? { unevaluatedProperties: false }\n        : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if (\"additionalProperties\" in schema &&\n                schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length\n        ? {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n","export function parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== \"bigint\" &&\n        parsedType !== \"number\" &&\n        parsedType !== \"boolean\" &&\n        parsedType !== \"string\") {\n        return {\n            type: Array.isArray(def.value) ? \"array\" : \"object\",\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        return {\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n        const: def.value,\n    };\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nlet emojiRegex = undefined;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    ipv4Cidr: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    ipv6Cidr: /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    base64url: /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n    jwt: /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/,\n};\nexport function parseStringDef(def, refs) {\n    const res = {\n        type: \"string\",\n    };\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case \"min\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"max\":\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"email\":\n                    switch (refs.emailStrategy) {\n                        case \"format:email\":\n                            addFormat(res, \"email\", check.message, refs);\n                            break;\n                        case \"format:idn-email\":\n                            addFormat(res, \"idn-email\", check.message, refs);\n                            break;\n                        case \"pattern:zod\":\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case \"url\":\n                    addFormat(res, \"uri\", check.message, refs);\n                    break;\n                case \"uuid\":\n                    addFormat(res, \"uuid\", check.message, refs);\n                    break;\n                case \"regex\":\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case \"cuid\":\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case \"cuid2\":\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case \"startsWith\":\n                    addPattern(res, RegExp(`^${escapeLiteralCheckValue(check.value, refs)}`), check.message, refs);\n                    break;\n                case \"endsWith\":\n                    addPattern(res, RegExp(`${escapeLiteralCheckValue(check.value, refs)}$`), check.message, refs);\n                    break;\n                case \"datetime\":\n                    addFormat(res, \"date-time\", check.message, refs);\n                    break;\n                case \"date\":\n                    addFormat(res, \"date\", check.message, refs);\n                    break;\n                case \"time\":\n                    addFormat(res, \"time\", check.message, refs);\n                    break;\n                case \"duration\":\n                    addFormat(res, \"duration\", check.message, refs);\n                    break;\n                case \"length\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"includes\": {\n                    addPattern(res, RegExp(escapeLiteralCheckValue(check.value, refs)), check.message, refs);\n                    break;\n                }\n                case \"ip\": {\n                    if (check.version !== \"v6\") {\n                        addFormat(res, \"ipv4\", check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addFormat(res, \"ipv6\", check.message, refs);\n                    }\n                    break;\n                }\n                case \"base64url\":\n                    addPattern(res, zodPatterns.base64url, check.message, refs);\n                    break;\n                case \"jwt\":\n                    addPattern(res, zodPatterns.jwt, check.message, refs);\n                    break;\n                case \"cidr\": {\n                    if (check.version !== \"v6\") {\n                        addPattern(res, zodPatterns.ipv4Cidr, check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addPattern(res, zodPatterns.ipv6Cidr, check.message, refs);\n                    }\n                    break;\n                }\n                case \"emoji\":\n                    addPattern(res, zodPatterns.emoji(), check.message, refs);\n                    break;\n                case \"ulid\": {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case \"base64\": {\n                    switch (refs.base64Strategy) {\n                        case \"format:binary\": {\n                            addFormat(res, \"binary\", check.message, refs);\n                            break;\n                        }\n                        case \"contentEncoding:base64\": {\n                            setResponseValueAndErrors(res, \"contentEncoding\", \"base64\", check.message, refs);\n                            break;\n                        }\n                        case \"pattern:zod\": {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"nanoid\": {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case \"toLowerCase\":\n                case \"toUpperCase\":\n                case \"trim\":\n                    break;\n                default:\n                    /* c8 ignore next */\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nfunction escapeLiteralCheckValue(literal, refs) {\n    return refs.patternStrategy === \"escape\"\n        ? escapeNonAlphaNumeric(literal)\n        : literal;\n}\nconst ALPHA_NUMERIC = new Set(\"ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz0123456789\");\nfunction escapeNonAlphaNumeric(source) {\n    let result = \"\";\n    for (let i = 0; i < source.length; i++) {\n        if (!ALPHA_NUMERIC.has(source[i])) {\n            result += \"\\\\\";\n        }\n        result += source[i];\n    }\n    return result;\n}\n// Adds a \"format\" keyword to the schema. If a format exists, both formats will be joined in an allOf-node, along with subsequent ones.\nfunction addFormat(schema, value, message, refs) {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message &&\n                refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"format\", value, message, refs);\n    }\n}\n// Adds a \"pattern\" keyword to the schema. If a pattern exists, both patterns will be joined in an allOf-node, along with subsequent ones.\nfunction addPattern(schema, regex, message, refs) {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: stringifyRegExpWithFlags(regex, refs),\n            ...(message &&\n                refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"pattern\", stringifyRegExpWithFlags(regex, refs), message, refs);\n    }\n}\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nfunction stringifyRegExpWithFlags(regex, refs) {\n    if (!refs.applyRegexFlags || !regex.flags) {\n        return regex.source;\n    }\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes(\"i\"),\n        m: regex.flags.includes(\"m\"),\n        s: regex.flags.includes(\"s\"), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = \"\";\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === \"^\") {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === \"$\") {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === \".\") {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === \"\\\\\") {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === \"]\") {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === \"[\") {\n            inCharGroup = true;\n        }\n    }\n    try {\n        new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join(\"/\")} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n}\n","import { ZodFirstPartyTypeKind, } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nimport { parseBrandedDef } from \"./branded.js\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === \"openAi\") {\n        console.warn(\"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\");\n    }\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: false,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? {},\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const { type, ...keyType } = parseStringDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodBranded &&\n        def.keyType._def.type._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.type._def.checks?.length) {\n        const { type, ...keyType } = parseBrandedDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    return schema;\n}\n","import { parseDef } from \"../parseDef.js\";\nimport { parseRecordDef } from \"./record.js\";\nexport function parseMapDef(def, refs) {\n    if (refs.mapStrategy === \"record\") {\n        return parseRecordDef(def, refs);\n    }\n    const keys = parseDef(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"],\n    }) || {};\n    const values = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"],\n    }) || {};\n    return {\n        type: \"array\",\n        maxItems: 125,\n        items: {\n            type: \"array\",\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n","export function parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== \"number\";\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1\n            ? parsedTypes[0] === \"string\"\n                ? \"string\"\n                : \"number\"\n            : [\"string\", \"number\"],\n        enum: actualValues,\n    };\n}\n","export function parseNeverDef() {\n    return {\n        not: {},\n    };\n}\n","export function parseNullDef(refs) {\n    return refs.target === \"openApi3\"\n        ? {\n            enum: [\"null\"],\n            nullable: true,\n        }\n        : {\n            type: \"null\",\n        };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const primitiveMappings = {\n    ZodString: \"string\",\n    ZodNumber: \"number\",\n    ZodBigInt: \"integer\",\n    ZodBoolean: \"boolean\",\n    ZodNull: \"null\",\n};\nexport function parseUnionDef(def, refs) {\n    if (refs.target === \"openApi3\")\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in primitiveMappings &&\n        (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case \"string\":\n                case \"number\":\n                case \"boolean\":\n                    return [...acc, type];\n                case \"bigint\":\n                    return [...acc, \"integer\"];\n                case \"object\":\n                    if (x._def.value === null)\n                        return [...acc, \"null\"];\n                case \"symbol\":\n                case \"undefined\":\n                case \"function\":\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\n        return {\n            type: \"string\",\n            enum: options.reduce((acc, x) => [\n                ...acc,\n                ...x._def.values.filter((x) => !acc.includes(x)),\n            ], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map\n        ? Array.from(def.options.values())\n        : def.options)\n        .map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", `${i}`],\n    }))\n        .filter((x) => !!x &&\n        (!refs.strictUnions ||\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n","import { parseDef } from \"../parseDef.js\";\nimport { primitiveMappings } from \"./union.js\";\nexport function parseNullableDef(def, refs) {\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === \"openApi3\") {\n            return {\n                type: primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [\n                primitiveMappings[def.innerType._def.typeName],\n                \"null\",\n            ],\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        const base = parseDef(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && \"$ref\" in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n    });\n    return base && { anyOf: [base, { type: \"null\" }] };\n}\n","import { addErrorMessage, setResponseValueAndErrors, } from \"../errorMessages.js\";\nexport function parseNumberDef(def, refs) {\n    const res = {\n        type: \"number\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"int\":\n                res.type = \"integer\";\n                addErrorMessage(res, \"type\", check.message, refs);\n                break;\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n","import { ZodOptional } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nfunction decideAdditionalProperties(def, refs) {\n    if (refs.removeAdditionalStrategy === \"strict\") {\n        return def.catchall._def.typeName === \"ZodNever\"\n            ? def.unknownKeys !== \"strict\"\n            : parseDef(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalProperties\"],\n            }) ?? true;\n    }\n    else {\n        return def.catchall._def.typeName === \"ZodNever\"\n            ? def.unknownKeys === \"passthrough\"\n            : parseDef(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalProperties\"],\n            }) ?? true;\n    }\n}\nexport function parseObjectDef(def, refs) {\n    const forceOptionalIntoNullable = refs.target === \"openAi\";\n    const result = {\n        type: \"object\",\n        ...Object.entries(def.shape()).reduce((acc, [propName, propDef]) => {\n            if (propDef === undefined || propDef._def === undefined)\n                return acc;\n            let propOptional = propDef.isOptional();\n            if (propOptional && forceOptionalIntoNullable) {\n                if (propDef instanceof ZodOptional) {\n                    propDef = propDef._def.innerType;\n                }\n                if (!propDef.isNullable()) {\n                    propDef = propDef.nullable();\n                }\n                propOptional = false;\n            }\n            const parsedDef = parseDef(propDef._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"properties\", propName],\n                propertyPath: [...refs.currentPath, \"properties\", propName],\n            });\n            if (parsedDef === undefined)\n                return acc;\n            return {\n                properties: { ...acc.properties, [propName]: parsedDef },\n                required: propOptional ? acc.required : [...acc.required, propName],\n            };\n        }, { properties: {}, required: [] }),\n        additionalProperties: decideAdditionalProperties(def, refs),\n    };\n    if (!result.required.length)\n        delete result.required;\n    return result;\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return parseDef(def.innerType._def, refs);\n    }\n    const innerSchema = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n    });\n    return innerSchema\n        ? {\n            anyOf: [\n                {\n                    not: {},\n                },\n                innerSchema,\n            ],\n        }\n        : {};\n};\n","import { parseDef } from \"../parseDef.js\";\nexport const parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === \"input\") {\n        return parseDef(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === \"output\") {\n        return parseDef(def.out._def, refs);\n    }\n    const a = parseDef(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n    });\n    const b = parseDef(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n","import { parseDef } from \"../parseDef.js\";\nexport function parsePromiseDef(def, refs) {\n    return parseDef(def.type._def, refs);\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseSetDef(def, refs) {\n    const items = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\"],\n    });\n    const schema = {\n        type: \"array\",\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        setResponseValueAndErrors(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        setResponseValueAndErrors(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: parseDef(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalItems\"],\n            }),\n        };\n    }\n    else {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\n","export function parseUndefinedDef() {\n    return {\n        not: {},\n    };\n}\n","export function parseUnknownDef() {\n    return {};\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseReadonlyDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n","import { ZodFirstPartyTypeKind } from \"zod\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nimport { parseArrayDef } from \"./parsers/array.js\";\nimport { parseBigintDef } from \"./parsers/bigint.js\";\nimport { parseBooleanDef } from \"./parsers/boolean.js\";\nimport { parseBrandedDef } from \"./parsers/branded.js\";\nimport { parseCatchDef } from \"./parsers/catch.js\";\nimport { parseDateDef } from \"./parsers/date.js\";\nimport { parseDefaultDef } from \"./parsers/default.js\";\nimport { parseEffectsDef } from \"./parsers/effects.js\";\nimport { parseEnumDef } from \"./parsers/enum.js\";\nimport { parseIntersectionDef } from \"./parsers/intersection.js\";\nimport { parseLiteralDef } from \"./parsers/literal.js\";\nimport { parseMapDef } from \"./parsers/map.js\";\nimport { parseNativeEnumDef } from \"./parsers/nativeEnum.js\";\nimport { parseNeverDef } from \"./parsers/never.js\";\nimport { parseNullDef } from \"./parsers/null.js\";\nimport { parseNullableDef } from \"./parsers/nullable.js\";\nimport { parseNumberDef } from \"./parsers/number.js\";\nimport { parseObjectDef } from \"./parsers/object.js\";\nimport { parseOptionalDef } from \"./parsers/optional.js\";\nimport { parsePipelineDef } from \"./parsers/pipeline.js\";\nimport { parsePromiseDef } from \"./parsers/promise.js\";\nimport { parseRecordDef } from \"./parsers/record.js\";\nimport { parseSetDef } from \"./parsers/set.js\";\nimport { parseStringDef } from \"./parsers/string.js\";\nimport { parseTupleDef } from \"./parsers/tuple.js\";\nimport { parseUndefinedDef } from \"./parsers/undefined.js\";\nimport { parseUnionDef } from \"./parsers/union.js\";\nimport { parseUnknownDef } from \"./parsers/unknown.js\";\nimport { parseReadonlyDef } from \"./parsers/readonly.js\";\nexport const selectParser = (def, typeName, refs) => {\n    switch (typeName) {\n        case ZodFirstPartyTypeKind.ZodString:\n            return parseStringDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNumber:\n            return parseNumberDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodObject:\n            return parseObjectDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBigInt:\n            return parseBigintDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBoolean:\n            return parseBooleanDef();\n        case ZodFirstPartyTypeKind.ZodDate:\n            return parseDateDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUndefined:\n            return parseUndefinedDef();\n        case ZodFirstPartyTypeKind.ZodNull:\n            return parseNullDef(refs);\n        case ZodFirstPartyTypeKind.ZodArray:\n            return parseArrayDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUnion:\n        case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return parseUnionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodIntersection:\n            return parseIntersectionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodTuple:\n            return parseTupleDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodRecord:\n            return parseRecordDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLiteral:\n            return parseLiteralDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodEnum:\n            return parseEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNativeEnum:\n            return parseNativeEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNullable:\n            return parseNullableDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodOptional:\n            return parseOptionalDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodMap:\n            return parseMapDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodSet:\n            return parseSetDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLazy:\n            return () => def.getter()._def;\n        case ZodFirstPartyTypeKind.ZodPromise:\n            return parsePromiseDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNaN:\n        case ZodFirstPartyTypeKind.ZodNever:\n            return parseNeverDef();\n        case ZodFirstPartyTypeKind.ZodEffects:\n            return parseEffectsDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodAny:\n            return parseAnyDef();\n        case ZodFirstPartyTypeKind.ZodUnknown:\n            return parseUnknownDef();\n        case ZodFirstPartyTypeKind.ZodDefault:\n            return parseDefaultDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBranded:\n            return parseBrandedDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodReadonly:\n            return parseReadonlyDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodCatch:\n            return parseCatchDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodPipeline:\n            return parsePipelineDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodFunction:\n        case ZodFirstPartyTypeKind.ZodVoid:\n        case ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            /* c8 ignore next */\n            return ((_) => undefined)(typeName);\n    }\n};\n","import { ignoreOverride } from \"./Options.js\";\nimport { selectParser } from \"./selectParser.js\";\nexport function parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchemaOrGetter = selectParser(def, def.typeName, refs);\n    // If the return was a function, then the inner definition needs to be extracted before a call to parseDef (recursive)\n    const jsonSchema = typeof jsonSchemaOrGetter === \"function\"\n        ? parseDef(jsonSchemaOrGetter(), refs)\n        : jsonSchemaOrGetter;\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    if (refs.postProcess) {\n        const postProcessResult = refs.postProcess(jsonSchema, def, refs);\n        newItem.jsonSchema = jsonSchema;\n        return postProcessResult;\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case \"root\":\n            return { $ref: item.path.join(\"/\") };\n        case \"relative\":\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case \"none\":\n        case \"seen\": {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\n                return {};\n            }\n            return refs.$refStrategy === \"seen\" ? {} : undefined;\n        }\n    }\n};\nconst getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n","import { parseDef } from \"./parseDef.js\";\nimport { getRefs } from \"./Refs.js\";\nconst zodToJsonSchema = (schema, options) => {\n    const refs = getRefs(options);\n    const definitions = typeof options === \"object\" && options.definitions\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => ({\n            ...acc,\n            [name]: parseDef(schema._def, {\n                ...refs,\n                currentPath: [...refs.basePath, refs.definitionPath, name],\n            }, true) ?? {},\n        }), {})\n        : undefined;\n    const name = typeof options === \"string\"\n        ? options\n        : options?.nameStrategy === \"title\"\n            ? undefined\n            : options?.name;\n    const main = parseDef(schema._def, name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n        }, false) ?? {};\n    const title = typeof options === \"object\" &&\n        options.name !== undefined &&\n        options.nameStrategy === \"title\"\n        ? options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    const combined = name === undefined\n        ? definitions\n            ? {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : {\n            $ref: [\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\n                refs.definitionPath,\n                name,\n            ].join(\"/\"),\n            [refs.definitionPath]: {\n                ...definitions,\n                [name]: main,\n            },\n        };\n    if (refs.target === \"jsonSchema7\") {\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n    }\n    else if (refs.target === \"jsonSchema2019-09\" || refs.target === \"openAi\") {\n        combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n    }\n    if (refs.target === \"openAi\" &&\n        (\"anyOf\" in combined ||\n            \"oneOf\" in combined ||\n            \"allOf\" in combined ||\n            (\"type\" in combined && Array.isArray(combined.type)))) {\n        console.warn(\"Warning: OpenAI may not support schemas with unions as roots! Try wrapping it in an object property.\");\n    }\n    return combined;\n};\nexport { zodToJsonSchema };\n","export * from \"./Options.js\";\nexport * from \"./Refs.js\";\nexport * from \"./errorMessages.js\";\nexport * from \"./parseDef.js\";\nexport * from \"./parseTypes.js\";\nexport * from \"./parsers/any.js\";\nexport * from \"./parsers/array.js\";\nexport * from \"./parsers/bigint.js\";\nexport * from \"./parsers/boolean.js\";\nexport * from \"./parsers/branded.js\";\nexport * from \"./parsers/catch.js\";\nexport * from \"./parsers/date.js\";\nexport * from \"./parsers/default.js\";\nexport * from \"./parsers/effects.js\";\nexport * from \"./parsers/enum.js\";\nexport * from \"./parsers/intersection.js\";\nexport * from \"./parsers/literal.js\";\nexport * from \"./parsers/map.js\";\nexport * from \"./parsers/nativeEnum.js\";\nexport * from \"./parsers/never.js\";\nexport * from \"./parsers/null.js\";\nexport * from \"./parsers/nullable.js\";\nexport * from \"./parsers/number.js\";\nexport * from \"./parsers/object.js\";\nexport * from \"./parsers/optional.js\";\nexport * from \"./parsers/pipeline.js\";\nexport * from \"./parsers/promise.js\";\nexport * from \"./parsers/readonly.js\";\nexport * from \"./parsers/record.js\";\nexport * from \"./parsers/set.js\";\nexport * from \"./parsers/string.js\";\nexport * from \"./parsers/tuple.js\";\nexport * from \"./parsers/undefined.js\";\nexport * from \"./parsers/union.js\";\nexport * from \"./parsers/unknown.js\";\nexport * from \"./selectParser.js\";\nexport * from \"./zodToJsonSchema.js\";\nimport { zodToJsonSchema } from \"./zodToJsonSchema.js\";\nexport default zodToJsonSchema;\n","// src/index.ts\nimport { generateId } from \"@ai-sdk/provider-utils\";\n\n// src/process-data-protocol-response.ts\nimport { generateId as generateIdFunction } from \"@ai-sdk/provider-utils\";\n\n// src/parse-partial-json.ts\nimport SecureJSON from \"secure-json-parse\";\n\n// src/fix-json.ts\nfunction fixJson(input) {\n  const stack = [\"ROOT\"];\n  let lastValidIndex = -1;\n  let literalStart = null;\n  function processValueStart(char, i, swapState) {\n    {\n      switch (char) {\n        case '\"': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push(\"INSIDE_STRING\");\n          break;\n        }\n        case \"f\":\n        case \"t\":\n        case \"n\": {\n          lastValidIndex = i;\n          literalStart = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push(\"INSIDE_LITERAL\");\n          break;\n        }\n        case \"-\": {\n          stack.pop();\n          stack.push(swapState);\n          stack.push(\"INSIDE_NUMBER\");\n          break;\n        }\n        case \"0\":\n        case \"1\":\n        case \"2\":\n        case \"3\":\n        case \"4\":\n        case \"5\":\n        case \"6\":\n        case \"7\":\n        case \"8\":\n        case \"9\": {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push(\"INSIDE_NUMBER\");\n          break;\n        }\n        case \"{\": {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push(\"INSIDE_OBJECT_START\");\n          break;\n        }\n        case \"[\": {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push(\"INSIDE_ARRAY_START\");\n          break;\n        }\n      }\n    }\n  }\n  function processAfterObjectValue(char, i) {\n    switch (char) {\n      case \",\": {\n        stack.pop();\n        stack.push(\"INSIDE_OBJECT_AFTER_COMMA\");\n        break;\n      }\n      case \"}\": {\n        lastValidIndex = i;\n        stack.pop();\n        break;\n      }\n    }\n  }\n  function processAfterArrayValue(char, i) {\n    switch (char) {\n      case \",\": {\n        stack.pop();\n        stack.push(\"INSIDE_ARRAY_AFTER_COMMA\");\n        break;\n      }\n      case \"]\": {\n        lastValidIndex = i;\n        stack.pop();\n        break;\n      }\n    }\n  }\n  for (let i = 0; i < input.length; i++) {\n    const char = input[i];\n    const currentState = stack[stack.length - 1];\n    switch (currentState) {\n      case \"ROOT\":\n        processValueStart(char, i, \"FINISH\");\n        break;\n      case \"INSIDE_OBJECT_START\": {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push(\"INSIDE_OBJECT_KEY\");\n            break;\n          }\n          case \"}\": {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_OBJECT_AFTER_COMMA\": {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push(\"INSIDE_OBJECT_KEY\");\n            break;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_OBJECT_KEY\": {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push(\"INSIDE_OBJECT_AFTER_KEY\");\n            break;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_OBJECT_AFTER_KEY\": {\n        switch (char) {\n          case \":\": {\n            stack.pop();\n            stack.push(\"INSIDE_OBJECT_BEFORE_VALUE\");\n            break;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_OBJECT_BEFORE_VALUE\": {\n        processValueStart(char, i, \"INSIDE_OBJECT_AFTER_VALUE\");\n        break;\n      }\n      case \"INSIDE_OBJECT_AFTER_VALUE\": {\n        processAfterObjectValue(char, i);\n        break;\n      }\n      case \"INSIDE_STRING\": {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            lastValidIndex = i;\n            break;\n          }\n          case \"\\\\\": {\n            stack.push(\"INSIDE_STRING_ESCAPE\");\n            break;\n          }\n          default: {\n            lastValidIndex = i;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_ARRAY_START\": {\n        switch (char) {\n          case \"]\": {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n          default: {\n            lastValidIndex = i;\n            processValueStart(char, i, \"INSIDE_ARRAY_AFTER_VALUE\");\n            break;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_ARRAY_AFTER_VALUE\": {\n        switch (char) {\n          case \",\": {\n            stack.pop();\n            stack.push(\"INSIDE_ARRAY_AFTER_COMMA\");\n            break;\n          }\n          case \"]\": {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n          default: {\n            lastValidIndex = i;\n            break;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_ARRAY_AFTER_COMMA\": {\n        processValueStart(char, i, \"INSIDE_ARRAY_AFTER_VALUE\");\n        break;\n      }\n      case \"INSIDE_STRING_ESCAPE\": {\n        stack.pop();\n        lastValidIndex = i;\n        break;\n      }\n      case \"INSIDE_NUMBER\": {\n        switch (char) {\n          case \"0\":\n          case \"1\":\n          case \"2\":\n          case \"3\":\n          case \"4\":\n          case \"5\":\n          case \"6\":\n          case \"7\":\n          case \"8\":\n          case \"9\": {\n            lastValidIndex = i;\n            break;\n          }\n          case \"e\":\n          case \"E\":\n          case \"-\":\n          case \".\": {\n            break;\n          }\n          case \",\": {\n            stack.pop();\n            if (stack[stack.length - 1] === \"INSIDE_ARRAY_AFTER_VALUE\") {\n              processAfterArrayValue(char, i);\n            }\n            if (stack[stack.length - 1] === \"INSIDE_OBJECT_AFTER_VALUE\") {\n              processAfterObjectValue(char, i);\n            }\n            break;\n          }\n          case \"}\": {\n            stack.pop();\n            if (stack[stack.length - 1] === \"INSIDE_OBJECT_AFTER_VALUE\") {\n              processAfterObjectValue(char, i);\n            }\n            break;\n          }\n          case \"]\": {\n            stack.pop();\n            if (stack[stack.length - 1] === \"INSIDE_ARRAY_AFTER_VALUE\") {\n              processAfterArrayValue(char, i);\n            }\n            break;\n          }\n          default: {\n            stack.pop();\n            break;\n          }\n        }\n        break;\n      }\n      case \"INSIDE_LITERAL\": {\n        const partialLiteral = input.substring(literalStart, i + 1);\n        if (!\"false\".startsWith(partialLiteral) && !\"true\".startsWith(partialLiteral) && !\"null\".startsWith(partialLiteral)) {\n          stack.pop();\n          if (stack[stack.length - 1] === \"INSIDE_OBJECT_AFTER_VALUE\") {\n            processAfterObjectValue(char, i);\n          } else if (stack[stack.length - 1] === \"INSIDE_ARRAY_AFTER_VALUE\") {\n            processAfterArrayValue(char, i);\n          }\n        } else {\n          lastValidIndex = i;\n        }\n        break;\n      }\n    }\n  }\n  let result = input.slice(0, lastValidIndex + 1);\n  for (let i = stack.length - 1; i >= 0; i--) {\n    const state = stack[i];\n    switch (state) {\n      case \"INSIDE_STRING\": {\n        result += '\"';\n        break;\n      }\n      case \"INSIDE_OBJECT_KEY\":\n      case \"INSIDE_OBJECT_AFTER_KEY\":\n      case \"INSIDE_OBJECT_AFTER_COMMA\":\n      case \"INSIDE_OBJECT_START\":\n      case \"INSIDE_OBJECT_BEFORE_VALUE\":\n      case \"INSIDE_OBJECT_AFTER_VALUE\": {\n        result += \"}\";\n        break;\n      }\n      case \"INSIDE_ARRAY_START\":\n      case \"INSIDE_ARRAY_AFTER_COMMA\":\n      case \"INSIDE_ARRAY_AFTER_VALUE\": {\n        result += \"]\";\n        break;\n      }\n      case \"INSIDE_LITERAL\": {\n        const partialLiteral = input.substring(literalStart, input.length);\n        if (\"true\".startsWith(partialLiteral)) {\n          result += \"true\".slice(partialLiteral.length);\n        } else if (\"false\".startsWith(partialLiteral)) {\n          result += \"false\".slice(partialLiteral.length);\n        } else if (\"null\".startsWith(partialLiteral)) {\n          result += \"null\".slice(partialLiteral.length);\n        }\n      }\n    }\n  }\n  return result;\n}\n\n// src/parse-partial-json.ts\nfunction parsePartialJson(jsonText) {\n  if (jsonText === void 0) {\n    return { value: void 0, state: \"undefined-input\" };\n  }\n  try {\n    return {\n      value: SecureJSON.parse(jsonText),\n      state: \"successful-parse\"\n    };\n  } catch (ignored) {\n    try {\n      return {\n        value: SecureJSON.parse(fixJson(jsonText)),\n        state: \"repaired-parse\"\n      };\n    } catch (ignored2) {\n    }\n  }\n  return { value: void 0, state: \"failed-parse\" };\n}\n\n// src/stream-parts.ts\nvar textStreamPart = {\n  code: \"0\",\n  name: \"text\",\n  parse: (value) => {\n    if (typeof value !== \"string\") {\n      throw new Error('\"text\" parts expect a string value.');\n    }\n    return { type: \"text\", value };\n  }\n};\nvar functionCallStreamPart = {\n  code: \"1\",\n  name: \"function_call\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"function_call\" in value) || typeof value.function_call !== \"object\" || value.function_call == null || !(\"name\" in value.function_call) || !(\"arguments\" in value.function_call) || typeof value.function_call.name !== \"string\" || typeof value.function_call.arguments !== \"string\") {\n      throw new Error(\n        '\"function_call\" parts expect an object with a \"function_call\" property.'\n      );\n    }\n    return {\n      type: \"function_call\",\n      value\n    };\n  }\n};\nvar dataStreamPart = {\n  code: \"2\",\n  name: \"data\",\n  parse: (value) => {\n    if (!Array.isArray(value)) {\n      throw new Error('\"data\" parts expect an array value.');\n    }\n    return { type: \"data\", value };\n  }\n};\nvar errorStreamPart = {\n  code: \"3\",\n  name: \"error\",\n  parse: (value) => {\n    if (typeof value !== \"string\") {\n      throw new Error('\"error\" parts expect a string value.');\n    }\n    return { type: \"error\", value };\n  }\n};\nvar assistantMessageStreamPart = {\n  code: \"4\",\n  name: \"assistant_message\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"id\" in value) || !(\"role\" in value) || !(\"content\" in value) || typeof value.id !== \"string\" || typeof value.role !== \"string\" || value.role !== \"assistant\" || !Array.isArray(value.content) || !value.content.every(\n      (item) => item != null && typeof item === \"object\" && \"type\" in item && item.type === \"text\" && \"text\" in item && item.text != null && typeof item.text === \"object\" && \"value\" in item.text && typeof item.text.value === \"string\"\n    )) {\n      throw new Error(\n        '\"assistant_message\" parts expect an object with an \"id\", \"role\", and \"content\" property.'\n      );\n    }\n    return {\n      type: \"assistant_message\",\n      value\n    };\n  }\n};\nvar assistantControlDataStreamPart = {\n  code: \"5\",\n  name: \"assistant_control_data\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"threadId\" in value) || !(\"messageId\" in value) || typeof value.threadId !== \"string\" || typeof value.messageId !== \"string\") {\n      throw new Error(\n        '\"assistant_control_data\" parts expect an object with a \"threadId\" and \"messageId\" property.'\n      );\n    }\n    return {\n      type: \"assistant_control_data\",\n      value: {\n        threadId: value.threadId,\n        messageId: value.messageId\n      }\n    };\n  }\n};\nvar dataMessageStreamPart = {\n  code: \"6\",\n  name: \"data_message\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"role\" in value) || !(\"data\" in value) || typeof value.role !== \"string\" || value.role !== \"data\") {\n      throw new Error(\n        '\"data_message\" parts expect an object with a \"role\" and \"data\" property.'\n      );\n    }\n    return {\n      type: \"data_message\",\n      value\n    };\n  }\n};\nvar toolCallsStreamPart = {\n  code: \"7\",\n  name: \"tool_calls\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"tool_calls\" in value) || typeof value.tool_calls !== \"object\" || value.tool_calls == null || !Array.isArray(value.tool_calls) || value.tool_calls.some(\n      (tc) => tc == null || typeof tc !== \"object\" || !(\"id\" in tc) || typeof tc.id !== \"string\" || !(\"type\" in tc) || typeof tc.type !== \"string\" || !(\"function\" in tc) || tc.function == null || typeof tc.function !== \"object\" || !(\"arguments\" in tc.function) || typeof tc.function.name !== \"string\" || typeof tc.function.arguments !== \"string\"\n    )) {\n      throw new Error(\n        '\"tool_calls\" parts expect an object with a ToolCallPayload.'\n      );\n    }\n    return {\n      type: \"tool_calls\",\n      value\n    };\n  }\n};\nvar messageAnnotationsStreamPart = {\n  code: \"8\",\n  name: \"message_annotations\",\n  parse: (value) => {\n    if (!Array.isArray(value)) {\n      throw new Error('\"message_annotations\" parts expect an array value.');\n    }\n    return { type: \"message_annotations\", value };\n  }\n};\nvar toolCallStreamPart = {\n  code: \"9\",\n  name: \"tool_call\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"toolCallId\" in value) || typeof value.toolCallId !== \"string\" || !(\"toolName\" in value) || typeof value.toolName !== \"string\" || !(\"args\" in value) || typeof value.args !== \"object\") {\n      throw new Error(\n        '\"tool_call\" parts expect an object with a \"toolCallId\", \"toolName\", and \"args\" property.'\n      );\n    }\n    return {\n      type: \"tool_call\",\n      value\n    };\n  }\n};\nvar toolResultStreamPart = {\n  code: \"a\",\n  name: \"tool_result\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"toolCallId\" in value) || typeof value.toolCallId !== \"string\" || !(\"result\" in value)) {\n      throw new Error(\n        '\"tool_result\" parts expect an object with a \"toolCallId\" and a \"result\" property.'\n      );\n    }\n    return {\n      type: \"tool_result\",\n      value\n    };\n  }\n};\nvar toolCallStreamingStartStreamPart = {\n  code: \"b\",\n  name: \"tool_call_streaming_start\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"toolCallId\" in value) || typeof value.toolCallId !== \"string\" || !(\"toolName\" in value) || typeof value.toolName !== \"string\") {\n      throw new Error(\n        '\"tool_call_streaming_start\" parts expect an object with a \"toolCallId\" and \"toolName\" property.'\n      );\n    }\n    return {\n      type: \"tool_call_streaming_start\",\n      value\n    };\n  }\n};\nvar toolCallDeltaStreamPart = {\n  code: \"c\",\n  name: \"tool_call_delta\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"toolCallId\" in value) || typeof value.toolCallId !== \"string\" || !(\"argsTextDelta\" in value) || typeof value.argsTextDelta !== \"string\") {\n      throw new Error(\n        '\"tool_call_delta\" parts expect an object with a \"toolCallId\" and \"argsTextDelta\" property.'\n      );\n    }\n    return {\n      type: \"tool_call_delta\",\n      value\n    };\n  }\n};\nvar finishMessageStreamPart = {\n  code: \"d\",\n  name: \"finish_message\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"finishReason\" in value) || typeof value.finishReason !== \"string\") {\n      throw new Error(\n        '\"finish_message\" parts expect an object with a \"finishReason\" property.'\n      );\n    }\n    const result = {\n      finishReason: value.finishReason\n    };\n    if (\"usage\" in value && value.usage != null && typeof value.usage === \"object\" && \"promptTokens\" in value.usage && \"completionTokens\" in value.usage) {\n      result.usage = {\n        promptTokens: typeof value.usage.promptTokens === \"number\" ? value.usage.promptTokens : Number.NaN,\n        completionTokens: typeof value.usage.completionTokens === \"number\" ? value.usage.completionTokens : Number.NaN\n      };\n    }\n    return {\n      type: \"finish_message\",\n      value: result\n    };\n  }\n};\nvar finishStepStreamPart = {\n  code: \"e\",\n  name: \"finish_step\",\n  parse: (value) => {\n    if (value == null || typeof value !== \"object\" || !(\"finishReason\" in value) || typeof value.finishReason !== \"string\") {\n      throw new Error(\n        '\"finish_step\" parts expect an object with a \"finishReason\" property.'\n      );\n    }\n    const result = {\n      finishReason: value.finishReason,\n      isContinued: false\n    };\n    if (\"usage\" in value && value.usage != null && typeof value.usage === \"object\" && \"promptTokens\" in value.usage && \"completionTokens\" in value.usage) {\n      result.usage = {\n        promptTokens: typeof value.usage.promptTokens === \"number\" ? value.usage.promptTokens : Number.NaN,\n        completionTokens: typeof value.usage.completionTokens === \"number\" ? value.usage.completionTokens : Number.NaN\n      };\n    }\n    if (\"isContinued\" in value && typeof value.isContinued === \"boolean\") {\n      result.isContinued = value.isContinued;\n    }\n    return {\n      type: \"finish_step\",\n      value: result\n    };\n  }\n};\nvar streamParts = [\n  textStreamPart,\n  functionCallStreamPart,\n  dataStreamPart,\n  errorStreamPart,\n  assistantMessageStreamPart,\n  assistantControlDataStreamPart,\n  dataMessageStreamPart,\n  toolCallsStreamPart,\n  messageAnnotationsStreamPart,\n  toolCallStreamPart,\n  toolResultStreamPart,\n  toolCallStreamingStartStreamPart,\n  toolCallDeltaStreamPart,\n  finishMessageStreamPart,\n  finishStepStreamPart\n];\nvar streamPartsByCode = {\n  [textStreamPart.code]: textStreamPart,\n  [functionCallStreamPart.code]: functionCallStreamPart,\n  [dataStreamPart.code]: dataStreamPart,\n  [errorStreamPart.code]: errorStreamPart,\n  [assistantMessageStreamPart.code]: assistantMessageStreamPart,\n  [assistantControlDataStreamPart.code]: assistantControlDataStreamPart,\n  [dataMessageStreamPart.code]: dataMessageStreamPart,\n  [toolCallsStreamPart.code]: toolCallsStreamPart,\n  [messageAnnotationsStreamPart.code]: messageAnnotationsStreamPart,\n  [toolCallStreamPart.code]: toolCallStreamPart,\n  [toolResultStreamPart.code]: toolResultStreamPart,\n  [toolCallStreamingStartStreamPart.code]: toolCallStreamingStartStreamPart,\n  [toolCallDeltaStreamPart.code]: toolCallDeltaStreamPart,\n  [finishMessageStreamPart.code]: finishMessageStreamPart,\n  [finishStepStreamPart.code]: finishStepStreamPart\n};\nvar StreamStringPrefixes = {\n  [textStreamPart.name]: textStreamPart.code,\n  [functionCallStreamPart.name]: functionCallStreamPart.code,\n  [dataStreamPart.name]: dataStreamPart.code,\n  [errorStreamPart.name]: errorStreamPart.code,\n  [assistantMessageStreamPart.name]: assistantMessageStreamPart.code,\n  [assistantControlDataStreamPart.name]: assistantControlDataStreamPart.code,\n  [dataMessageStreamPart.name]: dataMessageStreamPart.code,\n  [toolCallsStreamPart.name]: toolCallsStreamPart.code,\n  [messageAnnotationsStreamPart.name]: messageAnnotationsStreamPart.code,\n  [toolCallStreamPart.name]: toolCallStreamPart.code,\n  [toolResultStreamPart.name]: toolResultStreamPart.code,\n  [toolCallStreamingStartStreamPart.name]: toolCallStreamingStartStreamPart.code,\n  [toolCallDeltaStreamPart.name]: toolCallDeltaStreamPart.code,\n  [finishMessageStreamPart.name]: finishMessageStreamPart.code,\n  [finishStepStreamPart.name]: finishStepStreamPart.code\n};\nvar validCodes = streamParts.map((part) => part.code);\nvar parseStreamPart = (line) => {\n  const firstSeparatorIndex = line.indexOf(\":\");\n  if (firstSeparatorIndex === -1) {\n    throw new Error(\"Failed to parse stream string. No separator found.\");\n  }\n  const prefix = line.slice(0, firstSeparatorIndex);\n  if (!validCodes.includes(prefix)) {\n    throw new Error(`Failed to parse stream string. Invalid code ${prefix}.`);\n  }\n  const code = prefix;\n  const textValue = line.slice(firstSeparatorIndex + 1);\n  const jsonValue = JSON.parse(textValue);\n  return streamPartsByCode[code].parse(jsonValue);\n};\nfunction formatStreamPart(type, value) {\n  const streamPart = streamParts.find((part) => part.name === type);\n  if (!streamPart) {\n    throw new Error(`Invalid stream part type: ${type}`);\n  }\n  return `${streamPart.code}:${JSON.stringify(value)}\n`;\n}\n\n// src/read-data-stream.ts\nvar NEWLINE = \"\\n\".charCodeAt(0);\nfunction concatChunks(chunks, totalLength) {\n  const concatenatedChunks = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const chunk of chunks) {\n    concatenatedChunks.set(chunk, offset);\n    offset += chunk.length;\n  }\n  chunks.length = 0;\n  return concatenatedChunks;\n}\nasync function* readDataStream(reader, {\n  isAborted\n} = {}) {\n  const decoder = new TextDecoder();\n  const chunks = [];\n  let totalLength = 0;\n  while (true) {\n    const { value } = await reader.read();\n    if (value) {\n      chunks.push(value);\n      totalLength += value.length;\n      if (value[value.length - 1] !== NEWLINE) {\n        continue;\n      }\n    }\n    if (chunks.length === 0) {\n      break;\n    }\n    const concatenatedChunks = concatChunks(chunks, totalLength);\n    totalLength = 0;\n    const streamParts2 = decoder.decode(concatenatedChunks, { stream: true }).split(\"\\n\").filter((line) => line !== \"\").map(parseStreamPart);\n    for (const streamPart of streamParts2) {\n      yield streamPart;\n    }\n    if (isAborted == null ? void 0 : isAborted()) {\n      reader.cancel();\n      break;\n    }\n  }\n}\n\n// src/process-data-protocol-response.ts\nfunction assignAnnotationsToMessage(message, annotations) {\n  if (!message || !annotations || !annotations.length)\n    return message;\n  return { ...message, annotations: [...annotations] };\n}\nasync function processDataProtocolResponse({\n  reader,\n  abortControllerRef,\n  update,\n  onToolCall,\n  onFinish,\n  generateId: generateId2 = generateIdFunction,\n  getCurrentDate = () => /* @__PURE__ */ new Date()\n}) {\n  var _a;\n  const createdAt = getCurrentDate();\n  let prefixMap = {};\n  let nextPrefixMap = void 0;\n  const previousMessages = [];\n  const data = [];\n  let messageAnnotations = void 0;\n  const partialToolCalls = {};\n  let usage = {\n    completionTokens: NaN,\n    promptTokens: NaN,\n    totalTokens: NaN\n  };\n  let finishReason = \"unknown\";\n  for await (const { type, value } of readDataStream(reader, {\n    isAborted: () => (abortControllerRef == null ? void 0 : abortControllerRef.current) === null\n  })) {\n    if (type === \"error\") {\n      throw new Error(value);\n    }\n    if (type === \"finish_step\") {\n      if (!value.isContinued) {\n        nextPrefixMap = {};\n      }\n      continue;\n    }\n    if (type === \"finish_message\") {\n      finishReason = value.finishReason;\n      if (value.usage != null) {\n        const { completionTokens, promptTokens } = value.usage;\n        usage = {\n          completionTokens,\n          promptTokens,\n          totalTokens: completionTokens + promptTokens\n        };\n      }\n      continue;\n    }\n    if (nextPrefixMap != null && (type === \"text\" || type === \"tool_call\" || type === \"tool_call_streaming_start\" || type === \"tool_call_delta\" || type === \"tool_result\")) {\n      if (prefixMap.text) {\n        previousMessages.push(prefixMap.text);\n      }\n      if (prefixMap.function_call) {\n        previousMessages.push(prefixMap.function_call);\n      }\n      if (prefixMap.tool_calls) {\n        previousMessages.push(prefixMap.tool_calls);\n      }\n      prefixMap = nextPrefixMap;\n      nextPrefixMap = void 0;\n    }\n    if (type === \"text\") {\n      if (prefixMap[\"text\"]) {\n        prefixMap[\"text\"] = {\n          ...prefixMap[\"text\"],\n          content: (prefixMap[\"text\"].content || \"\") + value\n        };\n      } else {\n        prefixMap[\"text\"] = {\n          id: generateId2(),\n          role: \"assistant\",\n          content: value,\n          createdAt\n        };\n      }\n    }\n    if (type === \"tool_call_streaming_start\") {\n      if (prefixMap.text == null) {\n        prefixMap.text = {\n          id: generateId2(),\n          role: \"assistant\",\n          content: \"\",\n          createdAt\n        };\n      }\n      if (prefixMap.text.toolInvocations == null) {\n        prefixMap.text.toolInvocations = [];\n      }\n      partialToolCalls[value.toolCallId] = {\n        text: \"\",\n        toolName: value.toolName,\n        prefixMapIndex: prefixMap.text.toolInvocations.length\n      };\n      prefixMap.text.toolInvocations.push({\n        state: \"partial-call\",\n        toolCallId: value.toolCallId,\n        toolName: value.toolName,\n        args: void 0\n      });\n    } else if (type === \"tool_call_delta\") {\n      const partialToolCall = partialToolCalls[value.toolCallId];\n      partialToolCall.text += value.argsTextDelta;\n      const { value: partialArgs } = parsePartialJson(partialToolCall.text);\n      prefixMap.text.toolInvocations[partialToolCall.prefixMapIndex] = {\n        state: \"partial-call\",\n        toolCallId: value.toolCallId,\n        toolName: partialToolCall.toolName,\n        args: partialArgs\n      };\n      prefixMap.text.internalUpdateId = generateId2();\n    } else if (type === \"tool_call\") {\n      if (partialToolCalls[value.toolCallId] != null) {\n        prefixMap.text.toolInvocations[partialToolCalls[value.toolCallId].prefixMapIndex] = { state: \"call\", ...value };\n      } else {\n        if (prefixMap.text == null) {\n          prefixMap.text = {\n            id: generateId2(),\n            role: \"assistant\",\n            content: \"\",\n            createdAt\n          };\n        }\n        if (prefixMap.text.toolInvocations == null) {\n          prefixMap.text.toolInvocations = [];\n        }\n        prefixMap.text.toolInvocations.push({\n          state: \"call\",\n          ...value\n        });\n      }\n      prefixMap.text.internalUpdateId = generateId2();\n      if (onToolCall) {\n        const result = await onToolCall({ toolCall: value });\n        if (result != null) {\n          prefixMap.text.toolInvocations[prefixMap.text.toolInvocations.length - 1] = { state: \"result\", ...value, result };\n        }\n      }\n    } else if (type === \"tool_result\") {\n      const toolInvocations = (_a = prefixMap.text) == null ? void 0 : _a.toolInvocations;\n      if (toolInvocations == null) {\n        throw new Error(\"tool_result must be preceded by a tool_call\");\n      }\n      const toolInvocationIndex = toolInvocations.findIndex(\n        (invocation) => invocation.toolCallId === value.toolCallId\n      );\n      if (toolInvocationIndex === -1) {\n        throw new Error(\n          \"tool_result must be preceded by a tool_call with the same toolCallId\"\n        );\n      }\n      toolInvocations[toolInvocationIndex] = {\n        ...toolInvocations[toolInvocationIndex],\n        state: \"result\",\n        ...value\n      };\n    }\n    let functionCallMessage = null;\n    if (type === \"function_call\") {\n      prefixMap[\"function_call\"] = {\n        id: generateId2(),\n        role: \"assistant\",\n        content: \"\",\n        function_call: value.function_call,\n        name: value.function_call.name,\n        createdAt\n      };\n      functionCallMessage = prefixMap[\"function_call\"];\n    }\n    let toolCallMessage = null;\n    if (type === \"tool_calls\") {\n      prefixMap[\"tool_calls\"] = {\n        id: generateId2(),\n        role: \"assistant\",\n        content: \"\",\n        tool_calls: value.tool_calls,\n        createdAt\n      };\n      toolCallMessage = prefixMap[\"tool_calls\"];\n    }\n    if (type === \"data\") {\n      data.push(...value);\n    }\n    let responseMessage = prefixMap[\"text\"];\n    if (type === \"message_annotations\") {\n      if (!messageAnnotations) {\n        messageAnnotations = [...value];\n      } else {\n        messageAnnotations.push(...value);\n      }\n      functionCallMessage = assignAnnotationsToMessage(\n        prefixMap[\"function_call\"],\n        messageAnnotations\n      );\n      toolCallMessage = assignAnnotationsToMessage(\n        prefixMap[\"tool_calls\"],\n        messageAnnotations\n      );\n      responseMessage = assignAnnotationsToMessage(\n        prefixMap[\"text\"],\n        messageAnnotations\n      );\n      if (prefixMap.text != null) {\n        prefixMap.text.internalUpdateId = generateId2();\n      }\n    }\n    if (messageAnnotations == null ? void 0 : messageAnnotations.length) {\n      if (prefixMap.text) {\n        prefixMap.text.annotations = [...messageAnnotations];\n      }\n      if (prefixMap.function_call) {\n        prefixMap.function_call.annotations = [...messageAnnotations];\n      }\n      if (prefixMap.tool_calls) {\n        prefixMap.tool_calls.annotations = [...messageAnnotations];\n      }\n    }\n    const merged = [functionCallMessage, toolCallMessage, responseMessage].filter(Boolean).map((message) => ({\n      ...assignAnnotationsToMessage(message, messageAnnotations)\n    }));\n    update([...previousMessages, ...merged], [...data]);\n  }\n  onFinish == null ? void 0 : onFinish({ message: prefixMap.text, finishReason, usage });\n  return {\n    messages: [\n      prefixMap.text,\n      prefixMap.function_call,\n      prefixMap.tool_calls\n    ].filter(Boolean),\n    data\n  };\n}\n\n// src/call-chat-api.ts\nvar getOriginalFetch = () => fetch;\nasync function callChatApi({\n  api,\n  body,\n  streamProtocol = \"data\",\n  credentials,\n  headers,\n  abortController,\n  restoreMessagesOnFailure,\n  onResponse,\n  onUpdate,\n  onFinish,\n  onToolCall,\n  generateId: generateId2,\n  fetch: fetch2 = getOriginalFetch()\n}) {\n  var _a, _b;\n  const response = await fetch2(api, {\n    method: \"POST\",\n    body: JSON.stringify(body),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...headers\n    },\n    signal: (_a = abortController == null ? void 0 : abortController()) == null ? void 0 : _a.signal,\n    credentials\n  }).catch((err) => {\n    restoreMessagesOnFailure();\n    throw err;\n  });\n  if (onResponse) {\n    try {\n      await onResponse(response);\n    } catch (err) {\n      throw err;\n    }\n  }\n  if (!response.ok) {\n    restoreMessagesOnFailure();\n    throw new Error(\n      (_b = await response.text()) != null ? _b : \"Failed to fetch the chat response.\"\n    );\n  }\n  if (!response.body) {\n    throw new Error(\"The response body is empty.\");\n  }\n  const reader = response.body.getReader();\n  switch (streamProtocol) {\n    case \"text\": {\n      const decoder = createChunkDecoder();\n      const resultMessage = {\n        id: generateId2(),\n        createdAt: /* @__PURE__ */ new Date(),\n        role: \"assistant\",\n        content: \"\"\n      };\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n          break;\n        }\n        resultMessage.content += decoder(value);\n        onUpdate([{ ...resultMessage }], []);\n        if ((abortController == null ? void 0 : abortController()) === null) {\n          reader.cancel();\n          break;\n        }\n      }\n      onFinish == null ? void 0 : onFinish(resultMessage, {\n        usage: { completionTokens: NaN, promptTokens: NaN, totalTokens: NaN },\n        finishReason: \"unknown\"\n      });\n      return {\n        messages: [resultMessage],\n        data: []\n      };\n    }\n    case \"data\": {\n      return await processDataProtocolResponse({\n        reader,\n        abortControllerRef: abortController != null ? { current: abortController() } : void 0,\n        update: onUpdate,\n        onToolCall,\n        onFinish({ message, finishReason, usage }) {\n          if (onFinish && message != null) {\n            onFinish(message, { usage, finishReason });\n          }\n        },\n        generateId: generateId2\n      });\n    }\n    default: {\n      const exhaustiveCheck = streamProtocol;\n      throw new Error(`Unknown stream protocol: ${exhaustiveCheck}`);\n    }\n  }\n}\n\n// src/call-completion-api.ts\nvar getOriginalFetch2 = () => fetch;\nasync function callCompletionApi({\n  api,\n  prompt,\n  credentials,\n  headers,\n  body,\n  streamProtocol = \"data\",\n  setCompletion,\n  setLoading,\n  setError,\n  setAbortController,\n  onResponse,\n  onFinish,\n  onError,\n  onData,\n  fetch: fetch2 = getOriginalFetch2()\n}) {\n  try {\n    setLoading(true);\n    setError(void 0);\n    const abortController = new AbortController();\n    setAbortController(abortController);\n    setCompletion(\"\");\n    const res = await fetch2(api, {\n      method: \"POST\",\n      body: JSON.stringify({\n        prompt,\n        ...body\n      }),\n      credentials,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...headers\n      },\n      signal: abortController.signal\n    }).catch((err) => {\n      throw err;\n    });\n    if (onResponse) {\n      try {\n        await onResponse(res);\n      } catch (err) {\n        throw err;\n      }\n    }\n    if (!res.ok) {\n      throw new Error(\n        await res.text() || \"Failed to fetch the chat response.\"\n      );\n    }\n    if (!res.body) {\n      throw new Error(\"The response body is empty.\");\n    }\n    let result = \"\";\n    const reader = res.body.getReader();\n    switch (streamProtocol) {\n      case \"text\": {\n        const decoder = createChunkDecoder();\n        while (true) {\n          const { done, value } = await reader.read();\n          if (done) {\n            break;\n          }\n          result += decoder(value);\n          setCompletion(result);\n          if (abortController === null) {\n            reader.cancel();\n            break;\n          }\n        }\n        break;\n      }\n      case \"data\": {\n        for await (const { type, value } of readDataStream(reader, {\n          isAborted: () => abortController === null\n        })) {\n          switch (type) {\n            case \"text\": {\n              result += value;\n              setCompletion(result);\n              break;\n            }\n            case \"data\": {\n              onData == null ? void 0 : onData(value);\n              break;\n            }\n          }\n        }\n        break;\n      }\n      default: {\n        const exhaustiveCheck = streamProtocol;\n        throw new Error(`Unknown stream protocol: ${exhaustiveCheck}`);\n      }\n    }\n    if (onFinish) {\n      onFinish(prompt, result);\n    }\n    setAbortController(null);\n    return result;\n  } catch (err) {\n    if (err.name === \"AbortError\") {\n      setAbortController(null);\n      return null;\n    }\n    if (err instanceof Error) {\n      if (onError) {\n        onError(err);\n      }\n    }\n    setError(err);\n  } finally {\n    setLoading(false);\n  }\n}\n\n// src/create-chunk-decoder.ts\nfunction createChunkDecoder(complex) {\n  const decoder = new TextDecoder();\n  if (!complex) {\n    return function(chunk) {\n      if (!chunk)\n        return \"\";\n      return decoder.decode(chunk, { stream: true });\n    };\n  }\n  return function(chunk) {\n    const decoded = decoder.decode(chunk, { stream: true }).split(\"\\n\").filter((line) => line !== \"\");\n    return decoded.map(parseStreamPart).filter(Boolean);\n  };\n}\n\n// src/data-url.ts\nfunction getTextFromDataUrl(dataUrl) {\n  const [header, base64Content] = dataUrl.split(\",\");\n  const mimeType = header.split(\";\")[0].split(\":\")[1];\n  if (mimeType == null || base64Content == null) {\n    throw new Error(\"Invalid data URL format\");\n  }\n  try {\n    return window.atob(base64Content);\n  } catch (error) {\n    throw new Error(`Error decoding data URL`);\n  }\n}\n\n// src/is-deep-equal-data.ts\nfunction isDeepEqualData(obj1, obj2) {\n  if (obj1 === obj2)\n    return true;\n  if (obj1 == null || obj2 == null)\n    return false;\n  if (typeof obj1 !== \"object\" && typeof obj2 !== \"object\")\n    return obj1 === obj2;\n  if (obj1.constructor !== obj2.constructor)\n    return false;\n  if (obj1 instanceof Date && obj2 instanceof Date) {\n    return obj1.getTime() === obj2.getTime();\n  }\n  if (Array.isArray(obj1)) {\n    if (obj1.length !== obj2.length)\n      return false;\n    for (let i = 0; i < obj1.length; i++) {\n      if (!isDeepEqualData(obj1[i], obj2[i]))\n        return false;\n    }\n    return true;\n  }\n  const keys1 = Object.keys(obj1);\n  const keys2 = Object.keys(obj2);\n  if (keys1.length !== keys2.length)\n    return false;\n  for (const key of keys1) {\n    if (!keys2.includes(key))\n      return false;\n    if (!isDeepEqualData(obj1[key], obj2[key]))\n      return false;\n  }\n  return true;\n}\n\n// src/process-chat-stream.ts\nasync function processChatStream({\n  getStreamedResponse,\n  experimental_onFunctionCall,\n  experimental_onToolCall,\n  updateChatRequest,\n  getCurrentMessages\n}) {\n  while (true) {\n    const messagesAndDataOrJustMessage = await getStreamedResponse();\n    if (\"messages\" in messagesAndDataOrJustMessage) {\n      let hasFollowingResponse = false;\n      for (const message of messagesAndDataOrJustMessage.messages) {\n        if ((message.function_call === void 0 || typeof message.function_call === \"string\") && (message.tool_calls === void 0 || typeof message.tool_calls === \"string\")) {\n          continue;\n        }\n        hasFollowingResponse = true;\n        if (experimental_onFunctionCall) {\n          const functionCall = message.function_call;\n          if (typeof functionCall !== \"object\") {\n            console.warn(\n              \"experimental_onFunctionCall should not be defined when using tools\"\n            );\n            continue;\n          }\n          const functionCallResponse = await experimental_onFunctionCall(\n            getCurrentMessages(),\n            functionCall\n          );\n          if (functionCallResponse === void 0) {\n            hasFollowingResponse = false;\n            break;\n          }\n          updateChatRequest(functionCallResponse);\n        }\n        if (experimental_onToolCall) {\n          const toolCalls = message.tool_calls;\n          if (!Array.isArray(toolCalls) || toolCalls.some((toolCall) => typeof toolCall !== \"object\")) {\n            console.warn(\n              \"experimental_onToolCall should not be defined when using tools\"\n            );\n            continue;\n          }\n          const toolCallResponse = await experimental_onToolCall(getCurrentMessages(), toolCalls);\n          if (toolCallResponse === void 0) {\n            hasFollowingResponse = false;\n            break;\n          }\n          updateChatRequest(toolCallResponse);\n        }\n      }\n      if (!hasFollowingResponse) {\n        break;\n      }\n    } else {\n      let fixFunctionCallArguments2 = function(response) {\n        for (const message of response.messages) {\n          if (message.tool_calls !== void 0) {\n            for (const toolCall of message.tool_calls) {\n              if (typeof toolCall === \"object\") {\n                if (toolCall.function.arguments && typeof toolCall.function.arguments !== \"string\") {\n                  toolCall.function.arguments = JSON.stringify(\n                    toolCall.function.arguments\n                  );\n                }\n              }\n            }\n          }\n          if (message.function_call !== void 0) {\n            if (typeof message.function_call === \"object\") {\n              if (message.function_call.arguments && typeof message.function_call.arguments !== \"string\") {\n                message.function_call.arguments = JSON.stringify(\n                  message.function_call.arguments\n                );\n              }\n            }\n          }\n        }\n      };\n      var fixFunctionCallArguments = fixFunctionCallArguments2;\n      const streamedResponseMessage = messagesAndDataOrJustMessage;\n      if ((streamedResponseMessage.function_call === void 0 || typeof streamedResponseMessage.function_call === \"string\") && (streamedResponseMessage.tool_calls === void 0 || typeof streamedResponseMessage.tool_calls === \"string\")) {\n        break;\n      }\n      if (experimental_onFunctionCall) {\n        const functionCall = streamedResponseMessage.function_call;\n        if (!(typeof functionCall === \"object\")) {\n          console.warn(\n            \"experimental_onFunctionCall should not be defined when using tools\"\n          );\n          continue;\n        }\n        const functionCallResponse = await experimental_onFunctionCall(getCurrentMessages(), functionCall);\n        if (functionCallResponse === void 0)\n          break;\n        fixFunctionCallArguments2(functionCallResponse);\n        updateChatRequest(functionCallResponse);\n      }\n      if (experimental_onToolCall) {\n        const toolCalls = streamedResponseMessage.tool_calls;\n        if (!(typeof toolCalls === \"object\")) {\n          console.warn(\n            \"experimental_onToolCall should not be defined when using functions\"\n          );\n          continue;\n        }\n        const toolCallResponse = await experimental_onToolCall(getCurrentMessages(), toolCalls);\n        if (toolCallResponse === void 0)\n          break;\n        fixFunctionCallArguments2(toolCallResponse);\n        updateChatRequest(toolCallResponse);\n      }\n    }\n  }\n}\n\n// src/schema.ts\nimport { validatorSymbol } from \"@ai-sdk/provider-utils\";\nimport zodToJsonSchema from \"zod-to-json-schema\";\nvar schemaSymbol = Symbol.for(\"vercel.ai.schema\");\nfunction jsonSchema(jsonSchema2, {\n  validate\n} = {}) {\n  return {\n    [schemaSymbol]: true,\n    _type: void 0,\n    // should never be used directly\n    [validatorSymbol]: true,\n    jsonSchema: jsonSchema2,\n    validate\n  };\n}\nfunction isSchema(value) {\n  return typeof value === \"object\" && value !== null && schemaSymbol in value && value[schemaSymbol] === true && \"jsonSchema\" in value && \"validate\" in value;\n}\nfunction asSchema(schema) {\n  return isSchema(schema) ? schema : zodSchema(schema);\n}\nfunction zodSchema(zodSchema2) {\n  return jsonSchema(\n    // we assume that zodToJsonSchema will return a valid JSONSchema7:\n    zodToJsonSchema(zodSchema2),\n    {\n      validate: (value) => {\n        const result = zodSchema2.safeParse(value);\n        return result.success ? { success: true, value: result.data } : { success: false, error: result.error };\n      }\n    }\n  );\n}\nexport {\n  asSchema,\n  callChatApi,\n  callCompletionApi,\n  createChunkDecoder,\n  formatStreamPart,\n  generateId,\n  getTextFromDataUrl,\n  isDeepEqualData,\n  jsonSchema,\n  parsePartialJson,\n  parseStreamPart,\n  processChatStream,\n  processDataProtocolResponse,\n  readDataStream,\n  zodSchema\n};\n//# sourceMappingURL=index.mjs.map","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name11 in all)\n    __defProp(target, name11, { get: all[name11], enumerable: true });\n};\n\n// streams/index.ts\nimport {\n  formatStreamPart,\n  parseStreamPart,\n  readDataStream,\n  processDataProtocolResponse\n} from \"@ai-sdk/ui-utils\";\nimport { generateId as generateIdImpl } from \"@ai-sdk/provider-utils\";\n\n// core/index.ts\nimport { jsonSchema } from \"@ai-sdk/ui-utils\";\n\n// util/retry-with-exponential-backoff.ts\nimport { APICallError } from \"@ai-sdk/provider\";\nimport { getErrorMessage, isAbortError } from \"@ai-sdk/provider-utils\";\n\n// util/delay.ts\nasync function delay(delayInMs) {\n  return delayInMs === void 0 ? Promise.resolve() : new Promise((resolve) => setTimeout(resolve, delayInMs));\n}\n\n// util/retry-error.ts\nimport { AISDKError } from \"@ai-sdk/provider\";\nvar name = \"AI_RetryError\";\nvar marker = `vercel.ai.error.${name}`;\nvar symbol = Symbol.for(marker);\nvar _a;\nvar RetryError = class extends AISDKError {\n  constructor({\n    message,\n    reason,\n    errors\n  }) {\n    super({ name, message });\n    this[_a] = true;\n    this.reason = reason;\n    this.errors = errors;\n    this.lastError = errors[errors.length - 1];\n  }\n  static isInstance(error) {\n    return AISDKError.hasMarker(error, marker);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isRetryError(error) {\n    return error instanceof Error && error.name === name && typeof error.reason === \"string\" && Array.isArray(error.errors);\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      reason: this.reason,\n      lastError: this.lastError,\n      errors: this.errors\n    };\n  }\n};\n_a = symbol;\n\n// util/retry-with-exponential-backoff.ts\nvar retryWithExponentialBackoff = ({\n  maxRetries = 2,\n  initialDelayInMs = 2e3,\n  backoffFactor = 2\n} = {}) => async (f) => _retryWithExponentialBackoff(f, {\n  maxRetries,\n  delayInMs: initialDelayInMs,\n  backoffFactor\n});\nasync function _retryWithExponentialBackoff(f, {\n  maxRetries,\n  delayInMs,\n  backoffFactor\n}, errors = []) {\n  try {\n    return await f();\n  } catch (error) {\n    if (isAbortError(error)) {\n      throw error;\n    }\n    if (maxRetries === 0) {\n      throw error;\n    }\n    const errorMessage = getErrorMessage(error);\n    const newErrors = [...errors, error];\n    const tryNumber = newErrors.length;\n    if (tryNumber > maxRetries) {\n      throw new RetryError({\n        message: `Failed after ${tryNumber} attempts. Last error: ${errorMessage}`,\n        reason: \"maxRetriesExceeded\",\n        errors: newErrors\n      });\n    }\n    if (error instanceof Error && APICallError.isAPICallError(error) && error.isRetryable === true && tryNumber <= maxRetries) {\n      await delay(delayInMs);\n      return _retryWithExponentialBackoff(\n        f,\n        { maxRetries, delayInMs: backoffFactor * delayInMs, backoffFactor },\n        newErrors\n      );\n    }\n    if (tryNumber === 1) {\n      throw error;\n    }\n    throw new RetryError({\n      message: `Failed after ${tryNumber} attempts with non-retryable error: '${errorMessage}'`,\n      reason: \"errorNotRetryable\",\n      errors: newErrors\n    });\n  }\n}\n\n// core/telemetry/assemble-operation-name.ts\nfunction assembleOperationName({\n  operationId,\n  telemetry\n}) {\n  return {\n    // standardized operation and resource name:\n    \"operation.name\": `${operationId}${(telemetry == null ? void 0 : telemetry.functionId) != null ? ` ${telemetry.functionId}` : \"\"}`,\n    \"resource.name\": telemetry == null ? void 0 : telemetry.functionId,\n    // detailed, AI SDK specific data:\n    \"ai.operationId\": operationId,\n    \"ai.telemetry.functionId\": telemetry == null ? void 0 : telemetry.functionId\n  };\n}\n\n// core/telemetry/get-base-telemetry-attributes.ts\nfunction getBaseTelemetryAttributes({\n  model,\n  settings,\n  telemetry,\n  headers\n}) {\n  var _a11;\n  return {\n    \"ai.model.provider\": model.provider,\n    \"ai.model.id\": model.modelId,\n    // settings:\n    ...Object.entries(settings).reduce((attributes, [key, value]) => {\n      attributes[`ai.settings.${key}`] = value;\n      return attributes;\n    }, {}),\n    // add metadata as attributes:\n    ...Object.entries((_a11 = telemetry == null ? void 0 : telemetry.metadata) != null ? _a11 : {}).reduce(\n      (attributes, [key, value]) => {\n        attributes[`ai.telemetry.metadata.${key}`] = value;\n        return attributes;\n      },\n      {}\n    ),\n    // request headers\n    ...Object.entries(headers != null ? headers : {}).reduce((attributes, [key, value]) => {\n      if (value !== void 0) {\n        attributes[`ai.request.headers.${key}`] = value;\n      }\n      return attributes;\n    }, {})\n  };\n}\n\n// core/telemetry/get-tracer.ts\nimport { trace } from \"@opentelemetry/api\";\n\n// core/telemetry/noop-tracer.ts\nvar noopTracer = {\n  startSpan() {\n    return noopSpan;\n  },\n  startActiveSpan(name11, arg1, arg2, arg3) {\n    if (typeof arg1 === \"function\") {\n      return arg1(noopSpan);\n    }\n    if (typeof arg2 === \"function\") {\n      return arg2(noopSpan);\n    }\n    if (typeof arg3 === \"function\") {\n      return arg3(noopSpan);\n    }\n  }\n};\nvar noopSpan = {\n  spanContext() {\n    return noopSpanContext;\n  },\n  setAttribute() {\n    return this;\n  },\n  setAttributes() {\n    return this;\n  },\n  addEvent() {\n    return this;\n  },\n  addLink() {\n    return this;\n  },\n  addLinks() {\n    return this;\n  },\n  setStatus() {\n    return this;\n  },\n  updateName() {\n    return this;\n  },\n  end() {\n    return this;\n  },\n  isRecording() {\n    return false;\n  },\n  recordException() {\n    return this;\n  }\n};\nvar noopSpanContext = {\n  traceId: \"\",\n  spanId: \"\",\n  traceFlags: 0\n};\n\n// core/telemetry/get-tracer.ts\nfunction getTracer({\n  isEnabled = false,\n  tracer\n} = {}) {\n  if (!isEnabled) {\n    return noopTracer;\n  }\n  if (tracer) {\n    return tracer;\n  }\n  return trace.getTracer(\"ai\");\n}\n\n// core/telemetry/record-span.ts\nimport { SpanStatusCode } from \"@opentelemetry/api\";\nfunction recordSpan({\n  name: name11,\n  tracer,\n  attributes,\n  fn,\n  endWhenDone = true\n}) {\n  return tracer.startActiveSpan(name11, { attributes }, async (span) => {\n    try {\n      const result = await fn(span);\n      if (endWhenDone) {\n        span.end();\n      }\n      return result;\n    } catch (error) {\n      try {\n        if (error instanceof Error) {\n          span.recordException({\n            name: error.name,\n            message: error.message,\n            stack: error.stack\n          });\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error.message\n          });\n        } else {\n          span.setStatus({ code: SpanStatusCode.ERROR });\n        }\n      } finally {\n        span.end();\n      }\n      throw error;\n    }\n  });\n}\n\n// core/telemetry/select-telemetry-attributes.ts\nfunction selectTelemetryAttributes({\n  telemetry,\n  attributes\n}) {\n  if ((telemetry == null ? void 0 : telemetry.isEnabled) !== true) {\n    return {};\n  }\n  return Object.entries(attributes).reduce((attributes2, [key, value]) => {\n    if (value === void 0) {\n      return attributes2;\n    }\n    if (typeof value === \"object\" && \"input\" in value && typeof value.input === \"function\") {\n      if ((telemetry == null ? void 0 : telemetry.recordInputs) === false) {\n        return attributes2;\n      }\n      const result = value.input();\n      return result === void 0 ? attributes2 : { ...attributes2, [key]: result };\n    }\n    if (typeof value === \"object\" && \"output\" in value && typeof value.output === \"function\") {\n      if ((telemetry == null ? void 0 : telemetry.recordOutputs) === false) {\n        return attributes2;\n      }\n      const result = value.output();\n      return result === void 0 ? attributes2 : { ...attributes2, [key]: result };\n    }\n    return { ...attributes2, [key]: value };\n  }, {});\n}\n\n// core/embed/embed.ts\nasync function embed({\n  model,\n  value,\n  maxRetries,\n  abortSignal,\n  headers,\n  experimental_telemetry: telemetry\n}) {\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { maxRetries }\n  });\n  const tracer = getTracer(telemetry);\n  return recordSpan({\n    name: \"ai.embed\",\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({ operationId: \"ai.embed\", telemetry }),\n        ...baseTelemetryAttributes,\n        \"ai.value\": { input: () => JSON.stringify(value) }\n      }\n    }),\n    tracer,\n    fn: async (span) => {\n      const retry = retryWithExponentialBackoff({ maxRetries });\n      const { embedding, usage, rawResponse } = await retry(\n        () => (\n          // nested spans to align with the embedMany telemetry data:\n          recordSpan({\n            name: \"ai.embed.doEmbed\",\n            attributes: selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                ...assembleOperationName({\n                  operationId: \"ai.embed.doEmbed\",\n                  telemetry\n                }),\n                ...baseTelemetryAttributes,\n                // specific settings that only make sense on the outer level:\n                \"ai.values\": { input: () => [JSON.stringify(value)] }\n              }\n            }),\n            tracer,\n            fn: async (doEmbedSpan) => {\n              var _a11;\n              const modelResponse = await model.doEmbed({\n                values: [value],\n                abortSignal,\n                headers\n              });\n              const embedding2 = modelResponse.embeddings[0];\n              const usage2 = (_a11 = modelResponse.usage) != null ? _a11 : { tokens: NaN };\n              doEmbedSpan.setAttributes(\n                selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    \"ai.embeddings\": {\n                      output: () => modelResponse.embeddings.map(\n                        (embedding3) => JSON.stringify(embedding3)\n                      )\n                    },\n                    \"ai.usage.tokens\": usage2.tokens\n                  }\n                })\n              );\n              return {\n                embedding: embedding2,\n                usage: usage2,\n                rawResponse: modelResponse.rawResponse\n              };\n            }\n          })\n        )\n      );\n      span.setAttributes(\n        selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            \"ai.embedding\": { output: () => JSON.stringify(embedding) },\n            \"ai.usage.tokens\": usage.tokens\n          }\n        })\n      );\n      return new DefaultEmbedResult({ value, embedding, usage, rawResponse });\n    }\n  });\n}\nvar DefaultEmbedResult = class {\n  constructor(options) {\n    this.value = options.value;\n    this.embedding = options.embedding;\n    this.usage = options.usage;\n    this.rawResponse = options.rawResponse;\n  }\n};\n\n// core/util/split-array.ts\nfunction splitArray(array, chunkSize) {\n  if (chunkSize <= 0) {\n    throw new Error(\"chunkSize must be greater than 0\");\n  }\n  const result = [];\n  for (let i = 0; i < array.length; i += chunkSize) {\n    result.push(array.slice(i, i + chunkSize));\n  }\n  return result;\n}\n\n// core/embed/embed-many.ts\nasync function embedMany({\n  model,\n  values,\n  maxRetries,\n  abortSignal,\n  headers,\n  experimental_telemetry: telemetry\n}) {\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { maxRetries }\n  });\n  const tracer = getTracer(telemetry);\n  return recordSpan({\n    name: \"ai.embedMany\",\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({ operationId: \"ai.embedMany\", telemetry }),\n        ...baseTelemetryAttributes,\n        // specific settings that only make sense on the outer level:\n        \"ai.values\": {\n          input: () => values.map((value) => JSON.stringify(value))\n        }\n      }\n    }),\n    tracer,\n    fn: async (span) => {\n      const retry = retryWithExponentialBackoff({ maxRetries });\n      const maxEmbeddingsPerCall = model.maxEmbeddingsPerCall;\n      if (maxEmbeddingsPerCall == null) {\n        const { embeddings: embeddings2, usage } = await retry(() => {\n          return recordSpan({\n            name: \"ai.embedMany.doEmbed\",\n            attributes: selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                ...assembleOperationName({\n                  operationId: \"ai.embedMany.doEmbed\",\n                  telemetry\n                }),\n                ...baseTelemetryAttributes,\n                // specific settings that only make sense on the outer level:\n                \"ai.values\": {\n                  input: () => values.map((value) => JSON.stringify(value))\n                }\n              }\n            }),\n            tracer,\n            fn: async (doEmbedSpan) => {\n              var _a11;\n              const modelResponse = await model.doEmbed({\n                values,\n                abortSignal,\n                headers\n              });\n              const embeddings3 = modelResponse.embeddings;\n              const usage2 = (_a11 = modelResponse.usage) != null ? _a11 : { tokens: NaN };\n              doEmbedSpan.setAttributes(\n                selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    \"ai.embeddings\": {\n                      output: () => embeddings3.map((embedding) => JSON.stringify(embedding))\n                    },\n                    \"ai.usage.tokens\": usage2.tokens\n                  }\n                })\n              );\n              return { embeddings: embeddings3, usage: usage2 };\n            }\n          });\n        });\n        span.setAttributes(\n          selectTelemetryAttributes({\n            telemetry,\n            attributes: {\n              \"ai.embeddings\": {\n                output: () => embeddings2.map((embedding) => JSON.stringify(embedding))\n              },\n              \"ai.usage.tokens\": usage.tokens\n            }\n          })\n        );\n        return new DefaultEmbedManyResult({ values, embeddings: embeddings2, usage });\n      }\n      const valueChunks = splitArray(values, maxEmbeddingsPerCall);\n      const embeddings = [];\n      let tokens = 0;\n      for (const chunk of valueChunks) {\n        const { embeddings: responseEmbeddings, usage } = await retry(() => {\n          return recordSpan({\n            name: \"ai.embedMany.doEmbed\",\n            attributes: selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                ...assembleOperationName({\n                  operationId: \"ai.embedMany.doEmbed\",\n                  telemetry\n                }),\n                ...baseTelemetryAttributes,\n                // specific settings that only make sense on the outer level:\n                \"ai.values\": {\n                  input: () => chunk.map((value) => JSON.stringify(value))\n                }\n              }\n            }),\n            tracer,\n            fn: async (doEmbedSpan) => {\n              var _a11;\n              const modelResponse = await model.doEmbed({\n                values: chunk,\n                abortSignal,\n                headers\n              });\n              const embeddings2 = modelResponse.embeddings;\n              const usage2 = (_a11 = modelResponse.usage) != null ? _a11 : { tokens: NaN };\n              doEmbedSpan.setAttributes(\n                selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    \"ai.embeddings\": {\n                      output: () => embeddings2.map((embedding) => JSON.stringify(embedding))\n                    },\n                    \"ai.usage.tokens\": usage2.tokens\n                  }\n                })\n              );\n              return { embeddings: embeddings2, usage: usage2 };\n            }\n          });\n        });\n        embeddings.push(...responseEmbeddings);\n        tokens += usage.tokens;\n      }\n      span.setAttributes(\n        selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            \"ai.embeddings\": {\n              output: () => embeddings.map((embedding) => JSON.stringify(embedding))\n            },\n            \"ai.usage.tokens\": tokens\n          }\n        })\n      );\n      return new DefaultEmbedManyResult({\n        values,\n        embeddings,\n        usage: { tokens }\n      });\n    }\n  });\n}\nvar DefaultEmbedManyResult = class {\n  constructor(options) {\n    this.values = options.values;\n    this.embeddings = options.embeddings;\n    this.usage = options.usage;\n  }\n};\n\n// core/generate-object/generate-object.ts\nimport { createIdGenerator, safeParseJSON } from \"@ai-sdk/provider-utils\";\n\n// util/download-error.ts\nimport { AISDKError as AISDKError2 } from \"@ai-sdk/provider\";\nvar name2 = \"AI_DownloadError\";\nvar marker2 = `vercel.ai.error.${name2}`;\nvar symbol2 = Symbol.for(marker2);\nvar _a2;\nvar DownloadError = class extends AISDKError2 {\n  constructor({\n    url,\n    statusCode,\n    statusText,\n    cause,\n    message = cause == null ? `Failed to download ${url}: ${statusCode} ${statusText}` : `Failed to download ${url}: ${cause}`\n  }) {\n    super({ name: name2, message, cause });\n    this[_a2] = true;\n    this.url = url;\n    this.statusCode = statusCode;\n    this.statusText = statusText;\n  }\n  static isInstance(error) {\n    return AISDKError2.hasMarker(error, marker2);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isDownloadError(error) {\n    return error instanceof Error && error.name === name2 && typeof error.url === \"string\" && (error.statusCode == null || typeof error.statusCode === \"number\") && (error.statusText == null || typeof error.statusText === \"string\");\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      url: this.url,\n      statusCode: this.statusCode,\n      statusText: this.statusText,\n      cause: this.cause\n    };\n  }\n};\n_a2 = symbol2;\n\n// util/download.ts\nasync function download({\n  url,\n  fetchImplementation = fetch\n}) {\n  var _a11;\n  const urlText = url.toString();\n  try {\n    const response = await fetchImplementation(urlText);\n    if (!response.ok) {\n      throw new DownloadError({\n        url: urlText,\n        statusCode: response.status,\n        statusText: response.statusText\n      });\n    }\n    return {\n      data: new Uint8Array(await response.arrayBuffer()),\n      mimeType: (_a11 = response.headers.get(\"content-type\")) != null ? _a11 : void 0\n    };\n  } catch (error) {\n    if (DownloadError.isInstance(error)) {\n      throw error;\n    }\n    throw new DownloadError({ url: urlText, cause: error });\n  }\n}\n\n// core/util/detect-image-mimetype.ts\nvar mimeTypeSignatures = [\n  { mimeType: \"image/gif\", bytes: [71, 73, 70] },\n  { mimeType: \"image/png\", bytes: [137, 80, 78, 71] },\n  { mimeType: \"image/jpeg\", bytes: [255, 216] },\n  { mimeType: \"image/webp\", bytes: [82, 73, 70, 70] }\n];\nfunction detectImageMimeType(image) {\n  for (const { bytes, mimeType } of mimeTypeSignatures) {\n    if (image.length >= bytes.length && bytes.every((byte, index) => image[index] === byte)) {\n      return mimeType;\n    }\n  }\n  return void 0;\n}\n\n// core/prompt/data-content.ts\nimport {\n  convertBase64ToUint8Array,\n  convertUint8ArrayToBase64\n} from \"@ai-sdk/provider-utils\";\n\n// core/prompt/invalid-data-content-error.ts\nimport { AISDKError as AISDKError3 } from \"@ai-sdk/provider\";\nvar name3 = \"AI_InvalidDataContentError\";\nvar marker3 = `vercel.ai.error.${name3}`;\nvar symbol3 = Symbol.for(marker3);\nvar _a3;\nvar InvalidDataContentError = class extends AISDKError3 {\n  constructor({\n    content,\n    cause,\n    message = `Invalid data content. Expected a base64 string, Uint8Array, ArrayBuffer, or Buffer, but got ${typeof content}.`\n  }) {\n    super({ name: name3, message, cause });\n    this[_a3] = true;\n    this.content = content;\n  }\n  static isInstance(error) {\n    return AISDKError3.hasMarker(error, marker3);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isInvalidDataContentError(error) {\n    return error instanceof Error && error.name === name3 && error.content != null;\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      cause: this.cause,\n      content: this.content\n    };\n  }\n};\n_a3 = symbol3;\n\n// core/prompt/data-content.ts\nimport { z } from \"zod\";\nvar dataContentSchema = z.union([\n  z.string(),\n  z.instanceof(Uint8Array),\n  z.instanceof(ArrayBuffer),\n  z.custom(\n    // Buffer might not be available in some environments such as CloudFlare:\n    (value) => {\n      var _a11, _b;\n      return (_b = (_a11 = globalThis.Buffer) == null ? void 0 : _a11.isBuffer(value)) != null ? _b : false;\n    },\n    { message: \"Must be a Buffer\" }\n  )\n]);\nfunction convertDataContentToBase64String(content) {\n  if (typeof content === \"string\") {\n    return content;\n  }\n  if (content instanceof ArrayBuffer) {\n    return convertUint8ArrayToBase64(new Uint8Array(content));\n  }\n  return convertUint8ArrayToBase64(content);\n}\nfunction convertDataContentToUint8Array(content) {\n  if (content instanceof Uint8Array) {\n    return content;\n  }\n  if (typeof content === \"string\") {\n    try {\n      return convertBase64ToUint8Array(content);\n    } catch (error) {\n      throw new InvalidDataContentError({\n        message: \"Invalid data content. Content string is not a base64-encoded media.\",\n        content,\n        cause: error\n      });\n    }\n  }\n  if (content instanceof ArrayBuffer) {\n    return new Uint8Array(content);\n  }\n  throw new InvalidDataContentError({ content });\n}\nfunction convertUint8ArrayToText(uint8Array) {\n  try {\n    return new TextDecoder().decode(uint8Array);\n  } catch (error) {\n    throw new Error(\"Error decoding Uint8Array to text\");\n  }\n}\n\n// core/prompt/invalid-message-role-error.ts\nimport { AISDKError as AISDKError4 } from \"@ai-sdk/provider\";\nvar name4 = \"AI_InvalidMessageRoleError\";\nvar marker4 = `vercel.ai.error.${name4}`;\nvar symbol4 = Symbol.for(marker4);\nvar _a4;\nvar InvalidMessageRoleError = class extends AISDKError4 {\n  constructor({\n    role,\n    message = `Invalid message role: '${role}'. Must be one of: \"system\", \"user\", \"assistant\", \"tool\".`\n  }) {\n    super({ name: name4, message });\n    this[_a4] = true;\n    this.role = role;\n  }\n  static isInstance(error) {\n    return AISDKError4.hasMarker(error, marker4);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isInvalidMessageRoleError(error) {\n    return error instanceof Error && error.name === name4 && typeof error.role === \"string\";\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      role: this.role\n    };\n  }\n};\n_a4 = symbol4;\n\n// core/prompt/split-data-url.ts\nfunction splitDataUrl(dataUrl) {\n  try {\n    const [header, base64Content] = dataUrl.split(\",\");\n    return {\n      mimeType: header.split(\";\")[0].split(\":\")[1],\n      base64Content\n    };\n  } catch (error) {\n    return {\n      mimeType: void 0,\n      base64Content: void 0\n    };\n  }\n}\n\n// core/prompt/convert-to-language-model-prompt.ts\nasync function convertToLanguageModelPrompt({\n  prompt,\n  modelSupportsImageUrls = true,\n  modelSupportsUrl = () => false,\n  downloadImplementation = download\n}) {\n  const downloadedAssets = await downloadAssets(\n    prompt.messages,\n    downloadImplementation,\n    modelSupportsImageUrls,\n    modelSupportsUrl\n  );\n  return [\n    ...prompt.system != null ? [{ role: \"system\", content: prompt.system }] : [],\n    ...prompt.messages.map(\n      (message) => convertToLanguageModelMessage(message, downloadedAssets)\n    )\n  ];\n}\nfunction convertToLanguageModelMessage(message, downloadedAssets) {\n  const role = message.role;\n  switch (role) {\n    case \"system\": {\n      return {\n        role: \"system\",\n        content: message.content,\n        providerMetadata: message.experimental_providerMetadata\n      };\n    }\n    case \"user\": {\n      if (typeof message.content === \"string\") {\n        return {\n          role: \"user\",\n          content: [{ type: \"text\", text: message.content }],\n          providerMetadata: message.experimental_providerMetadata\n        };\n      }\n      return {\n        role: \"user\",\n        content: message.content.map((part) => convertPartToLanguageModelPart(part, downloadedAssets)).filter((part) => part.type !== \"text\" || part.text !== \"\"),\n        providerMetadata: message.experimental_providerMetadata\n      };\n    }\n    case \"assistant\": {\n      if (typeof message.content === \"string\") {\n        return {\n          role: \"assistant\",\n          content: [{ type: \"text\", text: message.content }],\n          providerMetadata: message.experimental_providerMetadata\n        };\n      }\n      return {\n        role: \"assistant\",\n        content: message.content.filter(\n          // remove empty text parts:\n          (part) => part.type !== \"text\" || part.text !== \"\"\n        ).map((part) => {\n          const { experimental_providerMetadata, ...rest } = part;\n          return {\n            ...rest,\n            providerMetadata: experimental_providerMetadata\n          };\n        }),\n        providerMetadata: message.experimental_providerMetadata\n      };\n    }\n    case \"tool\": {\n      return {\n        role: \"tool\",\n        content: message.content.map((part) => ({\n          type: \"tool-result\",\n          toolCallId: part.toolCallId,\n          toolName: part.toolName,\n          result: part.result,\n          content: part.experimental_content,\n          isError: part.isError,\n          providerMetadata: part.experimental_providerMetadata\n        })),\n        providerMetadata: message.experimental_providerMetadata\n      };\n    }\n    default: {\n      const _exhaustiveCheck = role;\n      throw new InvalidMessageRoleError({ role: _exhaustiveCheck });\n    }\n  }\n}\nasync function downloadAssets(messages, downloadImplementation, modelSupportsImageUrls, modelSupportsUrl) {\n  const urls = messages.filter((message) => message.role === \"user\").map((message) => message.content).filter(\n    (content) => Array.isArray(content)\n  ).flat().filter(\n    (part) => part.type === \"image\" || part.type === \"file\"\n  ).filter(\n    (part) => !(part.type === \"image\" && modelSupportsImageUrls === true)\n  ).map((part) => part.type === \"image\" ? part.image : part.data).map(\n    (part) => (\n      // support string urls:\n      typeof part === \"string\" && (part.startsWith(\"http:\") || part.startsWith(\"https:\")) ? new URL(part) : part\n    )\n  ).filter((image) => image instanceof URL).filter((url) => !modelSupportsUrl(url));\n  const downloadedImages = await Promise.all(\n    urls.map(async (url) => ({\n      url,\n      data: await downloadImplementation({ url })\n    }))\n  );\n  return Object.fromEntries(\n    downloadedImages.map(({ url, data }) => [url.toString(), data])\n  );\n}\nfunction convertPartToLanguageModelPart(part, downloadedAssets) {\n  if (part.type === \"text\") {\n    return {\n      type: \"text\",\n      text: part.text,\n      providerMetadata: part.experimental_providerMetadata\n    };\n  }\n  let mimeType = part.mimeType;\n  let data;\n  let content;\n  let normalizedData;\n  const type = part.type;\n  switch (type) {\n    case \"image\":\n      data = part.image;\n      break;\n    case \"file\":\n      data = part.data;\n      break;\n    default:\n      throw new Error(`Unsupported part type: ${type}`);\n  }\n  try {\n    content = typeof data === \"string\" ? new URL(data) : data;\n  } catch (error) {\n    content = data;\n  }\n  if (content instanceof URL) {\n    if (content.protocol === \"data:\") {\n      const { mimeType: dataUrlMimeType, base64Content } = splitDataUrl(\n        content.toString()\n      );\n      if (dataUrlMimeType == null || base64Content == null) {\n        throw new Error(`Invalid data URL format in part ${type}`);\n      }\n      mimeType = dataUrlMimeType;\n      normalizedData = convertDataContentToUint8Array(base64Content);\n    } else {\n      const downloadedFile = downloadedAssets[content.toString()];\n      if (downloadedFile) {\n        normalizedData = downloadedFile.data;\n        mimeType != null ? mimeType : mimeType = downloadedFile.mimeType;\n      } else {\n        normalizedData = content;\n      }\n    }\n  } else {\n    normalizedData = convertDataContentToUint8Array(content);\n  }\n  switch (type) {\n    case \"image\":\n      if (mimeType == null && normalizedData instanceof Uint8Array) {\n        mimeType = detectImageMimeType(normalizedData);\n      }\n      return {\n        type: \"image\",\n        image: normalizedData,\n        mimeType,\n        providerMetadata: part.experimental_providerMetadata\n      };\n    case \"file\":\n      if (mimeType == null) {\n        throw new Error(`Mime type is missing for file part`);\n      }\n      return {\n        type: \"file\",\n        data: normalizedData instanceof Uint8Array ? convertDataContentToBase64String(normalizedData) : normalizedData,\n        mimeType,\n        providerMetadata: part.experimental_providerMetadata\n      };\n  }\n}\n\n// errors/invalid-argument-error.ts\nimport { AISDKError as AISDKError5 } from \"@ai-sdk/provider\";\nvar name5 = \"AI_InvalidArgumentError\";\nvar marker5 = `vercel.ai.error.${name5}`;\nvar symbol5 = Symbol.for(marker5);\nvar _a5;\nvar InvalidArgumentError = class extends AISDKError5 {\n  constructor({\n    parameter,\n    value,\n    message\n  }) {\n    super({\n      name: name5,\n      message: `Invalid argument for parameter ${parameter}: ${message}`\n    });\n    this[_a5] = true;\n    this.parameter = parameter;\n    this.value = value;\n  }\n  static isInstance(error) {\n    return AISDKError5.hasMarker(error, marker5);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isInvalidArgumentError(error) {\n    return error instanceof Error && error.name === name5 && typeof error.parameter === \"string\" && typeof error.value === \"string\";\n  }\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      parameter: this.parameter,\n      value: this.value\n    };\n  }\n};\n_a5 = symbol5;\n\n// core/prompt/prepare-call-settings.ts\nfunction prepareCallSettings({\n  maxTokens,\n  temperature,\n  topP,\n  topK,\n  presencePenalty,\n  frequencyPenalty,\n  stopSequences,\n  seed,\n  maxRetries\n}) {\n  if (maxTokens != null) {\n    if (!Number.isInteger(maxTokens)) {\n      throw new InvalidArgumentError({\n        parameter: \"maxTokens\",\n        value: maxTokens,\n        message: \"maxTokens must be an integer\"\n      });\n    }\n    if (maxTokens < 1) {\n      throw new InvalidArgumentError({\n        parameter: \"maxTokens\",\n        value: maxTokens,\n        message: \"maxTokens must be >= 1\"\n      });\n    }\n  }\n  if (temperature != null) {\n    if (typeof temperature !== \"number\") {\n      throw new InvalidArgumentError({\n        parameter: \"temperature\",\n        value: temperature,\n        message: \"temperature must be a number\"\n      });\n    }\n  }\n  if (topP != null) {\n    if (typeof topP !== \"number\") {\n      throw new InvalidArgumentError({\n        parameter: \"topP\",\n        value: topP,\n        message: \"topP must be a number\"\n      });\n    }\n  }\n  if (topK != null) {\n    if (typeof topK !== \"number\") {\n      throw new InvalidArgumentError({\n        parameter: \"topK\",\n        value: topK,\n        message: \"topK must be a number\"\n      });\n    }\n  }\n  if (presencePenalty != null) {\n    if (typeof presencePenalty !== \"number\") {\n      throw new InvalidArgumentError({\n        parameter: \"presencePenalty\",\n        value: presencePenalty,\n        message: \"presencePenalty must be a number\"\n      });\n    }\n  }\n  if (frequencyPenalty != null) {\n    if (typeof frequencyPenalty !== \"number\") {\n      throw new InvalidArgumentError({\n        parameter: \"frequencyPenalty\",\n        value: frequencyPenalty,\n        message: \"frequencyPenalty must be a number\"\n      });\n    }\n  }\n  if (seed != null) {\n    if (!Number.isInteger(seed)) {\n      throw new InvalidArgumentError({\n        parameter: \"seed\",\n        value: seed,\n        message: \"seed must be an integer\"\n      });\n    }\n  }\n  if (maxRetries != null) {\n    if (!Number.isInteger(maxRetries)) {\n      throw new InvalidArgumentError({\n        parameter: \"maxRetries\",\n        value: maxRetries,\n        message: \"maxRetries must be an integer\"\n      });\n    }\n    if (maxRetries < 0) {\n      throw new InvalidArgumentError({\n        parameter: \"maxRetries\",\n        value: maxRetries,\n        message: \"maxRetries must be >= 0\"\n      });\n    }\n  }\n  return {\n    maxTokens,\n    temperature: temperature != null ? temperature : 0,\n    topP,\n    topK,\n    presencePenalty,\n    frequencyPenalty,\n    stopSequences: stopSequences != null && stopSequences.length > 0 ? stopSequences : void 0,\n    seed,\n    maxRetries: maxRetries != null ? maxRetries : 2\n  };\n}\n\n// core/prompt/standardize-prompt.ts\nimport { InvalidPromptError } from \"@ai-sdk/provider\";\nimport { safeValidateTypes } from \"@ai-sdk/provider-utils\";\nimport { z as z7 } from \"zod\";\n\n// core/prompt/message.ts\nimport { z as z6 } from \"zod\";\n\n// core/types/provider-metadata.ts\nimport { z as z3 } from \"zod\";\n\n// core/types/json-value.ts\nimport { z as z2 } from \"zod\";\nvar jsonValueSchema = z2.lazy(\n  () => z2.union([\n    z2.null(),\n    z2.string(),\n    z2.number(),\n    z2.boolean(),\n    z2.record(z2.string(), jsonValueSchema),\n    z2.array(jsonValueSchema)\n  ])\n);\n\n// core/types/provider-metadata.ts\nvar providerMetadataSchema = z3.record(\n  z3.string(),\n  z3.record(z3.string(), jsonValueSchema)\n);\n\n// core/prompt/content-part.ts\nimport { z as z5 } from \"zod\";\n\n// core/prompt/tool-result-content.ts\nimport { z as z4 } from \"zod\";\nvar toolResultContentSchema = z4.array(\n  z4.union([\n    z4.object({ type: z4.literal(\"text\"), text: z4.string() }),\n    z4.object({\n      type: z4.literal(\"image\"),\n      data: z4.string(),\n      mimeType: z4.string().optional()\n    })\n  ])\n);\n\n// core/prompt/content-part.ts\nvar textPartSchema = z5.object({\n  type: z5.literal(\"text\"),\n  text: z5.string(),\n  experimental_providerMetadata: providerMetadataSchema.optional()\n});\nvar imagePartSchema = z5.object({\n  type: z5.literal(\"image\"),\n  image: z5.union([dataContentSchema, z5.instanceof(URL)]),\n  mimeType: z5.string().optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional()\n});\nvar filePartSchema = z5.object({\n  type: z5.literal(\"file\"),\n  data: z5.union([dataContentSchema, z5.instanceof(URL)]),\n  mimeType: z5.string(),\n  experimental_providerMetadata: providerMetadataSchema.optional()\n});\nvar toolCallPartSchema = z5.object({\n  type: z5.literal(\"tool-call\"),\n  toolCallId: z5.string(),\n  toolName: z5.string(),\n  args: z5.unknown()\n});\nvar toolResultPartSchema = z5.object({\n  type: z5.literal(\"tool-result\"),\n  toolCallId: z5.string(),\n  toolName: z5.string(),\n  result: z5.unknown(),\n  content: toolResultContentSchema.optional(),\n  isError: z5.boolean().optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional()\n});\n\n// core/prompt/message.ts\nvar coreSystemMessageSchema = z6.object({\n  role: z6.literal(\"system\"),\n  content: z6.string(),\n  experimental_providerMetadata: providerMetadataSchema.optional()\n});\nvar coreUserMessageSchema = z6.object({\n  role: z6.literal(\"user\"),\n  content: z6.union([\n    z6.string(),\n    z6.array(z6.union([textPartSchema, imagePartSchema, filePartSchema]))\n  ]),\n  experimental_providerMetadata: providerMetadataSchema.optional()\n});\nvar coreAssistantMessageSchema = z6.object({\n  role: z6.literal(\"assistant\"),\n  content: z6.union([\n    z6.string(),\n    z6.array(z6.union([textPartSchema, toolCallPartSchema]))\n  ]),\n  experimental_providerMetadata: providerMetadataSchema.optional()\n});\nvar coreToolMessageSchema = z6.object({\n  role: z6.literal(\"tool\"),\n  content: z6.array(toolResultPartSchema),\n  experimental_providerMetadata: providerMetadataSchema.optional()\n});\nvar coreMessageSchema = z6.union([\n  coreSystemMessageSchema,\n  coreUserMessageSchema,\n  coreAssistantMessageSchema,\n  coreToolMessageSchema\n]);\n\n// core/prompt/detect-prompt-type.ts\nfunction detectPromptType(prompt) {\n  if (!Array.isArray(prompt)) {\n    return \"other\";\n  }\n  if (prompt.length === 0) {\n    return \"messages\";\n  }\n  const characteristics = prompt.map(detectSingleMessageCharacteristics);\n  if (characteristics.some((c) => c === \"has-ui-specific-parts\")) {\n    return \"ui-messages\";\n  } else if (characteristics.every(\n    (c) => c === \"has-core-specific-parts\" || c === \"message\"\n  )) {\n    return \"messages\";\n  } else {\n    return \"other\";\n  }\n}\nfunction detectSingleMessageCharacteristics(message) {\n  if (typeof message === \"object\" && message !== null && (message.role === \"function\" || // UI-only role\n  message.role === \"data\" || // UI-only role\n  \"toolInvocations\" in message || // UI-specific field\n  \"experimental_attachments\" in message)) {\n    return \"has-ui-specific-parts\";\n  } else if (typeof message === \"object\" && message !== null && \"content\" in message && (Array.isArray(message.content) || // Core messages can have array content\n  \"experimental_providerMetadata\" in message)) {\n    return \"has-core-specific-parts\";\n  } else if (typeof message === \"object\" && message !== null && \"role\" in message && \"content\" in message && typeof message.content === \"string\" && [\"system\", \"user\", \"assistant\", \"tool\"].includes(message.role)) {\n    return \"message\";\n  } else {\n    return \"other\";\n  }\n}\n\n// core/prompt/attachments-to-parts.ts\nfunction attachmentsToParts(attachments) {\n  var _a11, _b, _c;\n  const parts = [];\n  for (const attachment of attachments) {\n    let url;\n    try {\n      url = new URL(attachment.url);\n    } catch (error) {\n      throw new Error(`Invalid URL: ${attachment.url}`);\n    }\n    switch (url.protocol) {\n      case \"http:\":\n      case \"https:\": {\n        if ((_a11 = attachment.contentType) == null ? void 0 : _a11.startsWith(\"image/\")) {\n          parts.push({ type: \"image\", image: url });\n        } else {\n          if (!attachment.contentType) {\n            throw new Error(\n              \"If the attachment is not an image, it must specify a content type\"\n            );\n          }\n          parts.push({\n            type: \"file\",\n            data: url,\n            mimeType: attachment.contentType\n          });\n        }\n        break;\n      }\n      case \"data:\": {\n        let header;\n        let base64Content;\n        let mimeType;\n        try {\n          [header, base64Content] = attachment.url.split(\",\");\n          mimeType = header.split(\";\")[0].split(\":\")[1];\n        } catch (error) {\n          throw new Error(`Error processing data URL: ${attachment.url}`);\n        }\n        if (mimeType == null || base64Content == null) {\n          throw new Error(`Invalid data URL format: ${attachment.url}`);\n        }\n        if ((_b = attachment.contentType) == null ? void 0 : _b.startsWith(\"image/\")) {\n          parts.push({\n            type: \"image\",\n            image: convertDataContentToUint8Array(base64Content)\n          });\n        } else if ((_c = attachment.contentType) == null ? void 0 : _c.startsWith(\"text/\")) {\n          parts.push({\n            type: \"text\",\n            text: convertUint8ArrayToText(\n              convertDataContentToUint8Array(base64Content)\n            )\n          });\n        } else {\n          if (!attachment.contentType) {\n            throw new Error(\n              \"If the attachment is not an image or text, it must specify a content type\"\n            );\n          }\n          parts.push({\n            type: \"file\",\n            data: base64Content,\n            mimeType: attachment.contentType\n          });\n        }\n        break;\n      }\n      default: {\n        throw new Error(`Unsupported URL protocol: ${url.protocol}`);\n      }\n    }\n  }\n  return parts;\n}\n\n// core/prompt/message-conversion-error.ts\nimport { AISDKError as AISDKError6 } from \"@ai-sdk/provider\";\nvar name6 = \"AI_MessageConversionError\";\nvar marker6 = `vercel.ai.error.${name6}`;\nvar symbol6 = Symbol.for(marker6);\nvar _a6;\nvar MessageConversionError = class extends AISDKError6 {\n  constructor({\n    originalMessage,\n    message\n  }) {\n    super({ name: name6, message });\n    this[_a6] = true;\n    this.originalMessage = originalMessage;\n  }\n  static isInstance(error) {\n    return AISDKError6.hasMarker(error, marker6);\n  }\n};\n_a6 = symbol6;\n\n// core/prompt/convert-to-core-messages.ts\nfunction convertToCoreMessages(messages, options) {\n  var _a11;\n  const tools = (_a11 = options == null ? void 0 : options.tools) != null ? _a11 : {};\n  const coreMessages = [];\n  for (const message of messages) {\n    const { role, content, toolInvocations, experimental_attachments } = message;\n    switch (role) {\n      case \"system\": {\n        coreMessages.push({\n          role: \"system\",\n          content\n        });\n        break;\n      }\n      case \"user\": {\n        coreMessages.push({\n          role: \"user\",\n          content: experimental_attachments ? [\n            { type: \"text\", text: content },\n            ...attachmentsToParts(experimental_attachments)\n          ] : content\n        });\n        break;\n      }\n      case \"assistant\": {\n        if (toolInvocations == null) {\n          coreMessages.push({ role: \"assistant\", content });\n          break;\n        }\n        coreMessages.push({\n          role: \"assistant\",\n          content: [\n            { type: \"text\", text: content },\n            ...toolInvocations.map(\n              ({ toolCallId, toolName, args }) => ({\n                type: \"tool-call\",\n                toolCallId,\n                toolName,\n                args\n              })\n            )\n          ]\n        });\n        coreMessages.push({\n          role: \"tool\",\n          content: toolInvocations.map((toolInvocation) => {\n            if (!(\"result\" in toolInvocation)) {\n              throw new MessageConversionError({\n                originalMessage: message,\n                message: \"ToolInvocation must have a result: \" + JSON.stringify(toolInvocation)\n              });\n            }\n            const { toolCallId, toolName, result } = toolInvocation;\n            const tool2 = tools[toolName];\n            return (tool2 == null ? void 0 : tool2.experimental_toToolResultContent) != null ? {\n              type: \"tool-result\",\n              toolCallId,\n              toolName,\n              result: tool2.experimental_toToolResultContent(result),\n              experimental_content: tool2.experimental_toToolResultContent(result)\n            } : {\n              type: \"tool-result\",\n              toolCallId,\n              toolName,\n              result\n            };\n          })\n        });\n        break;\n      }\n      case \"function\":\n      case \"data\":\n      case \"tool\": {\n        break;\n      }\n      default: {\n        const _exhaustiveCheck = role;\n        throw new MessageConversionError({\n          originalMessage: message,\n          message: `Unsupported role: ${_exhaustiveCheck}`\n        });\n      }\n    }\n  }\n  return coreMessages;\n}\n\n// core/prompt/standardize-prompt.ts\nfunction standardizePrompt({\n  prompt,\n  tools\n}) {\n  if (prompt.prompt == null && prompt.messages == null) {\n    throw new InvalidPromptError({\n      prompt,\n      message: \"prompt or messages must be defined\"\n    });\n  }\n  if (prompt.prompt != null && prompt.messages != null) {\n    throw new InvalidPromptError({\n      prompt,\n      message: \"prompt and messages cannot be defined at the same time\"\n    });\n  }\n  if (prompt.system != null && typeof prompt.system !== \"string\") {\n    throw new InvalidPromptError({\n      prompt,\n      message: \"system must be a string\"\n    });\n  }\n  if (prompt.prompt != null) {\n    if (typeof prompt.prompt !== \"string\") {\n      throw new InvalidPromptError({\n        prompt,\n        message: \"prompt must be a string\"\n      });\n    }\n    return {\n      type: \"prompt\",\n      system: prompt.system,\n      messages: [\n        {\n          role: \"user\",\n          content: prompt.prompt\n        }\n      ]\n    };\n  }\n  if (prompt.messages != null) {\n    const promptType = detectPromptType(prompt.messages);\n    if (promptType === \"other\") {\n      throw new InvalidPromptError({\n        prompt,\n        message: \"messages must be an array of CoreMessage or UIMessage\"\n      });\n    }\n    const messages = promptType === \"ui-messages\" ? convertToCoreMessages(prompt.messages, {\n      tools\n    }) : prompt.messages;\n    const validationResult = safeValidateTypes({\n      value: messages,\n      schema: z7.array(coreMessageSchema)\n    });\n    if (!validationResult.success) {\n      throw new InvalidPromptError({\n        prompt,\n        message: \"messages must be an array of CoreMessage or UIMessage\",\n        cause: validationResult.error\n      });\n    }\n    return {\n      type: \"messages\",\n      messages,\n      system: prompt.system\n    };\n  }\n  throw new Error(\"unreachable\");\n}\n\n// core/types/usage.ts\nfunction calculateLanguageModelUsage(usage) {\n  return {\n    promptTokens: usage.promptTokens,\n    completionTokens: usage.completionTokens,\n    totalTokens: usage.promptTokens + usage.completionTokens\n  };\n}\n\n// core/util/prepare-response-headers.ts\nfunction prepareResponseHeaders(init, {\n  contentType,\n  dataStreamVersion\n}) {\n  var _a11;\n  const headers = new Headers((_a11 = init == null ? void 0 : init.headers) != null ? _a11 : {});\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", contentType);\n  }\n  if (dataStreamVersion !== void 0) {\n    headers.set(\"X-Vercel-AI-Data-Stream\", dataStreamVersion);\n  }\n  return headers;\n}\n\n// core/generate-object/inject-json-instruction.ts\nvar DEFAULT_SCHEMA_PREFIX = \"JSON schema:\";\nvar DEFAULT_SCHEMA_SUFFIX = \"You MUST answer with a JSON object that matches the JSON schema above.\";\nvar DEFAULT_GENERIC_SUFFIX = \"You MUST answer with JSON.\";\nfunction injectJsonInstruction({\n  prompt,\n  schema,\n  schemaPrefix = schema != null ? DEFAULT_SCHEMA_PREFIX : void 0,\n  schemaSuffix = schema != null ? DEFAULT_SCHEMA_SUFFIX : DEFAULT_GENERIC_SUFFIX\n}) {\n  return [\n    prompt != null && prompt.length > 0 ? prompt : void 0,\n    prompt != null && prompt.length > 0 ? \"\" : void 0,\n    // add a newline if prompt is not null\n    schemaPrefix,\n    schema != null ? JSON.stringify(schema) : void 0,\n    schemaSuffix\n  ].filter((line) => line != null).join(\"\\n\");\n}\n\n// core/generate-object/no-object-generated-error.ts\nimport { AISDKError as AISDKError7 } from \"@ai-sdk/provider\";\nvar name7 = \"AI_NoObjectGeneratedError\";\nvar marker7 = `vercel.ai.error.${name7}`;\nvar symbol7 = Symbol.for(marker7);\nvar _a7;\nvar NoObjectGeneratedError = class extends AISDKError7 {\n  // used in isInstance\n  constructor({ message = \"No object generated.\" } = {}) {\n    super({ name: name7, message });\n    this[_a7] = true;\n  }\n  static isInstance(error) {\n    return AISDKError7.hasMarker(error, marker7);\n  }\n  /**\n   * @deprecated Use isInstance instead.\n   */\n  static isNoObjectGeneratedError(error) {\n    return error instanceof Error && error.name === name7;\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      cause: this.cause,\n      message: this.message,\n      stack: this.stack\n    };\n  }\n};\n_a7 = symbol7;\n\n// core/generate-object/output-strategy.ts\nimport {\n  isJSONArray,\n  isJSONObject,\n  TypeValidationError,\n  UnsupportedFunctionalityError\n} from \"@ai-sdk/provider\";\nimport { safeValidateTypes as safeValidateTypes2 } from \"@ai-sdk/provider-utils\";\nimport { asSchema } from \"@ai-sdk/ui-utils\";\n\n// core/util/async-iterable-stream.ts\nfunction createAsyncIterableStream(source, transformer) {\n  const transformedStream = source.pipeThrough(\n    new TransformStream(transformer)\n  );\n  transformedStream[Symbol.asyncIterator] = () => {\n    const reader = transformedStream.getReader();\n    return {\n      async next() {\n        const { done, value } = await reader.read();\n        return done ? { done: true, value: void 0 } : { done: false, value };\n      }\n    };\n  };\n  return transformedStream;\n}\n\n// core/generate-object/output-strategy.ts\nvar noSchemaOutputStrategy = {\n  type: \"no-schema\",\n  jsonSchema: void 0,\n  validatePartialResult({ value, textDelta }) {\n    return { success: true, value: { partial: value, textDelta } };\n  },\n  validateFinalResult(value) {\n    return value === void 0 ? { success: false, error: new NoObjectGeneratedError() } : { success: true, value };\n  },\n  createElementStream() {\n    throw new UnsupportedFunctionalityError({\n      functionality: \"element streams in no-schema mode\"\n    });\n  }\n};\nvar objectOutputStrategy = (schema) => ({\n  type: \"object\",\n  jsonSchema: schema.jsonSchema,\n  validatePartialResult({ value, textDelta }) {\n    return {\n      success: true,\n      value: {\n        // Note: currently no validation of partial results:\n        partial: value,\n        textDelta\n      }\n    };\n  },\n  validateFinalResult(value) {\n    return safeValidateTypes2({ value, schema });\n  },\n  createElementStream() {\n    throw new UnsupportedFunctionalityError({\n      functionality: \"element streams in object mode\"\n    });\n  }\n});\nvar arrayOutputStrategy = (schema) => {\n  const { $schema, ...itemSchema } = schema.jsonSchema;\n  return {\n    type: \"enum\",\n    // wrap in object that contains array of elements, since most LLMs will not\n    // be able to generate an array directly:\n    // possible future optimization: use arrays directly when model supports grammar-guided generation\n    jsonSchema: {\n      $schema: \"http://json-schema.org/draft-07/schema#\",\n      type: \"object\",\n      properties: {\n        elements: { type: \"array\", items: itemSchema }\n      },\n      required: [\"elements\"],\n      additionalProperties: false\n    },\n    validatePartialResult({ value, latestObject, isFirstDelta, isFinalDelta }) {\n      var _a11;\n      if (!isJSONObject(value) || !isJSONArray(value.elements)) {\n        return {\n          success: false,\n          error: new TypeValidationError({\n            value,\n            cause: \"value must be an object that contains an array of elements\"\n          })\n        };\n      }\n      const inputArray = value.elements;\n      const resultArray = [];\n      for (let i = 0; i < inputArray.length; i++) {\n        const element = inputArray[i];\n        const result = safeValidateTypes2({ value: element, schema });\n        if (i === inputArray.length - 1 && !isFinalDelta) {\n          continue;\n        }\n        if (!result.success) {\n          return result;\n        }\n        resultArray.push(result.value);\n      }\n      const publishedElementCount = (_a11 = latestObject == null ? void 0 : latestObject.length) != null ? _a11 : 0;\n      let textDelta = \"\";\n      if (isFirstDelta) {\n        textDelta += \"[\";\n      }\n      if (publishedElementCount > 0) {\n        textDelta += \",\";\n      }\n      textDelta += resultArray.slice(publishedElementCount).map((element) => JSON.stringify(element)).join(\",\");\n      if (isFinalDelta) {\n        textDelta += \"]\";\n      }\n      return {\n        success: true,\n        value: {\n          partial: resultArray,\n          textDelta\n        }\n      };\n    },\n    validateFinalResult(value) {\n      if (!isJSONObject(value) || !isJSONArray(value.elements)) {\n        return {\n          success: false,\n          error: new TypeValidationError({\n            value,\n            cause: \"value must be an object that contains an array of elements\"\n          })\n        };\n      }\n      const inputArray = value.elements;\n      for (const element of inputArray) {\n        const result = safeValidateTypes2({ value: element, schema });\n        if (!result.success) {\n          return result;\n        }\n      }\n      return { success: true, value: inputArray };\n    },\n    createElementStream(originalStream) {\n      let publishedElements = 0;\n      return createAsyncIterableStream(originalStream, {\n        transform(chunk, controller) {\n          switch (chunk.type) {\n            case \"object\": {\n              const array = chunk.object;\n              for (; publishedElements < array.length; publishedElements++) {\n                controller.enqueue(array[publishedElements]);\n              }\n              break;\n            }\n            case \"text-delta\":\n            case \"finish\":\n              break;\n            case \"error\":\n              controller.error(chunk.error);\n              break;\n            default: {\n              const _exhaustiveCheck = chunk;\n              throw new Error(`Unsupported chunk type: ${_exhaustiveCheck}`);\n            }\n          }\n        }\n      });\n    }\n  };\n};\nvar enumOutputStrategy = (enumValues) => {\n  return {\n    type: \"enum\",\n    // wrap in object that contains result, since most LLMs will not\n    // be able to generate an enum value directly:\n    // possible future optimization: use enums directly when model supports top-level enums\n    jsonSchema: {\n      $schema: \"http://json-schema.org/draft-07/schema#\",\n      type: \"object\",\n      properties: {\n        result: { type: \"string\", enum: enumValues }\n      },\n      required: [\"result\"],\n      additionalProperties: false\n    },\n    validateFinalResult(value) {\n      if (!isJSONObject(value) || typeof value.result !== \"string\") {\n        return {\n          success: false,\n          error: new TypeValidationError({\n            value,\n            cause: 'value must be an object that contains a string in the \"result\" property.'\n          })\n        };\n      }\n      const result = value.result;\n      return enumValues.includes(result) ? { success: true, value: result } : {\n        success: false,\n        error: new TypeValidationError({\n          value,\n          cause: \"value must be a string in the enum\"\n        })\n      };\n    },\n    validatePartialResult() {\n      throw new UnsupportedFunctionalityError({\n        functionality: \"partial results in enum mode\"\n      });\n    },\n    createElementStream() {\n      throw new UnsupportedFunctionalityError({\n        functionality: \"element streams in enum mode\"\n      });\n    }\n  };\n};\nfunction getOutputStrategy({\n  output,\n  schema,\n  enumValues\n}) {\n  switch (output) {\n    case \"object\":\n      return objectOutputStrategy(asSchema(schema));\n    case \"array\":\n      return arrayOutputStrategy(asSchema(schema));\n    case \"enum\":\n      return enumOutputStrategy(enumValues);\n    case \"no-schema\":\n      return noSchemaOutputStrategy;\n    default: {\n      const _exhaustiveCheck = output;\n      throw new Error(`Unsupported output: ${_exhaustiveCheck}`);\n    }\n  }\n}\n\n// core/generate-object/validate-object-generation-input.ts\nfunction validateObjectGenerationInput({\n  output,\n  mode,\n  schema,\n  schemaName,\n  schemaDescription,\n  enumValues\n}) {\n  if (output != null && output !== \"object\" && output !== \"array\" && output !== \"enum\" && output !== \"no-schema\") {\n    throw new InvalidArgumentError({\n      parameter: \"output\",\n      value: output,\n      message: \"Invalid output type.\"\n    });\n  }\n  if (output === \"no-schema\") {\n    if (mode === \"auto\" || mode === \"tool\") {\n      throw new InvalidArgumentError({\n        parameter: \"mode\",\n        value: mode,\n        message: 'Mode must be \"json\" for no-schema output.'\n      });\n    }\n    if (schema != null) {\n      throw new InvalidArgumentError({\n        parameter: \"schema\",\n        value: schema,\n        message: \"Schema is not supported for no-schema output.\"\n      });\n    }\n    if (schemaDescription != null) {\n      throw new InvalidArgumentError({\n        parameter: \"schemaDescription\",\n        value: schemaDescription,\n        message: \"Schema description is not supported for no-schema output.\"\n      });\n    }\n    if (schemaName != null) {\n      throw new InvalidArgumentError({\n        parameter: \"schemaName\",\n        value: schemaName,\n        message: \"Schema name is not supported for no-schema output.\"\n      });\n    }\n    if (enumValues != null) {\n      throw new InvalidArgumentError({\n        parameter: \"enumValues\",\n        value: enumValues,\n        message: \"Enum values are not supported for no-schema output.\"\n      });\n    }\n  }\n  if (output === \"object\") {\n    if (schema == null) {\n      throw new InvalidArgumentError({\n        parameter: \"schema\",\n        value: schema,\n        message: \"Schema is required for object output.\"\n      });\n    }\n    if (enumValues != null) {\n      throw new InvalidArgumentError({\n        parameter: \"enumValues\",\n        value: enumValues,\n        message: \"Enum values are not supported for object output.\"\n      });\n    }\n  }\n  if (output === \"array\") {\n    if (schema == null) {\n      throw new InvalidArgumentError({\n        parameter: \"schema\",\n        value: schema,\n        message: \"Element schema is required for array output.\"\n      });\n    }\n    if (enumValues != null) {\n      throw new InvalidArgumentError({\n        parameter: \"enumValues\",\n        value: enumValues,\n        message: \"Enum values are not supported for array output.\"\n      });\n    }\n  }\n  if (output === \"enum\") {\n    if (schema != null) {\n      throw new InvalidArgumentError({\n        parameter: \"schema\",\n        value: schema,\n        message: \"Schema is not supported for enum output.\"\n      });\n    }\n    if (schemaDescription != null) {\n      throw new InvalidArgumentError({\n        parameter: \"schemaDescription\",\n        value: schemaDescription,\n        message: \"Schema description is not supported for enum output.\"\n      });\n    }\n    if (schemaName != null) {\n      throw new InvalidArgumentError({\n        parameter: \"schemaName\",\n        value: schemaName,\n        message: \"Schema name is not supported for enum output.\"\n      });\n    }\n    if (enumValues == null) {\n      throw new InvalidArgumentError({\n        parameter: \"enumValues\",\n        value: enumValues,\n        message: \"Enum values are required for enum output.\"\n      });\n    }\n    for (const value of enumValues) {\n      if (typeof value !== \"string\") {\n        throw new InvalidArgumentError({\n          parameter: \"enumValues\",\n          value,\n          message: \"Enum values must be strings.\"\n        });\n      }\n    }\n  }\n}\n\n// core/generate-object/generate-object.ts\nvar originalGenerateId = createIdGenerator({ prefix: \"aiobj\", size: 24 });\nasync function generateObject({\n  model,\n  enum: enumValues,\n  // rename bc enum is reserved by typescript\n  schema: inputSchema,\n  schemaName,\n  schemaDescription,\n  mode,\n  output = \"object\",\n  system,\n  prompt,\n  messages,\n  maxRetries,\n  abortSignal,\n  headers,\n  experimental_telemetry: telemetry,\n  experimental_providerMetadata: providerMetadata,\n  _internal: {\n    generateId: generateId3 = originalGenerateId,\n    currentDate = () => /* @__PURE__ */ new Date()\n  } = {},\n  ...settings\n}) {\n  validateObjectGenerationInput({\n    output,\n    mode,\n    schema: inputSchema,\n    schemaName,\n    schemaDescription,\n    enumValues\n  });\n  const outputStrategy = getOutputStrategy({\n    output,\n    schema: inputSchema,\n    enumValues\n  });\n  if (outputStrategy.type === \"no-schema\" && mode === void 0) {\n    mode = \"json\";\n  }\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { ...settings, maxRetries }\n  });\n  const tracer = getTracer(telemetry);\n  return recordSpan({\n    name: \"ai.generateObject\",\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({\n          operationId: \"ai.generateObject\",\n          telemetry\n        }),\n        ...baseTelemetryAttributes,\n        // specific settings that only make sense on the outer level:\n        \"ai.prompt\": {\n          input: () => JSON.stringify({ system, prompt, messages })\n        },\n        \"ai.schema\": outputStrategy.jsonSchema != null ? { input: () => JSON.stringify(outputStrategy.jsonSchema) } : void 0,\n        \"ai.schema.name\": schemaName,\n        \"ai.schema.description\": schemaDescription,\n        \"ai.settings.output\": outputStrategy.type,\n        \"ai.settings.mode\": mode\n      }\n    }),\n    tracer,\n    fn: async (span) => {\n      var _a11, _b;\n      const retry = retryWithExponentialBackoff({ maxRetries });\n      if (mode === \"auto\" || mode == null) {\n        mode = model.defaultObjectGenerationMode;\n      }\n      let result;\n      let finishReason;\n      let usage;\n      let warnings;\n      let rawResponse;\n      let response;\n      let request;\n      let logprobs;\n      let resultProviderMetadata;\n      switch (mode) {\n        case \"json\": {\n          const standardizedPrompt = standardizePrompt({\n            prompt: {\n              system: outputStrategy.jsonSchema == null ? injectJsonInstruction({ prompt: system }) : model.supportsStructuredOutputs ? system : injectJsonInstruction({\n                prompt: system,\n                schema: outputStrategy.jsonSchema\n              }),\n              prompt,\n              messages\n            },\n            tools: void 0\n          });\n          const promptMessages = await convertToLanguageModelPrompt({\n            prompt: standardizedPrompt,\n            modelSupportsImageUrls: model.supportsImageUrls,\n            modelSupportsUrl: model.supportsUrl\n          });\n          const generateResult = await retry(\n            () => recordSpan({\n              name: \"ai.generateObject.doGenerate\",\n              attributes: selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  ...assembleOperationName({\n                    operationId: \"ai.generateObject.doGenerate\",\n                    telemetry\n                  }),\n                  ...baseTelemetryAttributes,\n                  \"ai.prompt.format\": {\n                    input: () => standardizedPrompt.type\n                  },\n                  \"ai.prompt.messages\": {\n                    input: () => JSON.stringify(promptMessages)\n                  },\n                  \"ai.settings.mode\": mode,\n                  // standardized gen-ai llm span attributes:\n                  \"gen_ai.system\": model.provider,\n                  \"gen_ai.request.model\": model.modelId,\n                  \"gen_ai.request.frequency_penalty\": settings.frequencyPenalty,\n                  \"gen_ai.request.max_tokens\": settings.maxTokens,\n                  \"gen_ai.request.presence_penalty\": settings.presencePenalty,\n                  \"gen_ai.request.temperature\": settings.temperature,\n                  \"gen_ai.request.top_k\": settings.topK,\n                  \"gen_ai.request.top_p\": settings.topP\n                }\n              }),\n              tracer,\n              fn: async (span2) => {\n                var _a12, _b2, _c, _d, _e, _f;\n                const result2 = await model.doGenerate({\n                  mode: {\n                    type: \"object-json\",\n                    schema: outputStrategy.jsonSchema,\n                    name: schemaName,\n                    description: schemaDescription\n                  },\n                  ...prepareCallSettings(settings),\n                  inputFormat: standardizedPrompt.type,\n                  prompt: promptMessages,\n                  providerMetadata,\n                  abortSignal,\n                  headers\n                });\n                if (result2.text === void 0) {\n                  throw new NoObjectGeneratedError();\n                }\n                const responseData = {\n                  id: (_b2 = (_a12 = result2.response) == null ? void 0 : _a12.id) != null ? _b2 : generateId3(),\n                  timestamp: (_d = (_c = result2.response) == null ? void 0 : _c.timestamp) != null ? _d : currentDate(),\n                  modelId: (_f = (_e = result2.response) == null ? void 0 : _e.modelId) != null ? _f : model.modelId\n                };\n                span2.setAttributes(\n                  selectTelemetryAttributes({\n                    telemetry,\n                    attributes: {\n                      \"ai.response.finishReason\": result2.finishReason,\n                      \"ai.response.object\": { output: () => result2.text },\n                      \"ai.response.id\": responseData.id,\n                      \"ai.response.model\": responseData.modelId,\n                      \"ai.response.timestamp\": responseData.timestamp.toISOString(),\n                      \"ai.usage.promptTokens\": result2.usage.promptTokens,\n                      \"ai.usage.completionTokens\": result2.usage.completionTokens,\n                      // deprecated:\n                      \"ai.finishReason\": result2.finishReason,\n                      \"ai.result.object\": { output: () => result2.text },\n                      // standardized gen-ai llm span attributes:\n                      \"gen_ai.response.finish_reasons\": [result2.finishReason],\n                      \"gen_ai.response.id\": responseData.id,\n                      \"gen_ai.response.model\": responseData.modelId,\n                      \"gen_ai.usage.prompt_tokens\": result2.usage.promptTokens,\n                      \"gen_ai.usage.completion_tokens\": result2.usage.completionTokens\n                    }\n                  })\n                );\n                return { ...result2, objectText: result2.text, responseData };\n              }\n            })\n          );\n          result = generateResult.objectText;\n          finishReason = generateResult.finishReason;\n          usage = generateResult.usage;\n          warnings = generateResult.warnings;\n          rawResponse = generateResult.rawResponse;\n          logprobs = generateResult.logprobs;\n          resultProviderMetadata = generateResult.providerMetadata;\n          request = (_a11 = generateResult.request) != null ? _a11 : {};\n          response = generateResult.responseData;\n          break;\n        }\n        case \"tool\": {\n          const standardizedPrompt = standardizePrompt({\n            prompt: { system, prompt, messages },\n            tools: void 0\n          });\n          const promptMessages = await convertToLanguageModelPrompt({\n            prompt: standardizedPrompt,\n            modelSupportsImageUrls: model.supportsImageUrls,\n            modelSupportsUrl: model.supportsUrl\n          });\n          const inputFormat = standardizedPrompt.type;\n          const generateResult = await retry(\n            () => recordSpan({\n              name: \"ai.generateObject.doGenerate\",\n              attributes: selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  ...assembleOperationName({\n                    operationId: \"ai.generateObject.doGenerate\",\n                    telemetry\n                  }),\n                  ...baseTelemetryAttributes,\n                  \"ai.prompt.format\": {\n                    input: () => inputFormat\n                  },\n                  \"ai.prompt.messages\": {\n                    input: () => JSON.stringify(promptMessages)\n                  },\n                  \"ai.settings.mode\": mode,\n                  // standardized gen-ai llm span attributes:\n                  \"gen_ai.system\": model.provider,\n                  \"gen_ai.request.model\": model.modelId,\n                  \"gen_ai.request.frequency_penalty\": settings.frequencyPenalty,\n                  \"gen_ai.request.max_tokens\": settings.maxTokens,\n                  \"gen_ai.request.presence_penalty\": settings.presencePenalty,\n                  \"gen_ai.request.temperature\": settings.temperature,\n                  \"gen_ai.request.top_k\": settings.topK,\n                  \"gen_ai.request.top_p\": settings.topP\n                }\n              }),\n              tracer,\n              fn: async (span2) => {\n                var _a12, _b2, _c, _d, _e, _f, _g, _h;\n                const result2 = await model.doGenerate({\n                  mode: {\n                    type: \"object-tool\",\n                    tool: {\n                      type: \"function\",\n                      name: schemaName != null ? schemaName : \"json\",\n                      description: schemaDescription != null ? schemaDescription : \"Respond with a JSON object.\",\n                      parameters: outputStrategy.jsonSchema\n                    }\n                  },\n                  ...prepareCallSettings(settings),\n                  inputFormat,\n                  prompt: promptMessages,\n                  providerMetadata,\n                  abortSignal,\n                  headers\n                });\n                const objectText = (_b2 = (_a12 = result2.toolCalls) == null ? void 0 : _a12[0]) == null ? void 0 : _b2.args;\n                if (objectText === void 0) {\n                  throw new NoObjectGeneratedError();\n                }\n                const responseData = {\n                  id: (_d = (_c = result2.response) == null ? void 0 : _c.id) != null ? _d : generateId3(),\n                  timestamp: (_f = (_e = result2.response) == null ? void 0 : _e.timestamp) != null ? _f : currentDate(),\n                  modelId: (_h = (_g = result2.response) == null ? void 0 : _g.modelId) != null ? _h : model.modelId\n                };\n                span2.setAttributes(\n                  selectTelemetryAttributes({\n                    telemetry,\n                    attributes: {\n                      \"ai.response.finishReason\": result2.finishReason,\n                      \"ai.response.object\": { output: () => objectText },\n                      \"ai.response.id\": responseData.id,\n                      \"ai.response.model\": responseData.modelId,\n                      \"ai.response.timestamp\": responseData.timestamp.toISOString(),\n                      \"ai.usage.promptTokens\": result2.usage.promptTokens,\n                      \"ai.usage.completionTokens\": result2.usage.completionTokens,\n                      // deprecated:\n                      \"ai.finishReason\": result2.finishReason,\n                      \"ai.result.object\": { output: () => objectText },\n                      // standardized gen-ai llm span attributes:\n                      \"gen_ai.response.finish_reasons\": [result2.finishReason],\n                      \"gen_ai.response.id\": responseData.id,\n                      \"gen_ai.response.model\": responseData.modelId,\n                      \"gen_ai.usage.input_tokens\": result2.usage.promptTokens,\n                      \"gen_ai.usage.output_tokens\": result2.usage.completionTokens\n                    }\n                  })\n                );\n                return { ...result2, objectText, responseData };\n              }\n            })\n          );\n          result = generateResult.objectText;\n          finishReason = generateResult.finishReason;\n          usage = generateResult.usage;\n          warnings = generateResult.warnings;\n          rawResponse = generateResult.rawResponse;\n          logprobs = generateResult.logprobs;\n          resultProviderMetadata = generateResult.providerMetadata;\n          request = (_b = generateResult.request) != null ? _b : {};\n          response = generateResult.responseData;\n          break;\n        }\n        case void 0: {\n          throw new Error(\n            \"Model does not have a default object generation mode.\"\n          );\n        }\n        default: {\n          const _exhaustiveCheck = mode;\n          throw new Error(`Unsupported mode: ${_exhaustiveCheck}`);\n        }\n      }\n      const parseResult = safeParseJSON({ text: result });\n      if (!parseResult.success) {\n        throw parseResult.error;\n      }\n      const validationResult = outputStrategy.validateFinalResult(\n        parseResult.value\n      );\n      if (!validationResult.success) {\n        throw validationResult.error;\n      }\n      span.setAttributes(\n        selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            \"ai.response.finishReason\": finishReason,\n            \"ai.response.object\": {\n              output: () => JSON.stringify(validationResult.value)\n            },\n            \"ai.usage.promptTokens\": usage.promptTokens,\n            \"ai.usage.completionTokens\": usage.completionTokens,\n            // deprecated:\n            \"ai.finishReason\": finishReason,\n            \"ai.result.object\": {\n              output: () => JSON.stringify(validationResult.value)\n            }\n          }\n        })\n      );\n      return new DefaultGenerateObjectResult({\n        object: validationResult.value,\n        finishReason,\n        usage: calculateLanguageModelUsage(usage),\n        warnings,\n        request,\n        response: {\n          ...response,\n          headers: rawResponse == null ? void 0 : rawResponse.headers\n        },\n        logprobs,\n        providerMetadata: resultProviderMetadata\n      });\n    }\n  });\n}\nvar DefaultGenerateObjectResult = class {\n  constructor(options) {\n    this.object = options.object;\n    this.finishReason = options.finishReason;\n    this.usage = options.usage;\n    this.warnings = options.warnings;\n    this.experimental_providerMetadata = options.providerMetadata;\n    this.response = options.response;\n    this.request = options.request;\n    this.rawResponse = {\n      headers: options.response.headers\n    };\n    this.logprobs = options.logprobs;\n  }\n  toJsonResponse(init) {\n    var _a11;\n    return new Response(JSON.stringify(this.object), {\n      status: (_a11 = init == null ? void 0 : init.status) != null ? _a11 : 200,\n      headers: prepareResponseHeaders(init, {\n        contentType: \"application/json; charset=utf-8\"\n      })\n    });\n  }\n};\nvar experimental_generateObject = generateObject;\n\n// core/generate-object/stream-object.ts\nimport { createIdGenerator as createIdGenerator2 } from \"@ai-sdk/provider-utils\";\nimport {\n  isDeepEqualData,\n  parsePartialJson\n} from \"@ai-sdk/ui-utils\";\n\n// util/create-resolvable-promise.ts\nfunction createResolvablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return {\n    promise,\n    resolve,\n    reject\n  };\n}\n\n// util/delayed-promise.ts\nvar DelayedPromise = class {\n  constructor() {\n    this.status = { type: \"pending\" };\n    this._resolve = void 0;\n    this._reject = void 0;\n  }\n  get value() {\n    if (this.promise) {\n      return this.promise;\n    }\n    this.promise = new Promise((resolve, reject) => {\n      if (this.status.type === \"resolved\") {\n        resolve(this.status.value);\n      } else if (this.status.type === \"rejected\") {\n        reject(this.status.error);\n      }\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    return this.promise;\n  }\n  resolve(value) {\n    var _a11;\n    this.status = { type: \"resolved\", value };\n    if (this.promise) {\n      (_a11 = this._resolve) == null ? void 0 : _a11.call(this, value);\n    }\n  }\n  reject(error) {\n    var _a11;\n    this.status = { type: \"rejected\", error };\n    if (this.promise) {\n      (_a11 = this._reject) == null ? void 0 : _a11.call(this, error);\n    }\n  }\n};\n\n// core/util/now.ts\nfunction now() {\n  var _a11, _b;\n  return (_b = (_a11 = globalThis == null ? void 0 : globalThis.performance) == null ? void 0 : _a11.now()) != null ? _b : Date.now();\n}\n\n// core/util/prepare-outgoing-http-headers.ts\nfunction prepareOutgoingHttpHeaders(init, {\n  contentType,\n  dataStreamVersion\n}) {\n  const headers = {};\n  if ((init == null ? void 0 : init.headers) != null) {\n    for (const [key, value] of Object.entries(init.headers)) {\n      headers[key] = value;\n    }\n  }\n  if (headers[\"Content-Type\"] == null) {\n    headers[\"Content-Type\"] = contentType;\n  }\n  if (dataStreamVersion !== void 0) {\n    headers[\"X-Vercel-AI-Data-Stream\"] = dataStreamVersion;\n  }\n  return headers;\n}\n\n// core/util/write-to-server-response.ts\nfunction writeToServerResponse({\n  response,\n  status,\n  statusText,\n  headers,\n  stream\n}) {\n  response.writeHead(status != null ? status : 200, statusText, headers);\n  const reader = stream.getReader();\n  const read = async () => {\n    try {\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done)\n          break;\n        response.write(value);\n      }\n    } catch (error) {\n      throw error;\n    } finally {\n      response.end();\n    }\n  };\n  read();\n}\n\n// core/generate-object/stream-object.ts\nvar originalGenerateId2 = createIdGenerator2({ prefix: \"aiobj\", size: 24 });\nasync function streamObject({\n  model,\n  schema: inputSchema,\n  schemaName,\n  schemaDescription,\n  mode,\n  output = \"object\",\n  system,\n  prompt,\n  messages,\n  maxRetries,\n  abortSignal,\n  headers,\n  experimental_telemetry: telemetry,\n  experimental_providerMetadata: providerMetadata,\n  onFinish,\n  _internal: {\n    generateId: generateId3 = originalGenerateId2,\n    currentDate = () => /* @__PURE__ */ new Date(),\n    now: now2 = now\n  } = {},\n  ...settings\n}) {\n  validateObjectGenerationInput({\n    output,\n    mode,\n    schema: inputSchema,\n    schemaName,\n    schemaDescription\n  });\n  const outputStrategy = getOutputStrategy({ output, schema: inputSchema });\n  if (outputStrategy.type === \"no-schema\" && mode === void 0) {\n    mode = \"json\";\n  }\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { ...settings, maxRetries }\n  });\n  const tracer = getTracer(telemetry);\n  const retry = retryWithExponentialBackoff({ maxRetries });\n  return recordSpan({\n    name: \"ai.streamObject\",\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({\n          operationId: \"ai.streamObject\",\n          telemetry\n        }),\n        ...baseTelemetryAttributes,\n        // specific settings that only make sense on the outer level:\n        \"ai.prompt\": {\n          input: () => JSON.stringify({ system, prompt, messages })\n        },\n        \"ai.schema\": outputStrategy.jsonSchema != null ? { input: () => JSON.stringify(outputStrategy.jsonSchema) } : void 0,\n        \"ai.schema.name\": schemaName,\n        \"ai.schema.description\": schemaDescription,\n        \"ai.settings.output\": outputStrategy.type,\n        \"ai.settings.mode\": mode\n      }\n    }),\n    tracer,\n    endWhenDone: false,\n    fn: async (rootSpan) => {\n      if (mode === \"auto\" || mode == null) {\n        mode = model.defaultObjectGenerationMode;\n      }\n      let callOptions;\n      let transformer;\n      switch (mode) {\n        case \"json\": {\n          const standardizedPrompt = standardizePrompt({\n            prompt: {\n              system: outputStrategy.jsonSchema == null ? injectJsonInstruction({ prompt: system }) : model.supportsStructuredOutputs ? system : injectJsonInstruction({\n                prompt: system,\n                schema: outputStrategy.jsonSchema\n              }),\n              prompt,\n              messages\n            },\n            tools: void 0\n          });\n          callOptions = {\n            mode: {\n              type: \"object-json\",\n              schema: outputStrategy.jsonSchema,\n              name: schemaName,\n              description: schemaDescription\n            },\n            ...prepareCallSettings(settings),\n            inputFormat: standardizedPrompt.type,\n            prompt: await convertToLanguageModelPrompt({\n              prompt: standardizedPrompt,\n              modelSupportsImageUrls: model.supportsImageUrls,\n              modelSupportsUrl: model.supportsUrl\n            }),\n            providerMetadata,\n            abortSignal,\n            headers\n          };\n          transformer = {\n            transform: (chunk, controller) => {\n              switch (chunk.type) {\n                case \"text-delta\":\n                  controller.enqueue(chunk.textDelta);\n                  break;\n                case \"response-metadata\":\n                case \"finish\":\n                case \"error\":\n                  controller.enqueue(chunk);\n                  break;\n              }\n            }\n          };\n          break;\n        }\n        case \"tool\": {\n          const standardizedPrompt = standardizePrompt({\n            prompt: { system, prompt, messages },\n            tools: void 0\n          });\n          callOptions = {\n            mode: {\n              type: \"object-tool\",\n              tool: {\n                type: \"function\",\n                name: schemaName != null ? schemaName : \"json\",\n                description: schemaDescription != null ? schemaDescription : \"Respond with a JSON object.\",\n                parameters: outputStrategy.jsonSchema\n              }\n            },\n            ...prepareCallSettings(settings),\n            inputFormat: standardizedPrompt.type,\n            prompt: await convertToLanguageModelPrompt({\n              prompt: standardizedPrompt,\n              modelSupportsImageUrls: model.supportsImageUrls,\n              modelSupportsUrl: model.supportsUrl\n            }),\n            providerMetadata,\n            abortSignal,\n            headers\n          };\n          transformer = {\n            transform(chunk, controller) {\n              switch (chunk.type) {\n                case \"tool-call-delta\":\n                  controller.enqueue(chunk.argsTextDelta);\n                  break;\n                case \"response-metadata\":\n                case \"finish\":\n                case \"error\":\n                  controller.enqueue(chunk);\n                  break;\n              }\n            }\n          };\n          break;\n        }\n        case void 0: {\n          throw new Error(\n            \"Model does not have a default object generation mode.\"\n          );\n        }\n        default: {\n          const _exhaustiveCheck = mode;\n          throw new Error(`Unsupported mode: ${_exhaustiveCheck}`);\n        }\n      }\n      const {\n        result: { stream, warnings, rawResponse, request },\n        doStreamSpan,\n        startTimestampMs\n      } = await retry(\n        () => recordSpan({\n          name: \"ai.streamObject.doStream\",\n          attributes: selectTelemetryAttributes({\n            telemetry,\n            attributes: {\n              ...assembleOperationName({\n                operationId: \"ai.streamObject.doStream\",\n                telemetry\n              }),\n              ...baseTelemetryAttributes,\n              \"ai.prompt.format\": {\n                input: () => callOptions.inputFormat\n              },\n              \"ai.prompt.messages\": {\n                input: () => JSON.stringify(callOptions.prompt)\n              },\n              \"ai.settings.mode\": mode,\n              // standardized gen-ai llm span attributes:\n              \"gen_ai.system\": model.provider,\n              \"gen_ai.request.model\": model.modelId,\n              \"gen_ai.request.frequency_penalty\": settings.frequencyPenalty,\n              \"gen_ai.request.max_tokens\": settings.maxTokens,\n              \"gen_ai.request.presence_penalty\": settings.presencePenalty,\n              \"gen_ai.request.temperature\": settings.temperature,\n              \"gen_ai.request.top_k\": settings.topK,\n              \"gen_ai.request.top_p\": settings.topP\n            }\n          }),\n          tracer,\n          endWhenDone: false,\n          fn: async (doStreamSpan2) => ({\n            startTimestampMs: now2(),\n            doStreamSpan: doStreamSpan2,\n            result: await model.doStream(callOptions)\n          })\n        })\n      );\n      return new DefaultStreamObjectResult({\n        outputStrategy,\n        stream: stream.pipeThrough(new TransformStream(transformer)),\n        warnings,\n        rawResponse,\n        request: request != null ? request : {},\n        onFinish,\n        rootSpan,\n        doStreamSpan,\n        telemetry,\n        startTimestampMs,\n        modelId: model.modelId,\n        now: now2,\n        currentDate,\n        generateId: generateId3\n      });\n    }\n  });\n}\nvar DefaultStreamObjectResult = class {\n  constructor({\n    stream,\n    warnings,\n    rawResponse,\n    request,\n    outputStrategy,\n    onFinish,\n    rootSpan,\n    doStreamSpan,\n    telemetry,\n    startTimestampMs,\n    modelId,\n    now: now2,\n    currentDate,\n    generateId: generateId3\n  }) {\n    this.warnings = warnings;\n    this.rawResponse = rawResponse;\n    this.outputStrategy = outputStrategy;\n    this.request = Promise.resolve(request);\n    this.objectPromise = new DelayedPromise();\n    const { resolve: resolveUsage, promise: usagePromise } = createResolvablePromise();\n    this.usage = usagePromise;\n    const { resolve: resolveResponse, promise: responsePromise } = createResolvablePromise();\n    this.response = responsePromise;\n    const {\n      resolve: resolveProviderMetadata,\n      promise: providerMetadataPromise\n    } = createResolvablePromise();\n    this.experimental_providerMetadata = providerMetadataPromise;\n    let usage;\n    let finishReason;\n    let providerMetadata;\n    let object;\n    let error;\n    let accumulatedText = \"\";\n    let textDelta = \"\";\n    let response = {\n      id: generateId3(),\n      timestamp: currentDate(),\n      modelId\n    };\n    let latestObjectJson = void 0;\n    let latestObject = void 0;\n    let isFirstChunk = true;\n    let isFirstDelta = true;\n    const self = this;\n    this.originalStream = stream.pipeThrough(\n      new TransformStream({\n        async transform(chunk, controller) {\n          var _a11, _b, _c;\n          if (isFirstChunk) {\n            const msToFirstChunk = now2() - startTimestampMs;\n            isFirstChunk = false;\n            doStreamSpan.addEvent(\"ai.stream.firstChunk\", {\n              \"ai.stream.msToFirstChunk\": msToFirstChunk\n            });\n            doStreamSpan.setAttributes({\n              \"ai.stream.msToFirstChunk\": msToFirstChunk\n            });\n          }\n          if (typeof chunk === \"string\") {\n            accumulatedText += chunk;\n            textDelta += chunk;\n            const { value: currentObjectJson, state: parseState } = parsePartialJson(accumulatedText);\n            if (currentObjectJson !== void 0 && !isDeepEqualData(latestObjectJson, currentObjectJson)) {\n              const validationResult = outputStrategy.validatePartialResult({\n                value: currentObjectJson,\n                textDelta,\n                latestObject,\n                isFirstDelta,\n                isFinalDelta: parseState === \"successful-parse\"\n              });\n              if (validationResult.success && !isDeepEqualData(latestObject, validationResult.value.partial)) {\n                latestObjectJson = currentObjectJson;\n                latestObject = validationResult.value.partial;\n                controller.enqueue({\n                  type: \"object\",\n                  object: latestObject\n                });\n                controller.enqueue({\n                  type: \"text-delta\",\n                  textDelta: validationResult.value.textDelta\n                });\n                textDelta = \"\";\n                isFirstDelta = false;\n              }\n            }\n            return;\n          }\n          switch (chunk.type) {\n            case \"response-metadata\": {\n              response = {\n                id: (_a11 = chunk.id) != null ? _a11 : response.id,\n                timestamp: (_b = chunk.timestamp) != null ? _b : response.timestamp,\n                modelId: (_c = chunk.modelId) != null ? _c : response.modelId\n              };\n              break;\n            }\n            case \"finish\": {\n              if (textDelta !== \"\") {\n                controller.enqueue({ type: \"text-delta\", textDelta });\n              }\n              finishReason = chunk.finishReason;\n              usage = calculateLanguageModelUsage(chunk.usage);\n              providerMetadata = chunk.providerMetadata;\n              controller.enqueue({ ...chunk, usage, response });\n              resolveUsage(usage);\n              resolveProviderMetadata(providerMetadata);\n              resolveResponse({\n                ...response,\n                headers: rawResponse == null ? void 0 : rawResponse.headers\n              });\n              const validationResult = outputStrategy.validateFinalResult(latestObjectJson);\n              if (validationResult.success) {\n                object = validationResult.value;\n                self.objectPromise.resolve(object);\n              } else {\n                error = validationResult.error;\n                self.objectPromise.reject(error);\n              }\n              break;\n            }\n            default: {\n              controller.enqueue(chunk);\n              break;\n            }\n          }\n        },\n        // invoke onFinish callback and resolve toolResults promise when the stream is about to close:\n        async flush(controller) {\n          try {\n            const finalUsage = usage != null ? usage : {\n              promptTokens: NaN,\n              completionTokens: NaN,\n              totalTokens: NaN\n            };\n            doStreamSpan.setAttributes(\n              selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  \"ai.response.finishReason\": finishReason,\n                  \"ai.response.object\": {\n                    output: () => JSON.stringify(object)\n                  },\n                  \"ai.response.id\": response.id,\n                  \"ai.response.model\": response.modelId,\n                  \"ai.response.timestamp\": response.timestamp.toISOString(),\n                  \"ai.usage.promptTokens\": finalUsage.promptTokens,\n                  \"ai.usage.completionTokens\": finalUsage.completionTokens,\n                  // deprecated\n                  \"ai.finishReason\": finishReason,\n                  \"ai.result.object\": { output: () => JSON.stringify(object) },\n                  // standardized gen-ai llm span attributes:\n                  \"gen_ai.response.finish_reasons\": [finishReason],\n                  \"gen_ai.response.id\": response.id,\n                  \"gen_ai.response.model\": response.modelId,\n                  \"gen_ai.usage.input_tokens\": finalUsage.promptTokens,\n                  \"gen_ai.usage.output_tokens\": finalUsage.completionTokens\n                }\n              })\n            );\n            doStreamSpan.end();\n            rootSpan.setAttributes(\n              selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  \"ai.usage.promptTokens\": finalUsage.promptTokens,\n                  \"ai.usage.completionTokens\": finalUsage.completionTokens,\n                  \"ai.response.object\": {\n                    output: () => JSON.stringify(object)\n                  },\n                  // deprecated\n                  \"ai.result.object\": { output: () => JSON.stringify(object) }\n                }\n              })\n            );\n            await (onFinish == null ? void 0 : onFinish({\n              usage: finalUsage,\n              object,\n              error,\n              rawResponse,\n              response: {\n                ...response,\n                headers: rawResponse == null ? void 0 : rawResponse.headers\n              },\n              warnings,\n              experimental_providerMetadata: providerMetadata\n            }));\n          } catch (error2) {\n            controller.error(error2);\n          } finally {\n            rootSpan.end();\n          }\n        }\n      })\n    );\n  }\n  get object() {\n    return this.objectPromise.value;\n  }\n  get partialObjectStream() {\n    return createAsyncIterableStream(this.originalStream, {\n      transform(chunk, controller) {\n        switch (chunk.type) {\n          case \"object\":\n            controller.enqueue(chunk.object);\n            break;\n          case \"text-delta\":\n          case \"finish\":\n            break;\n          case \"error\":\n            controller.error(chunk.error);\n            break;\n          default: {\n            const _exhaustiveCheck = chunk;\n            throw new Error(`Unsupported chunk type: ${_exhaustiveCheck}`);\n          }\n        }\n      }\n    });\n  }\n  get elementStream() {\n    return this.outputStrategy.createElementStream(this.originalStream);\n  }\n  get textStream() {\n    return createAsyncIterableStream(this.originalStream, {\n      transform(chunk, controller) {\n        switch (chunk.type) {\n          case \"text-delta\":\n            controller.enqueue(chunk.textDelta);\n            break;\n          case \"object\":\n          case \"finish\":\n            break;\n          case \"error\":\n            controller.error(chunk.error);\n            break;\n          default: {\n            const _exhaustiveCheck = chunk;\n            throw new Error(`Unsupported chunk type: ${_exhaustiveCheck}`);\n          }\n        }\n      }\n    });\n  }\n  get fullStream() {\n    return createAsyncIterableStream(this.originalStream, {\n      transform(chunk, controller) {\n        controller.enqueue(chunk);\n      }\n    });\n  }\n  pipeTextStreamToResponse(response, init) {\n    writeToServerResponse({\n      response,\n      status: init == null ? void 0 : init.status,\n      statusText: init == null ? void 0 : init.statusText,\n      headers: prepareOutgoingHttpHeaders(init, {\n        contentType: \"text/plain; charset=utf-8\"\n      }),\n      stream: this.textStream.pipeThrough(new TextEncoderStream())\n    });\n  }\n  toTextStreamResponse(init) {\n    var _a11;\n    return new Response(this.textStream.pipeThrough(new TextEncoderStream()), {\n      status: (_a11 = init == null ? void 0 : init.status) != null ? _a11 : 200,\n      headers: prepareResponseHeaders(init, {\n        contentType: \"text/plain; charset=utf-8\"\n      })\n    });\n  }\n};\nvar experimental_streamObject = streamObject;\n\n// core/generate-text/generate-text.ts\nimport { createIdGenerator as createIdGenerator3 } from \"@ai-sdk/provider-utils\";\n\n// errors/index.ts\nimport {\n  AISDKError as AISDKError10,\n  APICallError as APICallError2,\n  EmptyResponseBodyError,\n  InvalidPromptError as InvalidPromptError2,\n  InvalidResponseDataError,\n  JSONParseError,\n  LoadAPIKeyError,\n  NoContentGeneratedError,\n  NoSuchModelError,\n  TypeValidationError as TypeValidationError2,\n  UnsupportedFunctionalityError as UnsupportedFunctionalityError2\n} from \"@ai-sdk/provider\";\n\n// errors/invalid-tool-arguments-error.ts\nimport { AISDKError as AISDKError8, getErrorMessage as getErrorMessage2 } from \"@ai-sdk/provider\";\nvar name8 = \"AI_InvalidToolArgumentsError\";\nvar marker8 = `vercel.ai.error.${name8}`;\nvar symbol8 = Symbol.for(marker8);\nvar _a8;\nvar InvalidToolArgumentsError = class extends AISDKError8 {\n  constructor({\n    toolArgs,\n    toolName,\n    cause,\n    message = `Invalid arguments for tool ${toolName}: ${getErrorMessage2(\n      cause\n    )}`\n  }) {\n    super({ name: name8, message, cause });\n    this[_a8] = true;\n    this.toolArgs = toolArgs;\n    this.toolName = toolName;\n  }\n  static isInstance(error) {\n    return AISDKError8.hasMarker(error, marker8);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isInvalidToolArgumentsError(error) {\n    return error instanceof Error && error.name === name8 && typeof error.toolName === \"string\" && typeof error.toolArgs === \"string\";\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      stack: this.stack,\n      toolName: this.toolName,\n      toolArgs: this.toolArgs\n    };\n  }\n};\n_a8 = symbol8;\n\n// errors/no-such-tool-error.ts\nimport { AISDKError as AISDKError9 } from \"@ai-sdk/provider\";\nvar name9 = \"AI_NoSuchToolError\";\nvar marker9 = `vercel.ai.error.${name9}`;\nvar symbol9 = Symbol.for(marker9);\nvar _a9;\nvar NoSuchToolError = class extends AISDKError9 {\n  constructor({\n    toolName,\n    availableTools = void 0,\n    message = `Model tried to call unavailable tool '${toolName}'. ${availableTools === void 0 ? \"No tools are available.\" : `Available tools: ${availableTools.join(\", \")}.`}`\n  }) {\n    super({ name: name9, message });\n    this[_a9] = true;\n    this.toolName = toolName;\n    this.availableTools = availableTools;\n  }\n  static isInstance(error) {\n    return AISDKError9.hasMarker(error, marker9);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isNoSuchToolError(error) {\n    return error instanceof Error && error.name === name9 && \"toolName\" in error && error.toolName != void 0 && typeof error.name === \"string\";\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      toolName: this.toolName,\n      availableTools: this.availableTools\n    };\n  }\n};\n_a9 = symbol9;\n\n// core/prompt/prepare-tools-and-tool-choice.ts\nimport { asSchema as asSchema2 } from \"@ai-sdk/ui-utils\";\n\n// core/util/is-non-empty-object.ts\nfunction isNonEmptyObject(object) {\n  return object != null && Object.keys(object).length > 0;\n}\n\n// core/prompt/prepare-tools-and-tool-choice.ts\nfunction prepareToolsAndToolChoice({\n  tools,\n  toolChoice,\n  activeTools\n}) {\n  if (!isNonEmptyObject(tools)) {\n    return {\n      tools: void 0,\n      toolChoice: void 0\n    };\n  }\n  const filteredTools = activeTools != null ? Object.entries(tools).filter(\n    ([name11]) => activeTools.includes(name11)\n  ) : Object.entries(tools);\n  return {\n    tools: filteredTools.map(([name11, tool2]) => {\n      const toolType = tool2.type;\n      switch (toolType) {\n        case void 0:\n        case \"function\":\n          return {\n            type: \"function\",\n            name: name11,\n            description: tool2.description,\n            parameters: asSchema2(tool2.parameters).jsonSchema\n          };\n        case \"provider-defined\":\n          return {\n            type: \"provider-defined\",\n            name: name11,\n            id: tool2.id,\n            args: tool2.args\n          };\n        default: {\n          const exhaustiveCheck = toolType;\n          throw new Error(`Unsupported tool type: ${exhaustiveCheck}`);\n        }\n      }\n    }),\n    toolChoice: toolChoice == null ? { type: \"auto\" } : typeof toolChoice === \"string\" ? { type: toolChoice } : { type: \"tool\", toolName: toolChoice.toolName }\n  };\n}\n\n// core/util/split-on-last-whitespace.ts\nvar lastWhitespaceRegexp = /^([\\s\\S]*?)(\\s+)(\\S*)$/;\nfunction splitOnLastWhitespace(text) {\n  const match = text.match(lastWhitespaceRegexp);\n  return match ? { prefix: match[1], whitespace: match[2], suffix: match[3] } : void 0;\n}\n\n// core/util/remove-text-after-last-whitespace.ts\nfunction removeTextAfterLastWhitespace(text) {\n  const match = splitOnLastWhitespace(text);\n  return match ? match.prefix + match.whitespace : text;\n}\n\n// core/generate-text/parse-tool-call.ts\nimport { safeParseJSON as safeParseJSON2, safeValidateTypes as safeValidateTypes3 } from \"@ai-sdk/provider-utils\";\nimport { asSchema as asSchema3 } from \"@ai-sdk/ui-utils\";\nfunction parseToolCall({\n  toolCall,\n  tools\n}) {\n  const toolName = toolCall.toolName;\n  if (tools == null) {\n    throw new NoSuchToolError({ toolName: toolCall.toolName });\n  }\n  const tool2 = tools[toolName];\n  if (tool2 == null) {\n    throw new NoSuchToolError({\n      toolName: toolCall.toolName,\n      availableTools: Object.keys(tools)\n    });\n  }\n  const schema = asSchema3(tool2.parameters);\n  const parseResult = toolCall.args.trim() === \"\" ? safeValidateTypes3({ value: {}, schema }) : safeParseJSON2({ text: toolCall.args, schema });\n  if (parseResult.success === false) {\n    throw new InvalidToolArgumentsError({\n      toolName,\n      toolArgs: toolCall.args,\n      cause: parseResult.error\n    });\n  }\n  return {\n    type: \"tool-call\",\n    toolCallId: toolCall.toolCallId,\n    toolName,\n    args: parseResult.value\n  };\n}\n\n// core/generate-text/to-response-messages.ts\nfunction toResponseMessages({\n  text = \"\",\n  tools,\n  toolCalls,\n  toolResults\n}) {\n  const responseMessages = [];\n  responseMessages.push({\n    role: \"assistant\",\n    content: [{ type: \"text\", text }, ...toolCalls]\n  });\n  if (toolResults.length > 0) {\n    responseMessages.push({\n      role: \"tool\",\n      content: toolResults.map((toolResult) => {\n        const tool2 = tools[toolResult.toolName];\n        return (tool2 == null ? void 0 : tool2.experimental_toToolResultContent) != null ? {\n          type: \"tool-result\",\n          toolCallId: toolResult.toolCallId,\n          toolName: toolResult.toolName,\n          result: tool2.experimental_toToolResultContent(toolResult.result),\n          experimental_content: tool2.experimental_toToolResultContent(\n            toolResult.result\n          )\n        } : {\n          type: \"tool-result\",\n          toolCallId: toolResult.toolCallId,\n          toolName: toolResult.toolName,\n          result: toolResult.result\n        };\n      })\n    });\n  }\n  return responseMessages;\n}\n\n// core/generate-text/generate-text.ts\nvar originalGenerateId3 = createIdGenerator3({ prefix: \"aitxt\", size: 24 });\nasync function generateText({\n  model,\n  tools,\n  toolChoice,\n  system,\n  prompt,\n  messages,\n  maxRetries,\n  abortSignal,\n  headers,\n  maxAutomaticRoundtrips = 0,\n  maxToolRoundtrips = maxAutomaticRoundtrips,\n  maxSteps = maxToolRoundtrips != null ? maxToolRoundtrips + 1 : 1,\n  experimental_continuationSteps,\n  experimental_continueSteps: continueSteps = experimental_continuationSteps != null ? experimental_continuationSteps : false,\n  experimental_telemetry: telemetry,\n  experimental_providerMetadata: providerMetadata,\n  experimental_activeTools: activeTools,\n  _internal: {\n    generateId: generateId3 = originalGenerateId3,\n    currentDate = () => /* @__PURE__ */ new Date()\n  } = {},\n  onStepFinish,\n  ...settings\n}) {\n  if (maxSteps < 1) {\n    throw new InvalidArgumentError({\n      parameter: \"maxSteps\",\n      value: maxSteps,\n      message: \"maxSteps must be at least 1\"\n    });\n  }\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { ...settings, maxRetries }\n  });\n  const initialPrompt = standardizePrompt({\n    prompt: { system, prompt, messages },\n    tools\n  });\n  const tracer = getTracer(telemetry);\n  return recordSpan({\n    name: \"ai.generateText\",\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({\n          operationId: \"ai.generateText\",\n          telemetry\n        }),\n        ...baseTelemetryAttributes,\n        // specific settings that only make sense on the outer level:\n        \"ai.prompt\": {\n          input: () => JSON.stringify({ system, prompt, messages })\n        },\n        \"ai.settings.maxSteps\": maxSteps\n      }\n    }),\n    tracer,\n    fn: async (span) => {\n      var _a11, _b, _c, _d, _e, _f;\n      const retry = retryWithExponentialBackoff({ maxRetries });\n      const mode = {\n        type: \"regular\",\n        ...prepareToolsAndToolChoice({ tools, toolChoice, activeTools })\n      };\n      const callSettings = prepareCallSettings(settings);\n      let currentModelResponse;\n      let currentToolCalls = [];\n      let currentToolResults = [];\n      let stepCount = 0;\n      const responseMessages = [];\n      let text = \"\";\n      const steps = [];\n      const usage = {\n        completionTokens: 0,\n        promptTokens: 0,\n        totalTokens: 0\n      };\n      let stepType = \"initial\";\n      do {\n        if (stepCount === 1) {\n          initialPrompt.type = \"messages\";\n        }\n        const promptFormat = stepCount === 0 ? initialPrompt.type : \"messages\";\n        const promptMessages = await convertToLanguageModelPrompt({\n          prompt: {\n            type: promptFormat,\n            system: initialPrompt.system,\n            messages: [...initialPrompt.messages, ...responseMessages]\n          },\n          modelSupportsImageUrls: model.supportsImageUrls,\n          modelSupportsUrl: model.supportsUrl\n        });\n        currentModelResponse = await retry(\n          () => recordSpan({\n            name: \"ai.generateText.doGenerate\",\n            attributes: selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                ...assembleOperationName({\n                  operationId: \"ai.generateText.doGenerate\",\n                  telemetry\n                }),\n                ...baseTelemetryAttributes,\n                \"ai.prompt.format\": { input: () => promptFormat },\n                \"ai.prompt.messages\": {\n                  input: () => JSON.stringify(promptMessages)\n                },\n                \"ai.prompt.tools\": {\n                  // convert the language model level tools:\n                  input: () => {\n                    var _a12;\n                    return (_a12 = mode.tools) == null ? void 0 : _a12.map((tool2) => JSON.stringify(tool2));\n                  }\n                },\n                \"ai.prompt.toolChoice\": {\n                  input: () => mode.toolChoice != null ? JSON.stringify(mode.toolChoice) : void 0\n                },\n                // standardized gen-ai llm span attributes:\n                \"gen_ai.system\": model.provider,\n                \"gen_ai.request.model\": model.modelId,\n                \"gen_ai.request.frequency_penalty\": settings.frequencyPenalty,\n                \"gen_ai.request.max_tokens\": settings.maxTokens,\n                \"gen_ai.request.presence_penalty\": settings.presencePenalty,\n                \"gen_ai.request.stop_sequences\": settings.stopSequences,\n                \"gen_ai.request.temperature\": settings.temperature,\n                \"gen_ai.request.top_k\": settings.topK,\n                \"gen_ai.request.top_p\": settings.topP\n              }\n            }),\n            tracer,\n            fn: async (span2) => {\n              var _a12, _b2, _c2, _d2, _e2, _f2;\n              const result = await model.doGenerate({\n                mode,\n                ...callSettings,\n                inputFormat: promptFormat,\n                prompt: promptMessages,\n                providerMetadata,\n                abortSignal,\n                headers\n              });\n              const responseData = {\n                id: (_b2 = (_a12 = result.response) == null ? void 0 : _a12.id) != null ? _b2 : generateId3(),\n                timestamp: (_d2 = (_c2 = result.response) == null ? void 0 : _c2.timestamp) != null ? _d2 : currentDate(),\n                modelId: (_f2 = (_e2 = result.response) == null ? void 0 : _e2.modelId) != null ? _f2 : model.modelId\n              };\n              span2.setAttributes(\n                selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    \"ai.response.finishReason\": result.finishReason,\n                    \"ai.response.text\": {\n                      output: () => result.text\n                    },\n                    \"ai.response.toolCalls\": {\n                      output: () => JSON.stringify(result.toolCalls)\n                    },\n                    \"ai.response.id\": responseData.id,\n                    \"ai.response.model\": responseData.modelId,\n                    \"ai.response.timestamp\": responseData.timestamp.toISOString(),\n                    \"ai.usage.promptTokens\": result.usage.promptTokens,\n                    \"ai.usage.completionTokens\": result.usage.completionTokens,\n                    // deprecated:\n                    \"ai.finishReason\": result.finishReason,\n                    \"ai.result.text\": {\n                      output: () => result.text\n                    },\n                    \"ai.result.toolCalls\": {\n                      output: () => JSON.stringify(result.toolCalls)\n                    },\n                    // standardized gen-ai llm span attributes:\n                    \"gen_ai.response.finish_reasons\": [result.finishReason],\n                    \"gen_ai.response.id\": responseData.id,\n                    \"gen_ai.response.model\": responseData.modelId,\n                    \"gen_ai.usage.input_tokens\": result.usage.promptTokens,\n                    \"gen_ai.usage.output_tokens\": result.usage.completionTokens\n                  }\n                })\n              );\n              return { ...result, response: responseData };\n            }\n          })\n        );\n        currentToolCalls = ((_a11 = currentModelResponse.toolCalls) != null ? _a11 : []).map(\n          (modelToolCall) => parseToolCall({ toolCall: modelToolCall, tools })\n        );\n        currentToolResults = tools == null ? [] : await executeTools({\n          toolCalls: currentToolCalls,\n          tools,\n          tracer,\n          telemetry,\n          abortSignal\n        });\n        const currentUsage = calculateLanguageModelUsage(\n          currentModelResponse.usage\n        );\n        usage.completionTokens += currentUsage.completionTokens;\n        usage.promptTokens += currentUsage.promptTokens;\n        usage.totalTokens += currentUsage.totalTokens;\n        let nextStepType = \"done\";\n        if (++stepCount < maxSteps) {\n          if (continueSteps && currentModelResponse.finishReason === \"length\" && // only use continue when there are no tool calls:\n          currentToolCalls.length === 0) {\n            nextStepType = \"continue\";\n          } else if (\n            // there are tool calls:\n            currentToolCalls.length > 0 && // all current tool calls have results:\n            currentToolResults.length === currentToolCalls.length\n          ) {\n            nextStepType = \"tool-result\";\n          }\n        }\n        const originalText = (_b = currentModelResponse.text) != null ? _b : \"\";\n        const stepTextLeadingWhitespaceTrimmed = stepType === \"continue\" && // only for continue steps\n        text.trimEnd() !== text ? originalText.trimStart() : originalText;\n        const stepText = nextStepType === \"continue\" ? removeTextAfterLastWhitespace(stepTextLeadingWhitespaceTrimmed) : stepTextLeadingWhitespaceTrimmed;\n        text = nextStepType === \"continue\" || stepType === \"continue\" ? text + stepText : stepText;\n        if (stepType === \"continue\") {\n          const lastMessage = responseMessages[responseMessages.length - 1];\n          if (typeof lastMessage.content === \"string\") {\n            lastMessage.content += stepText;\n          } else {\n            lastMessage.content.push({\n              text: stepText,\n              type: \"text\"\n            });\n          }\n        } else {\n          responseMessages.push(\n            ...toResponseMessages({\n              text,\n              tools: tools != null ? tools : {},\n              toolCalls: currentToolCalls,\n              toolResults: currentToolResults\n            })\n          );\n        }\n        const currentStepResult = {\n          stepType,\n          text: stepText,\n          toolCalls: currentToolCalls,\n          toolResults: currentToolResults,\n          finishReason: currentModelResponse.finishReason,\n          usage: currentUsage,\n          warnings: currentModelResponse.warnings,\n          logprobs: currentModelResponse.logprobs,\n          request: (_c = currentModelResponse.request) != null ? _c : {},\n          response: {\n            ...currentModelResponse.response,\n            headers: (_d = currentModelResponse.rawResponse) == null ? void 0 : _d.headers,\n            // deep clone msgs to avoid mutating past messages in multi-step:\n            messages: JSON.parse(JSON.stringify(responseMessages))\n          },\n          experimental_providerMetadata: currentModelResponse.providerMetadata,\n          isContinued: nextStepType === \"continue\"\n        };\n        steps.push(currentStepResult);\n        await (onStepFinish == null ? void 0 : onStepFinish(currentStepResult));\n        stepType = nextStepType;\n      } while (stepType !== \"done\");\n      span.setAttributes(\n        selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            \"ai.response.finishReason\": currentModelResponse.finishReason,\n            \"ai.response.text\": {\n              output: () => currentModelResponse.text\n            },\n            \"ai.response.toolCalls\": {\n              output: () => JSON.stringify(currentModelResponse.toolCalls)\n            },\n            \"ai.usage.promptTokens\": currentModelResponse.usage.promptTokens,\n            \"ai.usage.completionTokens\": currentModelResponse.usage.completionTokens,\n            // deprecated:\n            \"ai.finishReason\": currentModelResponse.finishReason,\n            \"ai.result.text\": {\n              output: () => currentModelResponse.text\n            },\n            \"ai.result.toolCalls\": {\n              output: () => JSON.stringify(currentModelResponse.toolCalls)\n            }\n          }\n        })\n      );\n      return new DefaultGenerateTextResult({\n        text,\n        toolCalls: currentToolCalls,\n        toolResults: currentToolResults,\n        finishReason: currentModelResponse.finishReason,\n        usage,\n        warnings: currentModelResponse.warnings,\n        request: (_e = currentModelResponse.request) != null ? _e : {},\n        response: {\n          ...currentModelResponse.response,\n          headers: (_f = currentModelResponse.rawResponse) == null ? void 0 : _f.headers,\n          messages: responseMessages\n        },\n        logprobs: currentModelResponse.logprobs,\n        responseMessages,\n        steps,\n        providerMetadata: currentModelResponse.providerMetadata\n      });\n    }\n  });\n}\nasync function executeTools({\n  toolCalls,\n  tools,\n  tracer,\n  telemetry,\n  abortSignal\n}) {\n  const toolResults = await Promise.all(\n    toolCalls.map(async (toolCall) => {\n      const tool2 = tools[toolCall.toolName];\n      if ((tool2 == null ? void 0 : tool2.execute) == null) {\n        return void 0;\n      }\n      const result = await recordSpan({\n        name: \"ai.toolCall\",\n        attributes: selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            ...assembleOperationName({\n              operationId: \"ai.toolCall\",\n              telemetry\n            }),\n            \"ai.toolCall.name\": toolCall.toolName,\n            \"ai.toolCall.id\": toolCall.toolCallId,\n            \"ai.toolCall.args\": {\n              output: () => JSON.stringify(toolCall.args)\n            }\n          }\n        }),\n        tracer,\n        fn: async (span) => {\n          const result2 = await tool2.execute(toolCall.args, { abortSignal });\n          try {\n            span.setAttributes(\n              selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  \"ai.toolCall.result\": {\n                    output: () => JSON.stringify(result2)\n                  }\n                }\n              })\n            );\n          } catch (ignored) {\n          }\n          return result2;\n        }\n      });\n      return {\n        toolCallId: toolCall.toolCallId,\n        toolName: toolCall.toolName,\n        args: toolCall.args,\n        result\n      };\n    })\n  );\n  return toolResults.filter(\n    (result) => result != null\n  );\n}\nvar DefaultGenerateTextResult = class {\n  constructor(options) {\n    this.text = options.text;\n    this.toolCalls = options.toolCalls;\n    this.toolResults = options.toolResults;\n    this.finishReason = options.finishReason;\n    this.usage = options.usage;\n    this.warnings = options.warnings;\n    this.request = options.request;\n    this.response = options.response;\n    this.responseMessages = options.responseMessages;\n    this.roundtrips = options.steps;\n    this.steps = options.steps;\n    this.experimental_providerMetadata = options.providerMetadata;\n    this.rawResponse = {\n      headers: options.response.headers\n    };\n    this.logprobs = options.logprobs;\n  }\n};\nvar experimental_generateText = generateText;\n\n// core/generate-text/stream-text.ts\nimport { createIdGenerator as createIdGenerator4 } from \"@ai-sdk/provider-utils\";\n\n// core/util/create-stitchable-stream.ts\nfunction createStitchableStream() {\n  let innerStreamReaders = [];\n  let controller = null;\n  let isClosed = false;\n  const processPull = async () => {\n    if (isClosed && innerStreamReaders.length === 0) {\n      controller == null ? void 0 : controller.close();\n      return;\n    }\n    if (innerStreamReaders.length === 0) {\n      return;\n    }\n    try {\n      const { value, done } = await innerStreamReaders[0].read();\n      if (done) {\n        innerStreamReaders.shift();\n        if (innerStreamReaders.length > 0) {\n          await processPull();\n        } else if (isClosed) {\n          controller == null ? void 0 : controller.close();\n        }\n      } else {\n        controller == null ? void 0 : controller.enqueue(value);\n      }\n    } catch (error) {\n      controller == null ? void 0 : controller.error(error);\n      innerStreamReaders.shift();\n      if (isClosed && innerStreamReaders.length === 0) {\n        controller == null ? void 0 : controller.close();\n      }\n    }\n  };\n  return {\n    stream: new ReadableStream({\n      start(controllerParam) {\n        controller = controllerParam;\n      },\n      pull: processPull,\n      async cancel() {\n        for (const reader of innerStreamReaders) {\n          await reader.cancel();\n        }\n        innerStreamReaders = [];\n        isClosed = true;\n      }\n    }),\n    addStream: (innerStream) => {\n      if (isClosed) {\n        throw new Error(\"Cannot add inner stream: outer stream is closed\");\n      }\n      innerStreamReaders.push(innerStream.getReader());\n    },\n    close: () => {\n      isClosed = true;\n      if (innerStreamReaders.length === 0) {\n        controller == null ? void 0 : controller.close();\n      }\n    }\n  };\n}\n\n// core/util/merge-streams.ts\nfunction mergeStreams(stream1, stream2) {\n  const reader1 = stream1.getReader();\n  const reader2 = stream2.getReader();\n  let lastRead1 = void 0;\n  let lastRead2 = void 0;\n  let stream1Done = false;\n  let stream2Done = false;\n  async function readStream1(controller) {\n    try {\n      if (lastRead1 == null) {\n        lastRead1 = reader1.read();\n      }\n      const result = await lastRead1;\n      lastRead1 = void 0;\n      if (!result.done) {\n        controller.enqueue(result.value);\n      } else {\n        controller.close();\n      }\n    } catch (error) {\n      controller.error(error);\n    }\n  }\n  async function readStream2(controller) {\n    try {\n      if (lastRead2 == null) {\n        lastRead2 = reader2.read();\n      }\n      const result = await lastRead2;\n      lastRead2 = void 0;\n      if (!result.done) {\n        controller.enqueue(result.value);\n      } else {\n        controller.close();\n      }\n    } catch (error) {\n      controller.error(error);\n    }\n  }\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        if (stream1Done) {\n          await readStream2(controller);\n          return;\n        }\n        if (stream2Done) {\n          await readStream1(controller);\n          return;\n        }\n        if (lastRead1 == null) {\n          lastRead1 = reader1.read();\n        }\n        if (lastRead2 == null) {\n          lastRead2 = reader2.read();\n        }\n        const { result, reader } = await Promise.race([\n          lastRead1.then((result2) => ({ result: result2, reader: reader1 })),\n          lastRead2.then((result2) => ({ result: result2, reader: reader2 }))\n        ]);\n        if (!result.done) {\n          controller.enqueue(result.value);\n        }\n        if (reader === reader1) {\n          lastRead1 = void 0;\n          if (result.done) {\n            await readStream2(controller);\n            stream1Done = true;\n          }\n        } else {\n          lastRead2 = void 0;\n          if (result.done) {\n            stream2Done = true;\n            await readStream1(controller);\n          }\n        }\n      } catch (error) {\n        controller.error(error);\n      }\n    },\n    cancel() {\n      reader1.cancel();\n      reader2.cancel();\n    }\n  });\n}\n\n// core/generate-text/run-tools-transformation.ts\nimport { generateId } from \"@ai-sdk/ui-utils\";\nfunction runToolsTransformation({\n  tools,\n  generatorStream,\n  toolCallStreaming,\n  tracer,\n  telemetry,\n  abortSignal\n}) {\n  let toolResultsStreamController = null;\n  const toolResultsStream = new ReadableStream({\n    start(controller) {\n      toolResultsStreamController = controller;\n    }\n  });\n  const activeToolCalls = {};\n  const outstandingToolResults = /* @__PURE__ */ new Set();\n  let canClose = false;\n  let finishChunk = void 0;\n  function attemptClose() {\n    if (canClose && outstandingToolResults.size === 0) {\n      if (finishChunk != null) {\n        toolResultsStreamController.enqueue(finishChunk);\n      }\n      toolResultsStreamController.close();\n    }\n  }\n  const forwardStream = new TransformStream({\n    transform(chunk, controller) {\n      const chunkType = chunk.type;\n      switch (chunkType) {\n        case \"text-delta\":\n        case \"response-metadata\":\n        case \"error\": {\n          controller.enqueue(chunk);\n          break;\n        }\n        case \"tool-call-delta\": {\n          if (toolCallStreaming) {\n            if (!activeToolCalls[chunk.toolCallId]) {\n              controller.enqueue({\n                type: \"tool-call-streaming-start\",\n                toolCallId: chunk.toolCallId,\n                toolName: chunk.toolName\n              });\n              activeToolCalls[chunk.toolCallId] = true;\n            }\n            controller.enqueue({\n              type: \"tool-call-delta\",\n              toolCallId: chunk.toolCallId,\n              toolName: chunk.toolName,\n              argsTextDelta: chunk.argsTextDelta\n            });\n          }\n          break;\n        }\n        case \"tool-call\": {\n          const toolName = chunk.toolName;\n          if (tools == null) {\n            toolResultsStreamController.enqueue({\n              type: \"error\",\n              error: new NoSuchToolError({ toolName: chunk.toolName })\n            });\n            break;\n          }\n          const tool2 = tools[toolName];\n          if (tool2 == null) {\n            toolResultsStreamController.enqueue({\n              type: \"error\",\n              error: new NoSuchToolError({\n                toolName: chunk.toolName,\n                availableTools: Object.keys(tools)\n              })\n            });\n            break;\n          }\n          try {\n            const toolCall = parseToolCall({\n              toolCall: chunk,\n              tools\n            });\n            controller.enqueue(toolCall);\n            if (tool2.execute != null) {\n              const toolExecutionId = generateId();\n              outstandingToolResults.add(toolExecutionId);\n              recordSpan({\n                name: \"ai.toolCall\",\n                attributes: selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    ...assembleOperationName({\n                      operationId: \"ai.toolCall\",\n                      telemetry\n                    }),\n                    \"ai.toolCall.name\": toolCall.toolName,\n                    \"ai.toolCall.id\": toolCall.toolCallId,\n                    \"ai.toolCall.args\": {\n                      output: () => JSON.stringify(toolCall.args)\n                    }\n                  }\n                }),\n                tracer,\n                fn: async (span) => tool2.execute(toolCall.args, { abortSignal }).then(\n                  (result) => {\n                    toolResultsStreamController.enqueue({\n                      ...toolCall,\n                      type: \"tool-result\",\n                      result\n                    });\n                    outstandingToolResults.delete(toolExecutionId);\n                    attemptClose();\n                    try {\n                      span.setAttributes(\n                        selectTelemetryAttributes({\n                          telemetry,\n                          attributes: {\n                            \"ai.toolCall.result\": {\n                              output: () => JSON.stringify(result)\n                            }\n                          }\n                        })\n                      );\n                    } catch (ignored) {\n                    }\n                  },\n                  (error) => {\n                    toolResultsStreamController.enqueue({\n                      type: \"error\",\n                      error\n                    });\n                    outstandingToolResults.delete(toolExecutionId);\n                    attemptClose();\n                  }\n                )\n              });\n            }\n          } catch (error) {\n            toolResultsStreamController.enqueue({\n              type: \"error\",\n              error\n            });\n          }\n          break;\n        }\n        case \"finish\": {\n          finishChunk = {\n            type: \"finish\",\n            finishReason: chunk.finishReason,\n            logprobs: chunk.logprobs,\n            usage: calculateLanguageModelUsage(chunk.usage),\n            experimental_providerMetadata: chunk.providerMetadata\n          };\n          break;\n        }\n        default: {\n          const _exhaustiveCheck = chunkType;\n          throw new Error(`Unhandled chunk type: ${_exhaustiveCheck}`);\n        }\n      }\n    },\n    flush() {\n      canClose = true;\n      attemptClose();\n    }\n  });\n  return new ReadableStream({\n    async start(controller) {\n      return Promise.all([\n        generatorStream.pipeThrough(forwardStream).pipeTo(\n          new WritableStream({\n            write(chunk) {\n              controller.enqueue(chunk);\n            },\n            close() {\n            }\n          })\n        ),\n        toolResultsStream.pipeTo(\n          new WritableStream({\n            write(chunk) {\n              controller.enqueue(chunk);\n            },\n            close() {\n              controller.close();\n            }\n          })\n        )\n      ]);\n    }\n  });\n}\n\n// core/generate-text/stream-text.ts\nvar originalGenerateId4 = createIdGenerator4({ prefix: \"aitxt\", size: 24 });\nasync function streamText({\n  model,\n  tools,\n  toolChoice,\n  system,\n  prompt,\n  messages,\n  maxRetries,\n  abortSignal,\n  headers,\n  maxToolRoundtrips = 0,\n  maxSteps = maxToolRoundtrips != null ? maxToolRoundtrips + 1 : 1,\n  experimental_continueSteps: continueSteps = false,\n  experimental_telemetry: telemetry,\n  experimental_providerMetadata: providerMetadata,\n  experimental_toolCallStreaming: toolCallStreaming = false,\n  experimental_activeTools: activeTools,\n  onChunk,\n  onFinish,\n  onStepFinish,\n  _internal: {\n    now: now2 = now,\n    generateId: generateId3 = originalGenerateId4,\n    currentDate = () => /* @__PURE__ */ new Date()\n  } = {},\n  ...settings\n}) {\n  if (maxSteps < 1) {\n    throw new InvalidArgumentError({\n      parameter: \"maxSteps\",\n      value: maxSteps,\n      message: \"maxSteps must be at least 1\"\n    });\n  }\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { ...settings, maxRetries }\n  });\n  const tracer = getTracer(telemetry);\n  const initialPrompt = standardizePrompt({\n    prompt: { system, prompt, messages },\n    tools\n  });\n  return recordSpan({\n    name: \"ai.streamText\",\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({ operationId: \"ai.streamText\", telemetry }),\n        ...baseTelemetryAttributes,\n        // specific settings that only make sense on the outer level:\n        \"ai.prompt\": {\n          input: () => JSON.stringify({ system, prompt, messages })\n        },\n        \"ai.settings.maxSteps\": maxSteps\n      }\n    }),\n    tracer,\n    endWhenDone: false,\n    fn: async (rootSpan) => {\n      const retry = retryWithExponentialBackoff({ maxRetries });\n      const startStep = async ({\n        responseMessages\n      }) => {\n        const promptFormat = responseMessages.length === 0 ? initialPrompt.type : \"messages\";\n        const promptMessages = await convertToLanguageModelPrompt({\n          prompt: {\n            type: promptFormat,\n            system: initialPrompt.system,\n            messages: [...initialPrompt.messages, ...responseMessages]\n          },\n          modelSupportsImageUrls: model.supportsImageUrls,\n          modelSupportsUrl: model.supportsUrl\n        });\n        const mode = {\n          type: \"regular\",\n          ...prepareToolsAndToolChoice({ tools, toolChoice, activeTools })\n        };\n        const {\n          result: { stream: stream2, warnings: warnings2, rawResponse: rawResponse2, request: request2 },\n          doStreamSpan: doStreamSpan2,\n          startTimestampMs: startTimestampMs2\n        } = await retry(\n          () => recordSpan({\n            name: \"ai.streamText.doStream\",\n            attributes: selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                ...assembleOperationName({\n                  operationId: \"ai.streamText.doStream\",\n                  telemetry\n                }),\n                ...baseTelemetryAttributes,\n                \"ai.prompt.format\": {\n                  input: () => promptFormat\n                },\n                \"ai.prompt.messages\": {\n                  input: () => JSON.stringify(promptMessages)\n                },\n                \"ai.prompt.tools\": {\n                  // convert the language model level tools:\n                  input: () => {\n                    var _a11;\n                    return (_a11 = mode.tools) == null ? void 0 : _a11.map((tool2) => JSON.stringify(tool2));\n                  }\n                },\n                \"ai.prompt.toolChoice\": {\n                  input: () => mode.toolChoice != null ? JSON.stringify(mode.toolChoice) : void 0\n                },\n                // standardized gen-ai llm span attributes:\n                \"gen_ai.system\": model.provider,\n                \"gen_ai.request.model\": model.modelId,\n                \"gen_ai.request.frequency_penalty\": settings.frequencyPenalty,\n                \"gen_ai.request.max_tokens\": settings.maxTokens,\n                \"gen_ai.request.presence_penalty\": settings.presencePenalty,\n                \"gen_ai.request.stop_sequences\": settings.stopSequences,\n                \"gen_ai.request.temperature\": settings.temperature,\n                \"gen_ai.request.top_k\": settings.topK,\n                \"gen_ai.request.top_p\": settings.topP\n              }\n            }),\n            tracer,\n            endWhenDone: false,\n            fn: async (doStreamSpan3) => ({\n              startTimestampMs: now2(),\n              // get before the call\n              doStreamSpan: doStreamSpan3,\n              result: await model.doStream({\n                mode,\n                ...prepareCallSettings(settings),\n                inputFormat: promptFormat,\n                prompt: promptMessages,\n                providerMetadata,\n                abortSignal,\n                headers\n              })\n            })\n          })\n        );\n        return {\n          result: {\n            stream: runToolsTransformation({\n              tools,\n              generatorStream: stream2,\n              toolCallStreaming,\n              tracer,\n              telemetry,\n              abortSignal\n            }),\n            warnings: warnings2,\n            request: request2 != null ? request2 : {},\n            rawResponse: rawResponse2\n          },\n          doStreamSpan: doStreamSpan2,\n          startTimestampMs: startTimestampMs2\n        };\n      };\n      const {\n        result: { stream, warnings, rawResponse, request },\n        doStreamSpan,\n        startTimestampMs\n      } = await startStep({ responseMessages: [] });\n      return new DefaultStreamTextResult({\n        stream,\n        warnings,\n        rawResponse,\n        request,\n        onChunk,\n        onFinish,\n        onStepFinish,\n        rootSpan,\n        doStreamSpan,\n        telemetry,\n        startTimestampMs,\n        maxSteps,\n        continueSteps,\n        startStep,\n        modelId: model.modelId,\n        now: now2,\n        currentDate,\n        generateId: generateId3,\n        tools\n      });\n    }\n  });\n}\nvar DefaultStreamTextResult = class {\n  constructor({\n    stream,\n    warnings,\n    rawResponse,\n    request,\n    onChunk,\n    onFinish,\n    onStepFinish,\n    rootSpan,\n    doStreamSpan,\n    telemetry,\n    startTimestampMs,\n    maxSteps,\n    continueSteps,\n    startStep,\n    modelId,\n    now: now2,\n    currentDate,\n    generateId: generateId3,\n    tools\n  }) {\n    this.warnings = warnings;\n    this.rawResponse = rawResponse;\n    const { resolve: resolveUsage, promise: usagePromise } = createResolvablePromise();\n    this.usage = usagePromise;\n    const { resolve: resolveFinishReason, promise: finishReasonPromise } = createResolvablePromise();\n    this.finishReason = finishReasonPromise;\n    const { resolve: resolveText, promise: textPromise } = createResolvablePromise();\n    this.text = textPromise;\n    const { resolve: resolveToolCalls, promise: toolCallsPromise } = createResolvablePromise();\n    this.toolCalls = toolCallsPromise;\n    const { resolve: resolveToolResults, promise: toolResultsPromise } = createResolvablePromise();\n    this.toolResults = toolResultsPromise;\n    const { resolve: resolveSteps, promise: stepsPromise } = createResolvablePromise();\n    this.steps = stepsPromise;\n    const {\n      resolve: resolveProviderMetadata,\n      promise: providerMetadataPromise\n    } = createResolvablePromise();\n    this.experimental_providerMetadata = providerMetadataPromise;\n    const { resolve: resolveRequest, promise: requestPromise } = createResolvablePromise();\n    this.request = requestPromise;\n    const { resolve: resolveResponse, promise: responsePromise } = createResolvablePromise();\n    this.response = responsePromise;\n    const {\n      resolve: resolveResponseMessages,\n      promise: responseMessagesPromise\n    } = createResolvablePromise();\n    this.responseMessages = responseMessagesPromise;\n    const {\n      stream: stitchableStream,\n      addStream,\n      close: closeStitchableStream\n    } = createStitchableStream();\n    this.originalStream = stitchableStream;\n    const stepResults = [];\n    const self = this;\n    function addStepStream({\n      stream: stream2,\n      startTimestamp,\n      doStreamSpan: doStreamSpan2,\n      currentStep,\n      responseMessages,\n      usage = {\n        promptTokens: 0,\n        completionTokens: 0,\n        totalTokens: 0\n      },\n      stepType,\n      previousStepText = \"\",\n      stepRequest,\n      hasLeadingWhitespace\n    }) {\n      const stepToolCalls = [];\n      const stepToolResults = [];\n      let stepFinishReason = \"unknown\";\n      let stepUsage = {\n        promptTokens: 0,\n        completionTokens: 0,\n        totalTokens: 0\n      };\n      let stepProviderMetadata;\n      let stepFirstChunk = true;\n      let stepText = \"\";\n      let fullStepText = stepType === \"continue\" ? previousStepText : \"\";\n      let stepLogProbs;\n      let stepResponse = {\n        id: generateId3(),\n        timestamp: currentDate(),\n        modelId\n      };\n      let chunkBuffer = \"\";\n      let chunkTextPublished = false;\n      let inWhitespacePrefix = true;\n      let hasWhitespaceSuffix = false;\n      async function publishTextChunk({\n        controller,\n        chunk\n      }) {\n        controller.enqueue(chunk);\n        stepText += chunk.textDelta;\n        fullStepText += chunk.textDelta;\n        chunkTextPublished = true;\n        hasWhitespaceSuffix = chunk.textDelta.trimEnd() !== chunk.textDelta;\n        await (onChunk == null ? void 0 : onChunk({ chunk }));\n      }\n      addStream(\n        stream2.pipeThrough(\n          new TransformStream({\n            async transform(chunk, controller) {\n              var _a11, _b, _c;\n              if (stepFirstChunk) {\n                const msToFirstChunk = now2() - startTimestamp;\n                stepFirstChunk = false;\n                doStreamSpan2.addEvent(\"ai.stream.firstChunk\", {\n                  \"ai.response.msToFirstChunk\": msToFirstChunk,\n                  // deprecated:\n                  \"ai.stream.msToFirstChunk\": msToFirstChunk\n                });\n                doStreamSpan2.setAttributes({\n                  \"ai.response.msToFirstChunk\": msToFirstChunk,\n                  // deprecated:\n                  \"ai.stream.msToFirstChunk\": msToFirstChunk\n                });\n              }\n              if (chunk.type === \"text-delta\" && chunk.textDelta.length === 0) {\n                return;\n              }\n              const chunkType = chunk.type;\n              switch (chunkType) {\n                case \"text-delta\": {\n                  if (continueSteps) {\n                    const trimmedChunkText = inWhitespacePrefix && hasLeadingWhitespace ? chunk.textDelta.trimStart() : chunk.textDelta;\n                    if (trimmedChunkText.length === 0) {\n                      break;\n                    }\n                    inWhitespacePrefix = false;\n                    chunkBuffer += trimmedChunkText;\n                    const split = splitOnLastWhitespace(chunkBuffer);\n                    if (split != null) {\n                      chunkBuffer = split.suffix;\n                      await publishTextChunk({\n                        controller,\n                        chunk: {\n                          type: \"text-delta\",\n                          textDelta: split.prefix + split.whitespace\n                        }\n                      });\n                    }\n                  } else {\n                    await publishTextChunk({ controller, chunk });\n                  }\n                  break;\n                }\n                case \"tool-call\": {\n                  controller.enqueue(chunk);\n                  stepToolCalls.push(chunk);\n                  await (onChunk == null ? void 0 : onChunk({ chunk }));\n                  break;\n                }\n                case \"tool-result\": {\n                  controller.enqueue(chunk);\n                  stepToolResults.push(chunk);\n                  await (onChunk == null ? void 0 : onChunk({ chunk }));\n                  break;\n                }\n                case \"response-metadata\": {\n                  stepResponse = {\n                    id: (_a11 = chunk.id) != null ? _a11 : stepResponse.id,\n                    timestamp: (_b = chunk.timestamp) != null ? _b : stepResponse.timestamp,\n                    modelId: (_c = chunk.modelId) != null ? _c : stepResponse.modelId\n                  };\n                  break;\n                }\n                case \"finish\": {\n                  stepUsage = chunk.usage;\n                  stepFinishReason = chunk.finishReason;\n                  stepProviderMetadata = chunk.experimental_providerMetadata;\n                  stepLogProbs = chunk.logprobs;\n                  const msToFinish = now2() - startTimestamp;\n                  doStreamSpan2.addEvent(\"ai.stream.finish\");\n                  doStreamSpan2.setAttributes({\n                    \"ai.response.msToFinish\": msToFinish,\n                    \"ai.response.avgCompletionTokensPerSecond\": 1e3 * stepUsage.completionTokens / msToFinish\n                  });\n                  break;\n                }\n                case \"tool-call-streaming-start\":\n                case \"tool-call-delta\": {\n                  controller.enqueue(chunk);\n                  await (onChunk == null ? void 0 : onChunk({ chunk }));\n                  break;\n                }\n                case \"error\": {\n                  controller.enqueue(chunk);\n                  stepFinishReason = \"error\";\n                  break;\n                }\n                default: {\n                  const exhaustiveCheck = chunkType;\n                  throw new Error(`Unknown chunk type: ${exhaustiveCheck}`);\n                }\n              }\n            },\n            // invoke onFinish callback and resolve toolResults promise when the stream is about to close:\n            async flush(controller) {\n              var _a11;\n              const stepToolCallsJson = stepToolCalls.length > 0 ? JSON.stringify(stepToolCalls) : void 0;\n              let nextStepType = \"done\";\n              if (currentStep + 1 < maxSteps) {\n                if (continueSteps && stepFinishReason === \"length\" && // only use continue when there are no tool calls:\n                stepToolCalls.length === 0) {\n                  nextStepType = \"continue\";\n                } else if (\n                  // there are tool calls:\n                  stepToolCalls.length > 0 && // all current tool calls have results:\n                  stepToolResults.length === stepToolCalls.length\n                ) {\n                  nextStepType = \"tool-result\";\n                }\n              }\n              if (continueSteps && chunkBuffer.length > 0 && (nextStepType !== \"continue\" || // when the next step is a regular step, publish the buffer\n              stepType === \"continue\" && !chunkTextPublished)) {\n                await publishTextChunk({\n                  controller,\n                  chunk: {\n                    type: \"text-delta\",\n                    textDelta: chunkBuffer\n                  }\n                });\n                chunkBuffer = \"\";\n              }\n              try {\n                doStreamSpan2.setAttributes(\n                  selectTelemetryAttributes({\n                    telemetry,\n                    attributes: {\n                      \"ai.response.finishReason\": stepFinishReason,\n                      \"ai.response.text\": { output: () => stepText },\n                      \"ai.response.toolCalls\": {\n                        output: () => stepToolCallsJson\n                      },\n                      \"ai.response.id\": stepResponse.id,\n                      \"ai.response.model\": stepResponse.modelId,\n                      \"ai.response.timestamp\": stepResponse.timestamp.toISOString(),\n                      \"ai.usage.promptTokens\": stepUsage.promptTokens,\n                      \"ai.usage.completionTokens\": stepUsage.completionTokens,\n                      // deprecated\n                      \"ai.finishReason\": stepFinishReason,\n                      \"ai.result.text\": { output: () => stepText },\n                      \"ai.result.toolCalls\": {\n                        output: () => stepToolCallsJson\n                      },\n                      // standardized gen-ai llm span attributes:\n                      \"gen_ai.response.finish_reasons\": [stepFinishReason],\n                      \"gen_ai.response.id\": stepResponse.id,\n                      \"gen_ai.response.model\": stepResponse.modelId,\n                      \"gen_ai.usage.input_tokens\": stepUsage.promptTokens,\n                      \"gen_ai.usage.output_tokens\": stepUsage.completionTokens\n                    }\n                  })\n                );\n              } catch (error) {\n              } finally {\n                doStreamSpan2.end();\n              }\n              controller.enqueue({\n                type: \"step-finish\",\n                finishReason: stepFinishReason,\n                usage: stepUsage,\n                experimental_providerMetadata: stepProviderMetadata,\n                logprobs: stepLogProbs,\n                response: {\n                  ...stepResponse\n                },\n                isContinued: nextStepType === \"continue\"\n              });\n              if (stepType === \"continue\") {\n                const lastMessage = responseMessages[responseMessages.length - 1];\n                if (typeof lastMessage.content === \"string\") {\n                  lastMessage.content += stepText;\n                } else {\n                  lastMessage.content.push({\n                    text: stepText,\n                    type: \"text\"\n                  });\n                }\n              } else {\n                responseMessages.push(\n                  ...toResponseMessages({\n                    text: stepText,\n                    tools: tools != null ? tools : {},\n                    toolCalls: stepToolCalls,\n                    toolResults: stepToolResults\n                  })\n                );\n              }\n              const currentStepResult = {\n                stepType,\n                text: stepText,\n                toolCalls: stepToolCalls,\n                toolResults: stepToolResults,\n                finishReason: stepFinishReason,\n                usage: stepUsage,\n                warnings: self.warnings,\n                logprobs: stepLogProbs,\n                request: stepRequest,\n                rawResponse: self.rawResponse,\n                response: {\n                  ...stepResponse,\n                  headers: (_a11 = self.rawResponse) == null ? void 0 : _a11.headers,\n                  // deep clone msgs to avoid mutating past messages in multi-step:\n                  messages: JSON.parse(JSON.stringify(responseMessages))\n                },\n                experimental_providerMetadata: stepProviderMetadata,\n                isContinued: nextStepType === \"continue\"\n              };\n              stepResults.push(currentStepResult);\n              await (onStepFinish == null ? void 0 : onStepFinish(currentStepResult));\n              const combinedUsage = {\n                promptTokens: usage.promptTokens + stepUsage.promptTokens,\n                completionTokens: usage.completionTokens + stepUsage.completionTokens,\n                totalTokens: usage.totalTokens + stepUsage.totalTokens\n              };\n              if (nextStepType !== \"done\") {\n                const {\n                  result,\n                  doStreamSpan: doStreamSpan3,\n                  startTimestampMs: startTimestamp2\n                } = await startStep({ responseMessages });\n                self.warnings = result.warnings;\n                self.rawResponse = result.rawResponse;\n                addStepStream({\n                  stream: result.stream,\n                  startTimestamp: startTimestamp2,\n                  doStreamSpan: doStreamSpan3,\n                  currentStep: currentStep + 1,\n                  responseMessages,\n                  usage: combinedUsage,\n                  stepType: nextStepType,\n                  previousStepText: fullStepText,\n                  stepRequest: result.request,\n                  hasLeadingWhitespace: hasWhitespaceSuffix\n                });\n                return;\n              }\n              try {\n                controller.enqueue({\n                  type: \"finish\",\n                  finishReason: stepFinishReason,\n                  usage: combinedUsage,\n                  experimental_providerMetadata: stepProviderMetadata,\n                  logprobs: stepLogProbs,\n                  response: {\n                    ...stepResponse\n                  }\n                });\n                closeStitchableStream();\n                rootSpan.setAttributes(\n                  selectTelemetryAttributes({\n                    telemetry,\n                    attributes: {\n                      \"ai.response.finishReason\": stepFinishReason,\n                      \"ai.response.text\": { output: () => fullStepText },\n                      \"ai.response.toolCalls\": {\n                        output: () => stepToolCallsJson\n                      },\n                      \"ai.usage.promptTokens\": combinedUsage.promptTokens,\n                      \"ai.usage.completionTokens\": combinedUsage.completionTokens,\n                      // deprecated\n                      \"ai.finishReason\": stepFinishReason,\n                      \"ai.result.text\": { output: () => fullStepText },\n                      \"ai.result.toolCalls\": {\n                        output: () => stepToolCallsJson\n                      }\n                    }\n                  })\n                );\n                resolveUsage(combinedUsage);\n                resolveFinishReason(stepFinishReason);\n                resolveText(fullStepText);\n                resolveToolCalls(stepToolCalls);\n                resolveProviderMetadata(stepProviderMetadata);\n                resolveToolResults(stepToolResults);\n                resolveRequest(stepRequest);\n                resolveResponse({\n                  ...stepResponse,\n                  headers: rawResponse == null ? void 0 : rawResponse.headers,\n                  messages: responseMessages\n                });\n                resolveSteps(stepResults);\n                resolveResponseMessages(responseMessages);\n                await (onFinish == null ? void 0 : onFinish({\n                  finishReason: stepFinishReason,\n                  logprobs: stepLogProbs,\n                  usage: combinedUsage,\n                  text: fullStepText,\n                  toolCalls: stepToolCalls,\n                  // The tool results are inferred as a never[] type, because they are\n                  // optional and the execute method with an inferred result type is\n                  // optional as well. Therefore we need to cast the toolResults to any.\n                  // The type exposed to the users will be correctly inferred.\n                  toolResults: stepToolResults,\n                  request: stepRequest,\n                  rawResponse,\n                  response: {\n                    ...stepResponse,\n                    headers: rawResponse == null ? void 0 : rawResponse.headers,\n                    messages: responseMessages\n                  },\n                  warnings,\n                  experimental_providerMetadata: stepProviderMetadata,\n                  steps: stepResults,\n                  responseMessages\n                }));\n              } catch (error) {\n                controller.error(error);\n              } finally {\n                rootSpan.end();\n              }\n            }\n          })\n        )\n      );\n    }\n    addStepStream({\n      stream,\n      startTimestamp: startTimestampMs,\n      doStreamSpan,\n      currentStep: 0,\n      responseMessages: [],\n      usage: void 0,\n      stepType: \"initial\",\n      stepRequest: request,\n      hasLeadingWhitespace: false\n    });\n  }\n  /**\n  Split out a new stream from the original stream.\n  The original stream is replaced to allow for further splitting,\n  since we do not know how many times the stream will be split.\n  \n  Note: this leads to buffering the stream content on the server.\n  However, the LLM results are expected to be small enough to not cause issues.\n     */\n  teeStream() {\n    const [stream1, stream2] = this.originalStream.tee();\n    this.originalStream = stream2;\n    return stream1;\n  }\n  get textStream() {\n    return createAsyncIterableStream(this.teeStream(), {\n      transform(chunk, controller) {\n        if (chunk.type === \"text-delta\") {\n          controller.enqueue(chunk.textDelta);\n        } else if (chunk.type === \"error\") {\n          controller.error(chunk.error);\n        }\n      }\n    });\n  }\n  get fullStream() {\n    return createAsyncIterableStream(this.teeStream(), {\n      transform(chunk, controller) {\n        controller.enqueue(chunk);\n      }\n    });\n  }\n  toAIStream(callbacks = {}) {\n    return this.toDataStreamInternal({ callbacks });\n  }\n  toDataStreamInternal({\n    callbacks = {},\n    getErrorMessage: getErrorMessage3 = () => \"\",\n    // mask error messages for safety by default\n    sendUsage = true\n  } = {}) {\n    let aggregatedResponse = \"\";\n    const callbackTransformer = new TransformStream({\n      async start() {\n        if (callbacks.onStart)\n          await callbacks.onStart();\n      },\n      async transform(chunk, controller) {\n        controller.enqueue(chunk);\n        if (chunk.type === \"text-delta\") {\n          const textDelta = chunk.textDelta;\n          aggregatedResponse += textDelta;\n          if (callbacks.onToken)\n            await callbacks.onToken(textDelta);\n          if (callbacks.onText)\n            await callbacks.onText(textDelta);\n        }\n      },\n      async flush() {\n        if (callbacks.onCompletion)\n          await callbacks.onCompletion(aggregatedResponse);\n        if (callbacks.onFinal)\n          await callbacks.onFinal(aggregatedResponse);\n      }\n    });\n    const streamPartsTransformer = new TransformStream({\n      transform: async (chunk, controller) => {\n        const chunkType = chunk.type;\n        switch (chunkType) {\n          case \"text-delta\": {\n            controller.enqueue(formatStreamPart(\"text\", chunk.textDelta));\n            break;\n          }\n          case \"tool-call-streaming-start\": {\n            controller.enqueue(\n              formatStreamPart(\"tool_call_streaming_start\", {\n                toolCallId: chunk.toolCallId,\n                toolName: chunk.toolName\n              })\n            );\n            break;\n          }\n          case \"tool-call-delta\": {\n            controller.enqueue(\n              formatStreamPart(\"tool_call_delta\", {\n                toolCallId: chunk.toolCallId,\n                argsTextDelta: chunk.argsTextDelta\n              })\n            );\n            break;\n          }\n          case \"tool-call\": {\n            controller.enqueue(\n              formatStreamPart(\"tool_call\", {\n                toolCallId: chunk.toolCallId,\n                toolName: chunk.toolName,\n                args: chunk.args\n              })\n            );\n            break;\n          }\n          case \"tool-result\": {\n            controller.enqueue(\n              formatStreamPart(\"tool_result\", {\n                toolCallId: chunk.toolCallId,\n                result: chunk.result\n              })\n            );\n            break;\n          }\n          case \"error\": {\n            controller.enqueue(\n              formatStreamPart(\"error\", getErrorMessage3(chunk.error))\n            );\n            break;\n          }\n          case \"step-finish\": {\n            controller.enqueue(\n              formatStreamPart(\"finish_step\", {\n                finishReason: chunk.finishReason,\n                usage: sendUsage ? {\n                  promptTokens: chunk.usage.promptTokens,\n                  completionTokens: chunk.usage.completionTokens\n                } : void 0,\n                isContinued: chunk.isContinued\n              })\n            );\n            break;\n          }\n          case \"finish\": {\n            controller.enqueue(\n              formatStreamPart(\"finish_message\", {\n                finishReason: chunk.finishReason,\n                usage: sendUsage ? {\n                  promptTokens: chunk.usage.promptTokens,\n                  completionTokens: chunk.usage.completionTokens\n                } : void 0\n              })\n            );\n            break;\n          }\n          default: {\n            const exhaustiveCheck = chunkType;\n            throw new Error(`Unknown chunk type: ${exhaustiveCheck}`);\n          }\n        }\n      }\n    });\n    return this.fullStream.pipeThrough(callbackTransformer).pipeThrough(streamPartsTransformer).pipeThrough(new TextEncoderStream());\n  }\n  pipeAIStreamToResponse(response, init) {\n    return this.pipeDataStreamToResponse(response, init);\n  }\n  pipeDataStreamToResponse(response, options) {\n    const init = options == null ? void 0 : \"init\" in options ? options.init : {\n      headers: \"headers\" in options ? options.headers : void 0,\n      status: \"status\" in options ? options.status : void 0,\n      statusText: \"statusText\" in options ? options.statusText : void 0\n    };\n    const data = options == null ? void 0 : \"data\" in options ? options.data : void 0;\n    const getErrorMessage3 = options == null ? void 0 : \"getErrorMessage\" in options ? options.getErrorMessage : void 0;\n    const sendUsage = options == null ? void 0 : \"sendUsage\" in options ? options.sendUsage : void 0;\n    writeToServerResponse({\n      response,\n      status: init == null ? void 0 : init.status,\n      statusText: init == null ? void 0 : init.statusText,\n      headers: prepareOutgoingHttpHeaders(init, {\n        contentType: \"text/plain; charset=utf-8\",\n        dataStreamVersion: \"v1\"\n      }),\n      stream: this.toDataStream({ data, getErrorMessage: getErrorMessage3, sendUsage })\n    });\n  }\n  pipeTextStreamToResponse(response, init) {\n    writeToServerResponse({\n      response,\n      status: init == null ? void 0 : init.status,\n      statusText: init == null ? void 0 : init.statusText,\n      headers: prepareOutgoingHttpHeaders(init, {\n        contentType: \"text/plain; charset=utf-8\"\n      }),\n      stream: this.textStream.pipeThrough(new TextEncoderStream())\n    });\n  }\n  toAIStreamResponse(options) {\n    return this.toDataStreamResponse(options);\n  }\n  toDataStream(options) {\n    const stream = this.toDataStreamInternal({\n      getErrorMessage: options == null ? void 0 : options.getErrorMessage,\n      sendUsage: options == null ? void 0 : options.sendUsage\n    });\n    return (options == null ? void 0 : options.data) ? mergeStreams(options == null ? void 0 : options.data.stream, stream) : stream;\n  }\n  toDataStreamResponse(options) {\n    var _a11;\n    const init = options == null ? void 0 : \"init\" in options ? options.init : {\n      headers: \"headers\" in options ? options.headers : void 0,\n      status: \"status\" in options ? options.status : void 0,\n      statusText: \"statusText\" in options ? options.statusText : void 0\n    };\n    const data = options == null ? void 0 : \"data\" in options ? options.data : void 0;\n    const getErrorMessage3 = options == null ? void 0 : \"getErrorMessage\" in options ? options.getErrorMessage : void 0;\n    const sendUsage = options == null ? void 0 : \"sendUsage\" in options ? options.sendUsage : void 0;\n    return new Response(\n      this.toDataStream({ data, getErrorMessage: getErrorMessage3, sendUsage }),\n      {\n        status: (_a11 = init == null ? void 0 : init.status) != null ? _a11 : 200,\n        statusText: init == null ? void 0 : init.statusText,\n        headers: prepareResponseHeaders(init, {\n          contentType: \"text/plain; charset=utf-8\",\n          dataStreamVersion: \"v1\"\n        })\n      }\n    );\n  }\n  toTextStreamResponse(init) {\n    var _a11;\n    return new Response(this.textStream.pipeThrough(new TextEncoderStream()), {\n      status: (_a11 = init == null ? void 0 : init.status) != null ? _a11 : 200,\n      headers: prepareResponseHeaders(init, {\n        contentType: \"text/plain; charset=utf-8\"\n      })\n    });\n  }\n};\nvar experimental_streamText = streamText;\n\n// core/middleware/wrap-language-model.ts\nvar experimental_wrapLanguageModel = ({\n  model,\n  middleware: { transformParams, wrapGenerate, wrapStream },\n  modelId,\n  providerId\n}) => {\n  async function doTransform({\n    params,\n    type\n  }) {\n    return transformParams ? await transformParams({ params, type }) : params;\n  }\n  return {\n    specificationVersion: \"v1\",\n    provider: providerId != null ? providerId : model.provider,\n    modelId: modelId != null ? modelId : model.modelId,\n    defaultObjectGenerationMode: model.defaultObjectGenerationMode,\n    supportsImageUrls: model.supportsImageUrls,\n    supportsUrl: model.supportsUrl,\n    supportsStructuredOutputs: model.supportsStructuredOutputs,\n    async doGenerate(params) {\n      const transformedParams = await doTransform({ params, type: \"generate\" });\n      const doGenerate = async () => model.doGenerate(transformedParams);\n      return wrapGenerate ? wrapGenerate({ doGenerate, params: transformedParams, model }) : doGenerate();\n    },\n    async doStream(params) {\n      const transformedParams = await doTransform({ params, type: \"stream\" });\n      const doStream = async () => model.doStream(transformedParams);\n      return wrapStream ? wrapStream({ doStream, params: transformedParams, model }) : doStream();\n    }\n  };\n};\n\n// core/registry/custom-provider.ts\nimport { NoSuchModelError as NoSuchModelError2 } from \"@ai-sdk/provider\";\nfunction experimental_customProvider({\n  languageModels,\n  textEmbeddingModels,\n  fallbackProvider\n}) {\n  return {\n    languageModel(modelId) {\n      if (languageModels != null && modelId in languageModels) {\n        return languageModels[modelId];\n      }\n      if (fallbackProvider) {\n        return fallbackProvider.languageModel(modelId);\n      }\n      throw new NoSuchModelError2({ modelId, modelType: \"languageModel\" });\n    },\n    textEmbeddingModel(modelId) {\n      if (textEmbeddingModels != null && modelId in textEmbeddingModels) {\n        return textEmbeddingModels[modelId];\n      }\n      if (fallbackProvider) {\n        return fallbackProvider.textEmbeddingModel(modelId);\n      }\n      throw new NoSuchModelError2({ modelId, modelType: \"textEmbeddingModel\" });\n    }\n  };\n}\n\n// core/registry/no-such-provider-error.ts\nimport { AISDKError as AISDKError11, NoSuchModelError as NoSuchModelError3 } from \"@ai-sdk/provider\";\nvar name10 = \"AI_NoSuchProviderError\";\nvar marker10 = `vercel.ai.error.${name10}`;\nvar symbol10 = Symbol.for(marker10);\nvar _a10;\nvar NoSuchProviderError = class extends NoSuchModelError3 {\n  constructor({\n    modelId,\n    modelType,\n    providerId,\n    availableProviders,\n    message = `No such provider: ${providerId} (available providers: ${availableProviders.join()})`\n  }) {\n    super({ errorName: name10, modelId, modelType, message });\n    this[_a10] = true;\n    this.providerId = providerId;\n    this.availableProviders = availableProviders;\n  }\n  static isInstance(error) {\n    return AISDKError11.hasMarker(error, marker10);\n  }\n  /**\n   * @deprecated use `isInstance` instead\n   */\n  static isNoSuchProviderError(error) {\n    return error instanceof Error && error.name === name10 && typeof error.providerId === \"string\" && Array.isArray(error.availableProviders);\n  }\n  /**\n   * @deprecated Do not use this method. It will be removed in the next major version.\n   */\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      stack: this.stack,\n      modelId: this.modelId,\n      modelType: this.modelType,\n      providerId: this.providerId,\n      availableProviders: this.availableProviders\n    };\n  }\n};\n_a10 = symbol10;\n\n// core/registry/provider-registry.ts\nimport { NoSuchModelError as NoSuchModelError4 } from \"@ai-sdk/provider\";\nfunction experimental_createProviderRegistry(providers) {\n  const registry = new DefaultProviderRegistry();\n  for (const [id, provider] of Object.entries(providers)) {\n    registry.registerProvider({ id, provider });\n  }\n  return registry;\n}\nvar experimental_createModelRegistry = experimental_createProviderRegistry;\nvar DefaultProviderRegistry = class {\n  constructor() {\n    this.providers = {};\n  }\n  registerProvider({\n    id,\n    provider\n  }) {\n    this.providers[id] = provider;\n  }\n  getProvider(id) {\n    const provider = this.providers[id];\n    if (provider == null) {\n      throw new NoSuchProviderError({\n        modelId: id,\n        modelType: \"languageModel\",\n        providerId: id,\n        availableProviders: Object.keys(this.providers)\n      });\n    }\n    return provider;\n  }\n  splitId(id, modelType) {\n    const index = id.indexOf(\":\");\n    if (index === -1) {\n      throw new NoSuchModelError4({\n        modelId: id,\n        modelType,\n        message: `Invalid ${modelType} id for registry: ${id} (must be in the format \"providerId:modelId\")`\n      });\n    }\n    return [id.slice(0, index), id.slice(index + 1)];\n  }\n  languageModel(id) {\n    var _a11, _b;\n    const [providerId, modelId] = this.splitId(id, \"languageModel\");\n    const model = (_b = (_a11 = this.getProvider(providerId)).languageModel) == null ? void 0 : _b.call(_a11, modelId);\n    if (model == null) {\n      throw new NoSuchModelError4({ modelId: id, modelType: \"languageModel\" });\n    }\n    return model;\n  }\n  textEmbeddingModel(id) {\n    var _a11, _b, _c;\n    const [providerId, modelId] = this.splitId(id, \"textEmbeddingModel\");\n    const provider = this.getProvider(providerId);\n    const model = (_c = (_a11 = provider.textEmbeddingModel) == null ? void 0 : _a11.call(provider, modelId)) != null ? _c : \"textEmbedding\" in provider ? (_b = provider.textEmbedding) == null ? void 0 : _b.call(provider, modelId) : void 0;\n    if (model == null) {\n      throw new NoSuchModelError4({\n        modelId: id,\n        modelType: \"textEmbeddingModel\"\n      });\n    }\n    return model;\n  }\n  /**\n   * @deprecated Use `textEmbeddingModel` instead.\n   */\n  textEmbedding(id) {\n    return this.textEmbeddingModel(id);\n  }\n};\n\n// core/tool/tool.ts\nfunction tool(tool2) {\n  return tool2;\n}\n\n// core/util/cosine-similarity.ts\nfunction cosineSimilarity(vector1, vector2) {\n  if (vector1.length !== vector2.length) {\n    throw new Error(\n      `Vectors must have the same length (vector1: ${vector1.length} elements, vector2: ${vector2.length} elements)`\n    );\n  }\n  return dotProduct(vector1, vector2) / (magnitude(vector1) * magnitude(vector2));\n}\nfunction dotProduct(vector1, vector2) {\n  return vector1.reduce(\n    (accumulator, value, index) => accumulator + value * vector2[index],\n    0\n  );\n}\nfunction magnitude(vector) {\n  return Math.sqrt(dotProduct(vector, vector));\n}\n\n// streams/ai-stream.ts\nimport {\n  createParser\n} from \"eventsource-parser\";\nfunction createEventStreamTransformer(customParser) {\n  const textDecoder = new TextDecoder();\n  let eventSourceParser;\n  return new TransformStream({\n    async start(controller) {\n      eventSourceParser = createParser(\n        (event) => {\n          if (\"data\" in event && event.type === \"event\" && event.data === \"[DONE]\" || // Replicate doesn't send [DONE] but does send a 'done' event\n          // @see https://replicate.com/docs/streaming\n          event.event === \"done\") {\n            controller.terminate();\n            return;\n          }\n          if (\"data\" in event) {\n            const parsedMessage = customParser ? customParser(event.data, {\n              event: event.event\n            }) : event.data;\n            if (parsedMessage)\n              controller.enqueue(parsedMessage);\n          }\n        }\n      );\n    },\n    transform(chunk) {\n      eventSourceParser.feed(textDecoder.decode(chunk));\n    }\n  });\n}\nfunction createCallbacksTransformer(cb) {\n  const textEncoder = new TextEncoder();\n  let aggregatedResponse = \"\";\n  const callbacks = cb || {};\n  return new TransformStream({\n    async start() {\n      if (callbacks.onStart)\n        await callbacks.onStart();\n    },\n    async transform(message, controller) {\n      const content = typeof message === \"string\" ? message : message.content;\n      controller.enqueue(textEncoder.encode(content));\n      aggregatedResponse += content;\n      if (callbacks.onToken)\n        await callbacks.onToken(content);\n      if (callbacks.onText && typeof message === \"string\") {\n        await callbacks.onText(message);\n      }\n    },\n    async flush() {\n      const isOpenAICallbacks = isOfTypeOpenAIStreamCallbacks(callbacks);\n      if (callbacks.onCompletion) {\n        await callbacks.onCompletion(aggregatedResponse);\n      }\n      if (callbacks.onFinal && !isOpenAICallbacks) {\n        await callbacks.onFinal(aggregatedResponse);\n      }\n    }\n  });\n}\nfunction isOfTypeOpenAIStreamCallbacks(callbacks) {\n  return \"experimental_onFunctionCall\" in callbacks;\n}\nfunction trimStartOfStreamHelper() {\n  let isStreamStart = true;\n  return (text) => {\n    if (isStreamStart) {\n      text = text.trimStart();\n      if (text)\n        isStreamStart = false;\n    }\n    return text;\n  };\n}\nfunction AIStream(response, customParser, callbacks) {\n  if (!response.ok) {\n    if (response.body) {\n      const reader = response.body.getReader();\n      return new ReadableStream({\n        async start(controller) {\n          const { done, value } = await reader.read();\n          if (!done) {\n            const errorText = new TextDecoder().decode(value);\n            controller.error(new Error(`Response error: ${errorText}`));\n          }\n        }\n      });\n    } else {\n      return new ReadableStream({\n        start(controller) {\n          controller.error(new Error(\"Response error: No response body\"));\n        }\n      });\n    }\n  }\n  const responseBodyStream = response.body || createEmptyReadableStream();\n  return responseBodyStream.pipeThrough(createEventStreamTransformer(customParser)).pipeThrough(createCallbacksTransformer(callbacks));\n}\nfunction createEmptyReadableStream() {\n  return new ReadableStream({\n    start(controller) {\n      controller.close();\n    }\n  });\n}\nfunction readableFromAsyncIterable(iterable) {\n  let it = iterable[Symbol.asyncIterator]();\n  return new ReadableStream({\n    async pull(controller) {\n      const { done, value } = await it.next();\n      if (done)\n        controller.close();\n      else\n        controller.enqueue(value);\n    },\n    async cancel(reason) {\n      var _a11;\n      await ((_a11 = it.return) == null ? void 0 : _a11.call(it, reason));\n    }\n  });\n}\n\n// streams/stream-data.ts\nimport { formatStreamPart as formatStreamPart2 } from \"@ai-sdk/ui-utils\";\n\n// util/constants.ts\nvar HANGING_STREAM_WARNING_TIME_MS = 15 * 1e3;\n\n// streams/stream-data.ts\nvar StreamData2 = class {\n  constructor() {\n    this.encoder = new TextEncoder();\n    this.controller = null;\n    this.isClosed = false;\n    this.warningTimeout = null;\n    const self = this;\n    this.stream = new ReadableStream({\n      start: async (controller) => {\n        self.controller = controller;\n        if (process.env.NODE_ENV === \"development\") {\n          self.warningTimeout = setTimeout(() => {\n            console.warn(\n              \"The data stream is hanging. Did you forget to close it with `data.close()`?\"\n            );\n          }, HANGING_STREAM_WARNING_TIME_MS);\n        }\n      },\n      pull: (controller) => {\n      },\n      cancel: (reason) => {\n        this.isClosed = true;\n      }\n    });\n  }\n  async close() {\n    if (this.isClosed) {\n      throw new Error(\"Data Stream has already been closed.\");\n    }\n    if (!this.controller) {\n      throw new Error(\"Stream controller is not initialized.\");\n    }\n    this.controller.close();\n    this.isClosed = true;\n    if (this.warningTimeout) {\n      clearTimeout(this.warningTimeout);\n    }\n  }\n  append(value) {\n    if (this.isClosed) {\n      throw new Error(\"Data Stream has already been closed.\");\n    }\n    if (!this.controller) {\n      throw new Error(\"Stream controller is not initialized.\");\n    }\n    this.controller.enqueue(\n      this.encoder.encode(formatStreamPart2(\"data\", [value]))\n    );\n  }\n  appendMessageAnnotation(value) {\n    if (this.isClosed) {\n      throw new Error(\"Data Stream has already been closed.\");\n    }\n    if (!this.controller) {\n      throw new Error(\"Stream controller is not initialized.\");\n    }\n    this.controller.enqueue(\n      this.encoder.encode(formatStreamPart2(\"message_annotations\", [value]))\n    );\n  }\n};\nfunction createStreamDataTransformer() {\n  const encoder = new TextEncoder();\n  const decoder = new TextDecoder();\n  return new TransformStream({\n    transform: async (chunk, controller) => {\n      const message = decoder.decode(chunk);\n      controller.enqueue(encoder.encode(formatStreamPart2(\"text\", message)));\n    }\n  });\n}\nvar experimental_StreamData = class extends StreamData2 {\n};\n\n// streams/anthropic-stream.ts\nfunction parseAnthropicStream() {\n  let previous = \"\";\n  return (data) => {\n    const json = JSON.parse(data);\n    if (\"error\" in json) {\n      throw new Error(`${json.error.type}: ${json.error.message}`);\n    }\n    if (!(\"completion\" in json)) {\n      return;\n    }\n    const text = json.completion;\n    if (!previous || text.length > previous.length && text.startsWith(previous)) {\n      const delta = text.slice(previous.length);\n      previous = text;\n      return delta;\n    }\n    return text;\n  };\n}\nasync function* streamable(stream) {\n  for await (const chunk of stream) {\n    if (\"completion\" in chunk) {\n      const text = chunk.completion;\n      if (text)\n        yield text;\n    } else if (\"delta\" in chunk) {\n      const { delta } = chunk;\n      if (\"text\" in delta) {\n        const text = delta.text;\n        if (text)\n          yield text;\n      }\n    }\n  }\n}\nfunction AnthropicStream(res, cb) {\n  if (Symbol.asyncIterator in res) {\n    return readableFromAsyncIterable(streamable(res)).pipeThrough(createCallbacksTransformer(cb)).pipeThrough(createStreamDataTransformer());\n  } else {\n    return AIStream(res, parseAnthropicStream(), cb).pipeThrough(\n      createStreamDataTransformer()\n    );\n  }\n}\n\n// streams/assistant-response.ts\nimport {\n  formatStreamPart as formatStreamPart3\n} from \"@ai-sdk/ui-utils\";\nfunction AssistantResponse({ threadId, messageId }, process2) {\n  const stream = new ReadableStream({\n    async start(controller) {\n      var _a11;\n      const textEncoder = new TextEncoder();\n      const sendMessage = (message) => {\n        controller.enqueue(\n          textEncoder.encode(formatStreamPart3(\"assistant_message\", message))\n        );\n      };\n      const sendDataMessage = (message) => {\n        controller.enqueue(\n          textEncoder.encode(formatStreamPart3(\"data_message\", message))\n        );\n      };\n      const sendError = (errorMessage) => {\n        controller.enqueue(\n          textEncoder.encode(formatStreamPart3(\"error\", errorMessage))\n        );\n      };\n      const forwardStream = async (stream2) => {\n        var _a12, _b;\n        let result = void 0;\n        for await (const value of stream2) {\n          switch (value.event) {\n            case \"thread.message.created\": {\n              controller.enqueue(\n                textEncoder.encode(\n                  formatStreamPart3(\"assistant_message\", {\n                    id: value.data.id,\n                    role: \"assistant\",\n                    content: [{ type: \"text\", text: { value: \"\" } }]\n                  })\n                )\n              );\n              break;\n            }\n            case \"thread.message.delta\": {\n              const content = (_a12 = value.data.delta.content) == null ? void 0 : _a12[0];\n              if ((content == null ? void 0 : content.type) === \"text\" && ((_b = content.text) == null ? void 0 : _b.value) != null) {\n                controller.enqueue(\n                  textEncoder.encode(\n                    formatStreamPart3(\"text\", content.text.value)\n                  )\n                );\n              }\n              break;\n            }\n            case \"thread.run.completed\":\n            case \"thread.run.requires_action\": {\n              result = value.data;\n              break;\n            }\n          }\n        }\n        return result;\n      };\n      controller.enqueue(\n        textEncoder.encode(\n          formatStreamPart3(\"assistant_control_data\", {\n            threadId,\n            messageId\n          })\n        )\n      );\n      try {\n        await process2({\n          threadId,\n          messageId,\n          sendMessage,\n          sendDataMessage,\n          forwardStream\n        });\n      } catch (error) {\n        sendError((_a11 = error.message) != null ? _a11 : `${error}`);\n      } finally {\n        controller.close();\n      }\n    },\n    pull(controller) {\n    },\n    cancel() {\n    }\n  });\n  return new Response(stream, {\n    status: 200,\n    headers: {\n      \"Content-Type\": \"text/plain; charset=utf-8\"\n    }\n  });\n}\nvar experimental_AssistantResponse = AssistantResponse;\n\n// streams/aws-bedrock-stream.ts\nasync function* asDeltaIterable(response, extractTextDeltaFromChunk) {\n  var _a11, _b;\n  const decoder = new TextDecoder();\n  for await (const chunk of (_a11 = response.body) != null ? _a11 : []) {\n    const bytes = (_b = chunk.chunk) == null ? void 0 : _b.bytes;\n    if (bytes != null) {\n      const chunkText = decoder.decode(bytes);\n      const chunkJSON = JSON.parse(chunkText);\n      const delta = extractTextDeltaFromChunk(chunkJSON);\n      if (delta != null) {\n        yield delta;\n      }\n    }\n  }\n}\nfunction AWSBedrockAnthropicMessagesStream(response, callbacks) {\n  return AWSBedrockStream(response, callbacks, (chunk) => {\n    var _a11;\n    return (_a11 = chunk.delta) == null ? void 0 : _a11.text;\n  });\n}\nfunction AWSBedrockAnthropicStream(response, callbacks) {\n  return AWSBedrockStream(response, callbacks, (chunk) => chunk.completion);\n}\nfunction AWSBedrockCohereStream(response, callbacks) {\n  return AWSBedrockStream(response, callbacks, (chunk) => chunk == null ? void 0 : chunk.text);\n}\nfunction AWSBedrockLlama2Stream(response, callbacks) {\n  return AWSBedrockStream(response, callbacks, (chunk) => chunk.generation);\n}\nfunction AWSBedrockStream(response, callbacks, extractTextDeltaFromChunk) {\n  return readableFromAsyncIterable(\n    asDeltaIterable(response, extractTextDeltaFromChunk)\n  ).pipeThrough(createCallbacksTransformer(callbacks)).pipeThrough(createStreamDataTransformer());\n}\n\n// streams/cohere-stream.ts\nvar utf8Decoder = new TextDecoder(\"utf-8\");\nasync function processLines(lines, controller) {\n  for (const line of lines) {\n    const { text, is_finished } = JSON.parse(line);\n    if (!is_finished) {\n      controller.enqueue(text);\n    }\n  }\n}\nasync function readAndProcessLines(reader, controller) {\n  let segment = \"\";\n  while (true) {\n    const { value: chunk, done } = await reader.read();\n    if (done) {\n      break;\n    }\n    segment += utf8Decoder.decode(chunk, { stream: true });\n    const linesArray = segment.split(/\\r\\n|\\n|\\r/g);\n    segment = linesArray.pop() || \"\";\n    await processLines(linesArray, controller);\n  }\n  if (segment) {\n    const linesArray = [segment];\n    await processLines(linesArray, controller);\n  }\n  controller.close();\n}\nfunction createParser2(res) {\n  var _a11;\n  const reader = (_a11 = res.body) == null ? void 0 : _a11.getReader();\n  return new ReadableStream({\n    async start(controller) {\n      if (!reader) {\n        controller.close();\n        return;\n      }\n      await readAndProcessLines(reader, controller);\n    }\n  });\n}\nasync function* streamable2(stream) {\n  for await (const chunk of stream) {\n    if (chunk.eventType === \"text-generation\") {\n      const text = chunk.text;\n      if (text)\n        yield text;\n    }\n  }\n}\nfunction CohereStream(reader, callbacks) {\n  if (Symbol.asyncIterator in reader) {\n    return readableFromAsyncIterable(streamable2(reader)).pipeThrough(createCallbacksTransformer(callbacks)).pipeThrough(createStreamDataTransformer());\n  } else {\n    return createParser2(reader).pipeThrough(createCallbacksTransformer(callbacks)).pipeThrough(createStreamDataTransformer());\n  }\n}\n\n// streams/google-generative-ai-stream.ts\nasync function* streamable3(response) {\n  var _a11, _b, _c;\n  for await (const chunk of response.stream) {\n    const parts = (_c = (_b = (_a11 = chunk.candidates) == null ? void 0 : _a11[0]) == null ? void 0 : _b.content) == null ? void 0 : _c.parts;\n    if (parts === void 0) {\n      continue;\n    }\n    const firstPart = parts[0];\n    if (typeof firstPart.text === \"string\") {\n      yield firstPart.text;\n    }\n  }\n}\nfunction GoogleGenerativeAIStream(response, cb) {\n  return readableFromAsyncIterable(streamable3(response)).pipeThrough(createCallbacksTransformer(cb)).pipeThrough(createStreamDataTransformer());\n}\n\n// streams/huggingface-stream.ts\nfunction createParser3(res) {\n  const trimStartOfStream = trimStartOfStreamHelper();\n  return new ReadableStream({\n    async pull(controller) {\n      var _a11, _b;\n      const { value, done } = await res.next();\n      if (done) {\n        controller.close();\n        return;\n      }\n      const text = trimStartOfStream((_b = (_a11 = value.token) == null ? void 0 : _a11.text) != null ? _b : \"\");\n      if (!text)\n        return;\n      if (value.generated_text != null && value.generated_text.length > 0) {\n        return;\n      }\n      if (text === \"</s>\" || text === \"<|endoftext|>\" || text === \"<|end|>\") {\n        return;\n      }\n      controller.enqueue(text);\n    }\n  });\n}\nfunction HuggingFaceStream(res, callbacks) {\n  return createParser3(res).pipeThrough(createCallbacksTransformer(callbacks)).pipeThrough(createStreamDataTransformer());\n}\n\n// streams/inkeep-stream.ts\nfunction InkeepStream(res, callbacks) {\n  if (!res.body) {\n    throw new Error(\"Response body is null\");\n  }\n  let chat_session_id = \"\";\n  let records_cited;\n  const inkeepEventParser = (data, options) => {\n    var _a11, _b;\n    const { event } = options;\n    if (event === \"records_cited\") {\n      records_cited = JSON.parse(data);\n      (_a11 = callbacks == null ? void 0 : callbacks.onRecordsCited) == null ? void 0 : _a11.call(callbacks, records_cited);\n    }\n    if (event === \"message_chunk\") {\n      const inkeepMessageChunk = JSON.parse(data);\n      chat_session_id = (_b = inkeepMessageChunk.chat_session_id) != null ? _b : chat_session_id;\n      return inkeepMessageChunk.content_chunk;\n    }\n    return;\n  };\n  let { onRecordsCited, ...passThroughCallbacks } = callbacks || {};\n  passThroughCallbacks = {\n    ...passThroughCallbacks,\n    onFinal: (completion) => {\n      var _a11;\n      const inkeepOnFinalMetadata = {\n        chat_session_id,\n        records_cited\n      };\n      (_a11 = callbacks == null ? void 0 : callbacks.onFinal) == null ? void 0 : _a11.call(callbacks, completion, inkeepOnFinalMetadata);\n    }\n  };\n  return AIStream(res, inkeepEventParser, passThroughCallbacks).pipeThrough(\n    createStreamDataTransformer()\n  );\n}\n\n// streams/langchain-adapter.ts\nvar langchain_adapter_exports = {};\n__export(langchain_adapter_exports, {\n  toAIStream: () => toAIStream,\n  toDataStream: () => toDataStream,\n  toDataStreamResponse: () => toDataStreamResponse\n});\nfunction toAIStream(stream, callbacks) {\n  return toDataStream(stream, callbacks);\n}\nfunction toDataStream(stream, callbacks) {\n  return stream.pipeThrough(\n    new TransformStream({\n      transform: async (value, controller) => {\n        var _a11;\n        if (typeof value === \"string\") {\n          controller.enqueue(value);\n          return;\n        }\n        if (\"event\" in value) {\n          if (value.event === \"on_chat_model_stream\") {\n            forwardAIMessageChunk(\n              (_a11 = value.data) == null ? void 0 : _a11.chunk,\n              controller\n            );\n          }\n          return;\n        }\n        forwardAIMessageChunk(value, controller);\n      }\n    })\n  ).pipeThrough(createCallbacksTransformer(callbacks)).pipeThrough(createStreamDataTransformer());\n}\nfunction toDataStreamResponse(stream, options) {\n  var _a11;\n  const dataStream = toDataStream(stream, options == null ? void 0 : options.callbacks);\n  const data = options == null ? void 0 : options.data;\n  const init = options == null ? void 0 : options.init;\n  const responseStream = data ? mergeStreams(data.stream, dataStream) : dataStream;\n  return new Response(responseStream, {\n    status: (_a11 = init == null ? void 0 : init.status) != null ? _a11 : 200,\n    statusText: init == null ? void 0 : init.statusText,\n    headers: prepareResponseHeaders(init, {\n      contentType: \"text/plain; charset=utf-8\",\n      dataStreamVersion: \"v1\"\n    })\n  });\n}\nfunction forwardAIMessageChunk(chunk, controller) {\n  if (typeof chunk.content === \"string\") {\n    controller.enqueue(chunk.content);\n  } else {\n    const content = chunk.content;\n    for (const item of content) {\n      if (item.type === \"text\") {\n        controller.enqueue(item.text);\n      }\n    }\n  }\n}\n\n// streams/llamaindex-adapter.ts\nvar llamaindex_adapter_exports = {};\n__export(llamaindex_adapter_exports, {\n  toDataStream: () => toDataStream2,\n  toDataStreamResponse: () => toDataStreamResponse2\n});\nfunction toDataStream2(stream, callbacks) {\n  return toReadableStream(stream).pipeThrough(createCallbacksTransformer(callbacks)).pipeThrough(createStreamDataTransformer());\n}\nfunction toDataStreamResponse2(stream, options = {}) {\n  var _a11;\n  const { init, data, callbacks } = options;\n  const dataStream = toDataStream2(stream, callbacks);\n  const responseStream = data ? mergeStreams(data.stream, dataStream) : dataStream;\n  return new Response(responseStream, {\n    status: (_a11 = init == null ? void 0 : init.status) != null ? _a11 : 200,\n    statusText: init == null ? void 0 : init.statusText,\n    headers: prepareResponseHeaders(init, {\n      contentType: \"text/plain; charset=utf-8\",\n      dataStreamVersion: \"v1\"\n    })\n  });\n}\nfunction toReadableStream(res) {\n  const it = res[Symbol.asyncIterator]();\n  const trimStartOfStream = trimStartOfStreamHelper();\n  return new ReadableStream({\n    async pull(controller) {\n      var _a11;\n      const { value, done } = await it.next();\n      if (done) {\n        controller.close();\n        return;\n      }\n      const text = trimStartOfStream((_a11 = value.delta) != null ? _a11 : \"\");\n      if (text) {\n        controller.enqueue(text);\n      }\n    }\n  });\n}\n\n// streams/langchain-stream.ts\nfunction LangChainStream(callbacks) {\n  const stream = new TransformStream();\n  const writer = stream.writable.getWriter();\n  const runs = /* @__PURE__ */ new Set();\n  const handleError = async (e, runId) => {\n    runs.delete(runId);\n    await writer.ready;\n    await writer.abort(e);\n  };\n  const handleStart = async (runId) => {\n    runs.add(runId);\n  };\n  const handleEnd = async (runId) => {\n    runs.delete(runId);\n    if (runs.size === 0) {\n      await writer.ready;\n      await writer.close();\n    }\n  };\n  return {\n    stream: stream.readable.pipeThrough(createCallbacksTransformer(callbacks)).pipeThrough(createStreamDataTransformer()),\n    writer,\n    handlers: {\n      handleLLMNewToken: async (token) => {\n        await writer.ready;\n        await writer.write(token);\n      },\n      handleLLMStart: async (_llm, _prompts, runId) => {\n        handleStart(runId);\n      },\n      handleLLMEnd: async (_output, runId) => {\n        await handleEnd(runId);\n      },\n      handleLLMError: async (e, runId) => {\n        await handleError(e, runId);\n      },\n      handleChainStart: async (_chain, _inputs, runId) => {\n        handleStart(runId);\n      },\n      handleChainEnd: async (_outputs, runId) => {\n        await handleEnd(runId);\n      },\n      handleChainError: async (e, runId) => {\n        await handleError(e, runId);\n      },\n      handleToolStart: async (_tool, _input, runId) => {\n        handleStart(runId);\n      },\n      handleToolEnd: async (_output, runId) => {\n        await handleEnd(runId);\n      },\n      handleToolError: async (e, runId) => {\n        await handleError(e, runId);\n      }\n    }\n  };\n}\n\n// streams/mistral-stream.ts\nasync function* streamable4(stream) {\n  var _a11, _b;\n  for await (const chunk of stream) {\n    const content = (_b = (_a11 = chunk.choices[0]) == null ? void 0 : _a11.delta) == null ? void 0 : _b.content;\n    if (content === void 0 || content === \"\") {\n      continue;\n    }\n    yield content;\n  }\n}\nfunction MistralStream(response, callbacks) {\n  const stream = readableFromAsyncIterable(streamable4(response));\n  return stream.pipeThrough(createCallbacksTransformer(callbacks)).pipeThrough(createStreamDataTransformer());\n}\n\n// streams/openai-stream.ts\nimport {\n  createChunkDecoder,\n  formatStreamPart as formatStreamPart4\n} from \"@ai-sdk/ui-utils\";\nfunction parseOpenAIStream() {\n  const extract = chunkToText();\n  return (data) => extract(JSON.parse(data));\n}\nasync function* streamable5(stream) {\n  const extract = chunkToText();\n  for await (let chunk of stream) {\n    if (\"promptFilterResults\" in chunk) {\n      chunk = {\n        id: chunk.id,\n        created: chunk.created.getDate(),\n        object: chunk.object,\n        // not exposed by Azure API\n        model: chunk.model,\n        // not exposed by Azure API\n        choices: chunk.choices.map((choice) => {\n          var _a11, _b, _c, _d, _e, _f, _g;\n          return {\n            delta: {\n              content: (_a11 = choice.delta) == null ? void 0 : _a11.content,\n              function_call: (_b = choice.delta) == null ? void 0 : _b.functionCall,\n              role: (_c = choice.delta) == null ? void 0 : _c.role,\n              tool_calls: ((_e = (_d = choice.delta) == null ? void 0 : _d.toolCalls) == null ? void 0 : _e.length) ? (_g = (_f = choice.delta) == null ? void 0 : _f.toolCalls) == null ? void 0 : _g.map((toolCall, index) => ({\n                index,\n                id: toolCall.id,\n                function: toolCall.function,\n                type: toolCall.type\n              })) : void 0\n            },\n            finish_reason: choice.finishReason,\n            index: choice.index\n          };\n        })\n      };\n    }\n    const text = extract(chunk);\n    if (text)\n      yield text;\n  }\n}\nfunction chunkToText() {\n  const trimStartOfStream = trimStartOfStreamHelper();\n  let isFunctionStreamingIn;\n  return (json) => {\n    var _a11, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r;\n    if (isChatCompletionChunk(json)) {\n      const delta = (_a11 = json.choices[0]) == null ? void 0 : _a11.delta;\n      if ((_b = delta.function_call) == null ? void 0 : _b.name) {\n        isFunctionStreamingIn = true;\n        return {\n          isText: false,\n          content: `{\"function_call\": {\"name\": \"${delta.function_call.name}\", \"arguments\": \"`\n        };\n      } else if ((_e = (_d = (_c = delta.tool_calls) == null ? void 0 : _c[0]) == null ? void 0 : _d.function) == null ? void 0 : _e.name) {\n        isFunctionStreamingIn = true;\n        const toolCall = delta.tool_calls[0];\n        if (toolCall.index === 0) {\n          return {\n            isText: false,\n            content: `{\"tool_calls\":[ {\"id\": \"${toolCall.id}\", \"type\": \"function\", \"function\": {\"name\": \"${(_f = toolCall.function) == null ? void 0 : _f.name}\", \"arguments\": \"`\n          };\n        } else {\n          return {\n            isText: false,\n            content: `\"}}, {\"id\": \"${toolCall.id}\", \"type\": \"function\", \"function\": {\"name\": \"${(_g = toolCall.function) == null ? void 0 : _g.name}\", \"arguments\": \"`\n          };\n        }\n      } else if ((_h = delta.function_call) == null ? void 0 : _h.arguments) {\n        return {\n          isText: false,\n          content: cleanupArguments((_i = delta.function_call) == null ? void 0 : _i.arguments)\n        };\n      } else if ((_l = (_k = (_j = delta.tool_calls) == null ? void 0 : _j[0]) == null ? void 0 : _k.function) == null ? void 0 : _l.arguments) {\n        return {\n          isText: false,\n          content: cleanupArguments((_o = (_n = (_m = delta.tool_calls) == null ? void 0 : _m[0]) == null ? void 0 : _n.function) == null ? void 0 : _o.arguments)\n        };\n      } else if (isFunctionStreamingIn && (((_p = json.choices[0]) == null ? void 0 : _p.finish_reason) === \"function_call\" || ((_q = json.choices[0]) == null ? void 0 : _q.finish_reason) === \"stop\")) {\n        isFunctionStreamingIn = false;\n        return {\n          isText: false,\n          content: '\"}}'\n        };\n      } else if (isFunctionStreamingIn && ((_r = json.choices[0]) == null ? void 0 : _r.finish_reason) === \"tool_calls\") {\n        isFunctionStreamingIn = false;\n        return {\n          isText: false,\n          content: '\"}}]}'\n        };\n      }\n    }\n    const text = trimStartOfStream(\n      isChatCompletionChunk(json) && json.choices[0].delta.content ? json.choices[0].delta.content : isCompletion(json) ? json.choices[0].text : \"\"\n    );\n    return text;\n  };\n  function cleanupArguments(argumentChunk) {\n    let escapedPartialJson = argumentChunk.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\//g, \"\\\\/\").replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/\\t/g, \"\\\\t\").replace(/\\f/g, \"\\\\f\");\n    return `${escapedPartialJson}`;\n  }\n}\nvar __internal__OpenAIFnMessagesSymbol = Symbol(\n  \"internal_openai_fn_messages\"\n);\nfunction isChatCompletionChunk(data) {\n  return \"choices\" in data && data.choices && data.choices[0] && \"delta\" in data.choices[0];\n}\nfunction isCompletion(data) {\n  return \"choices\" in data && data.choices && data.choices[0] && \"text\" in data.choices[0];\n}\nfunction OpenAIStream(res, callbacks) {\n  const cb = callbacks;\n  let stream;\n  if (Symbol.asyncIterator in res) {\n    stream = readableFromAsyncIterable(streamable5(res)).pipeThrough(\n      createCallbacksTransformer(\n        (cb == null ? void 0 : cb.experimental_onFunctionCall) || (cb == null ? void 0 : cb.experimental_onToolCall) ? {\n          ...cb,\n          onFinal: void 0\n        } : {\n          ...cb\n        }\n      )\n    );\n  } else {\n    stream = AIStream(\n      res,\n      parseOpenAIStream(),\n      (cb == null ? void 0 : cb.experimental_onFunctionCall) || (cb == null ? void 0 : cb.experimental_onToolCall) ? {\n        ...cb,\n        onFinal: void 0\n      } : {\n        ...cb\n      }\n    );\n  }\n  if (cb && (cb.experimental_onFunctionCall || cb.experimental_onToolCall)) {\n    const functionCallTransformer = createFunctionCallTransformer(cb);\n    return stream.pipeThrough(functionCallTransformer);\n  } else {\n    return stream.pipeThrough(createStreamDataTransformer());\n  }\n}\nfunction createFunctionCallTransformer(callbacks) {\n  const textEncoder = new TextEncoder();\n  let isFirstChunk = true;\n  let aggregatedResponse = \"\";\n  let aggregatedFinalCompletionResponse = \"\";\n  let isFunctionStreamingIn = false;\n  let functionCallMessages = callbacks[__internal__OpenAIFnMessagesSymbol] || [];\n  const decode = createChunkDecoder();\n  return new TransformStream({\n    async transform(chunk, controller) {\n      const message = decode(chunk);\n      aggregatedFinalCompletionResponse += message;\n      const shouldHandleAsFunction = isFirstChunk && (message.startsWith('{\"function_call\":') || message.startsWith('{\"tool_calls\":'));\n      if (shouldHandleAsFunction) {\n        isFunctionStreamingIn = true;\n        aggregatedResponse += message;\n        isFirstChunk = false;\n        return;\n      }\n      if (!isFunctionStreamingIn) {\n        controller.enqueue(\n          textEncoder.encode(formatStreamPart4(\"text\", message))\n        );\n        return;\n      } else {\n        aggregatedResponse += message;\n      }\n    },\n    async flush(controller) {\n      try {\n        if (!isFirstChunk && isFunctionStreamingIn && (callbacks.experimental_onFunctionCall || callbacks.experimental_onToolCall)) {\n          isFunctionStreamingIn = false;\n          const payload = JSON.parse(aggregatedResponse);\n          let newFunctionCallMessages = [\n            ...functionCallMessages\n          ];\n          let functionResponse = void 0;\n          if (callbacks.experimental_onFunctionCall) {\n            if (payload.function_call === void 0) {\n              console.warn(\n                \"experimental_onFunctionCall should not be defined when using tools\"\n              );\n            }\n            const argumentsPayload = JSON.parse(\n              payload.function_call.arguments\n            );\n            functionResponse = await callbacks.experimental_onFunctionCall(\n              {\n                name: payload.function_call.name,\n                arguments: argumentsPayload\n              },\n              (result) => {\n                newFunctionCallMessages = [\n                  ...functionCallMessages,\n                  {\n                    role: \"assistant\",\n                    content: \"\",\n                    function_call: payload.function_call\n                  },\n                  {\n                    role: \"function\",\n                    name: payload.function_call.name,\n                    content: JSON.stringify(result)\n                  }\n                ];\n                return newFunctionCallMessages;\n              }\n            );\n          }\n          if (callbacks.experimental_onToolCall) {\n            const toolCalls = {\n              tools: []\n            };\n            for (const tool2 of payload.tool_calls) {\n              toolCalls.tools.push({\n                id: tool2.id,\n                type: \"function\",\n                func: {\n                  name: tool2.function.name,\n                  arguments: JSON.parse(tool2.function.arguments)\n                }\n              });\n            }\n            let responseIndex = 0;\n            try {\n              functionResponse = await callbacks.experimental_onToolCall(\n                toolCalls,\n                (result) => {\n                  if (result) {\n                    const { tool_call_id, function_name, tool_call_result } = result;\n                    newFunctionCallMessages = [\n                      ...newFunctionCallMessages,\n                      // Only append the assistant message if it's the first response\n                      ...responseIndex === 0 ? [\n                        {\n                          role: \"assistant\",\n                          content: \"\",\n                          tool_calls: payload.tool_calls.map(\n                            (tc) => ({\n                              id: tc.id,\n                              type: \"function\",\n                              function: {\n                                name: tc.function.name,\n                                // we send the arguments an object to the user, but as the API expects a string, we need to stringify it\n                                arguments: JSON.stringify(\n                                  tc.function.arguments\n                                )\n                              }\n                            })\n                          )\n                        }\n                      ] : [],\n                      // Append the function call result message\n                      {\n                        role: \"tool\",\n                        tool_call_id,\n                        name: function_name,\n                        content: JSON.stringify(tool_call_result)\n                      }\n                    ];\n                    responseIndex++;\n                  }\n                  return newFunctionCallMessages;\n                }\n              );\n            } catch (e) {\n              console.error(\"Error calling experimental_onToolCall:\", e);\n            }\n          }\n          if (!functionResponse) {\n            controller.enqueue(\n              textEncoder.encode(\n                formatStreamPart4(\n                  payload.function_call ? \"function_call\" : \"tool_calls\",\n                  // parse to prevent double-encoding:\n                  JSON.parse(aggregatedResponse)\n                )\n              )\n            );\n            return;\n          } else if (typeof functionResponse === \"string\") {\n            controller.enqueue(\n              textEncoder.encode(formatStreamPart4(\"text\", functionResponse))\n            );\n            aggregatedFinalCompletionResponse = functionResponse;\n            return;\n          }\n          const filteredCallbacks = {\n            ...callbacks,\n            onStart: void 0\n          };\n          callbacks.onFinal = void 0;\n          const openAIStream = OpenAIStream(functionResponse, {\n            ...filteredCallbacks,\n            [__internal__OpenAIFnMessagesSymbol]: newFunctionCallMessages\n          });\n          const reader = openAIStream.getReader();\n          while (true) {\n            const { done, value } = await reader.read();\n            if (done) {\n              break;\n            }\n            controller.enqueue(value);\n          }\n        }\n      } finally {\n        if (callbacks.onFinal && aggregatedFinalCompletionResponse) {\n          await callbacks.onFinal(aggregatedFinalCompletionResponse);\n        }\n      }\n    }\n  });\n}\n\n// streams/replicate-stream.ts\nasync function ReplicateStream(res, cb, options) {\n  var _a11;\n  const url = (_a11 = res.urls) == null ? void 0 : _a11.stream;\n  if (!url) {\n    if (res.error)\n      throw new Error(res.error);\n    else\n      throw new Error(\"Missing stream URL in Replicate response\");\n  }\n  const eventStream = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      Accept: \"text/event-stream\",\n      ...options == null ? void 0 : options.headers\n    }\n  });\n  return AIStream(eventStream, void 0, cb).pipeThrough(\n    createStreamDataTransformer()\n  );\n}\n\n// streams/stream-to-response.ts\nfunction streamToResponse(res, response, init, data) {\n  var _a11;\n  response.writeHead((_a11 = init == null ? void 0 : init.status) != null ? _a11 : 200, {\n    \"Content-Type\": \"text/plain; charset=utf-8\",\n    ...init == null ? void 0 : init.headers\n  });\n  let processedStream = res;\n  if (data) {\n    processedStream = mergeStreams(data.stream, res);\n  }\n  const reader = processedStream.getReader();\n  function read() {\n    reader.read().then(({ done, value }) => {\n      if (done) {\n        response.end();\n        return;\n      }\n      response.write(value);\n      read();\n    });\n  }\n  read();\n}\n\n// streams/streaming-text-response.ts\nvar StreamingTextResponse = class extends Response {\n  constructor(res, init, data) {\n    let processedStream = res;\n    if (data) {\n      processedStream = mergeStreams(data.stream, res);\n    }\n    super(processedStream, {\n      ...init,\n      status: 200,\n      headers: prepareResponseHeaders(init, {\n        contentType: \"text/plain; charset=utf-8\"\n      })\n    });\n  }\n};\n\n// streams/index.ts\nvar generateId2 = generateIdImpl;\nvar nanoid = generateIdImpl;\nexport {\n  AISDKError10 as AISDKError,\n  AIStream,\n  APICallError2 as APICallError,\n  AWSBedrockAnthropicMessagesStream,\n  AWSBedrockAnthropicStream,\n  AWSBedrockCohereStream,\n  AWSBedrockLlama2Stream,\n  AWSBedrockStream,\n  AnthropicStream,\n  AssistantResponse,\n  CohereStream,\n  DownloadError,\n  EmptyResponseBodyError,\n  GoogleGenerativeAIStream,\n  HuggingFaceStream,\n  InkeepStream,\n  InvalidArgumentError,\n  InvalidDataContentError,\n  InvalidMessageRoleError,\n  InvalidPromptError2 as InvalidPromptError,\n  InvalidResponseDataError,\n  InvalidToolArgumentsError,\n  JSONParseError,\n  langchain_adapter_exports as LangChainAdapter,\n  LangChainStream,\n  llamaindex_adapter_exports as LlamaIndexAdapter,\n  LoadAPIKeyError,\n  MessageConversionError,\n  MistralStream,\n  NoContentGeneratedError,\n  NoObjectGeneratedError,\n  NoSuchModelError,\n  NoSuchProviderError,\n  NoSuchToolError,\n  OpenAIStream,\n  ReplicateStream,\n  RetryError,\n  StreamData2 as StreamData,\n  StreamingTextResponse,\n  TypeValidationError2 as TypeValidationError,\n  UnsupportedFunctionalityError2 as UnsupportedFunctionalityError,\n  convertToCoreMessages,\n  cosineSimilarity,\n  createCallbacksTransformer,\n  createEventStreamTransformer,\n  createStreamDataTransformer,\n  embed,\n  embedMany,\n  experimental_AssistantResponse,\n  experimental_StreamData,\n  experimental_createModelRegistry,\n  experimental_createProviderRegistry,\n  experimental_customProvider,\n  experimental_generateObject,\n  experimental_generateText,\n  experimental_streamObject,\n  experimental_streamText,\n  experimental_wrapLanguageModel,\n  formatStreamPart,\n  generateId2 as generateId,\n  generateObject,\n  generateText,\n  jsonSchema,\n  nanoid,\n  parseStreamPart,\n  processDataProtocolResponse,\n  readDataStream,\n  readableFromAsyncIterable,\n  streamObject,\n  streamText,\n  streamToResponse,\n  tool,\n  trimStartOfStreamHelper\n};\n//# sourceMappingURL=index.mjs.map","// src/openai-facade.ts\nimport { loadApiKey, withoutTrailingSlash } from \"@ai-sdk/provider-utils\";\n\n// src/openai-chat-language-model.ts\nimport {\n  InvalidResponseDataError,\n  UnsupportedFunctionalityError as UnsupportedFunctionalityError3\n} from \"@ai-sdk/provider\";\nimport {\n  combineHeaders,\n  createEventSourceResponseHandler,\n  createJsonResponseHandler,\n  generateId,\n  isParsableJson,\n  postJsonToApi\n} from \"@ai-sdk/provider-utils\";\nimport { z as z2 } from \"zod\";\n\n// src/convert-to-openai-chat-messages.ts\nimport {\n  UnsupportedFunctionalityError\n} from \"@ai-sdk/provider\";\nimport { convertUint8ArrayToBase64 } from \"@ai-sdk/provider-utils\";\nfunction convertToOpenAIChatMessages({\n  prompt,\n  useLegacyFunctionCalling = false\n}) {\n  const messages = [];\n  for (const { role, content } of prompt) {\n    switch (role) {\n      case \"system\": {\n        messages.push({ role: \"system\", content });\n        break;\n      }\n      case \"user\": {\n        if (content.length === 1 && content[0].type === \"text\") {\n          messages.push({ role: \"user\", content: content[0].text });\n          break;\n        }\n        messages.push({\n          role: \"user\",\n          content: content.map((part) => {\n            var _a, _b, _c;\n            switch (part.type) {\n              case \"text\": {\n                return { type: \"text\", text: part.text };\n              }\n              case \"image\": {\n                return {\n                  type: \"image_url\",\n                  image_url: {\n                    url: part.image instanceof URL ? part.image.toString() : `data:${(_a = part.mimeType) != null ? _a : \"image/jpeg\"};base64,${convertUint8ArrayToBase64(part.image)}`,\n                    // OpenAI specific extension: image detail\n                    detail: (_c = (_b = part.providerMetadata) == null ? void 0 : _b.openai) == null ? void 0 : _c.imageDetail\n                  }\n                };\n              }\n              case \"file\": {\n                if (part.data instanceof URL) {\n                  throw new UnsupportedFunctionalityError({\n                    functionality: \"'File content parts with URL data' functionality not supported.\"\n                  });\n                }\n                switch (part.mimeType) {\n                  case \"audio/wav\": {\n                    return {\n                      type: \"input_audio\",\n                      input_audio: { data: part.data, format: \"wav\" }\n                    };\n                  }\n                  case \"audio/mp3\":\n                  case \"audio/mpeg\": {\n                    return {\n                      type: \"input_audio\",\n                      input_audio: { data: part.data, format: \"mp3\" }\n                    };\n                  }\n                  default: {\n                    throw new UnsupportedFunctionalityError({\n                      functionality: `File content part type ${part.mimeType} in user messages`\n                    });\n                  }\n                }\n              }\n            }\n          })\n        });\n        break;\n      }\n      case \"assistant\": {\n        let text = \"\";\n        const toolCalls = [];\n        for (const part of content) {\n          switch (part.type) {\n            case \"text\": {\n              text += part.text;\n              break;\n            }\n            case \"tool-call\": {\n              toolCalls.push({\n                id: part.toolCallId,\n                type: \"function\",\n                function: {\n                  name: part.toolName,\n                  arguments: JSON.stringify(part.args)\n                }\n              });\n              break;\n            }\n            default: {\n              const _exhaustiveCheck = part;\n              throw new Error(`Unsupported part: ${_exhaustiveCheck}`);\n            }\n          }\n        }\n        if (useLegacyFunctionCalling) {\n          if (toolCalls.length > 1) {\n            throw new UnsupportedFunctionalityError({\n              functionality: \"useLegacyFunctionCalling with multiple tool calls in one message\"\n            });\n          }\n          messages.push({\n            role: \"assistant\",\n            content: text,\n            function_call: toolCalls.length > 0 ? toolCalls[0].function : void 0\n          });\n        } else {\n          messages.push({\n            role: \"assistant\",\n            content: text,\n            tool_calls: toolCalls.length > 0 ? toolCalls : void 0\n          });\n        }\n        break;\n      }\n      case \"tool\": {\n        for (const toolResponse of content) {\n          if (useLegacyFunctionCalling) {\n            messages.push({\n              role: \"function\",\n              name: toolResponse.toolName,\n              content: JSON.stringify(toolResponse.result)\n            });\n          } else {\n            messages.push({\n              role: \"tool\",\n              tool_call_id: toolResponse.toolCallId,\n              content: JSON.stringify(toolResponse.result)\n            });\n          }\n        }\n        break;\n      }\n      default: {\n        const _exhaustiveCheck = role;\n        throw new Error(`Unsupported role: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n  return messages;\n}\n\n// src/map-openai-chat-logprobs.ts\nfunction mapOpenAIChatLogProbsOutput(logprobs) {\n  var _a, _b;\n  return (_b = (_a = logprobs == null ? void 0 : logprobs.content) == null ? void 0 : _a.map(({ token, logprob, top_logprobs }) => ({\n    token,\n    logprob,\n    topLogprobs: top_logprobs ? top_logprobs.map(({ token: token2, logprob: logprob2 }) => ({\n      token: token2,\n      logprob: logprob2\n    })) : []\n  }))) != null ? _b : void 0;\n}\n\n// src/map-openai-finish-reason.ts\nfunction mapOpenAIFinishReason(finishReason) {\n  switch (finishReason) {\n    case \"stop\":\n      return \"stop\";\n    case \"length\":\n      return \"length\";\n    case \"content_filter\":\n      return \"content-filter\";\n    case \"function_call\":\n    case \"tool_calls\":\n      return \"tool-calls\";\n    default:\n      return \"unknown\";\n  }\n}\n\n// src/openai-error.ts\nimport { z } from \"zod\";\nimport { createJsonErrorResponseHandler } from \"@ai-sdk/provider-utils\";\nvar openAIErrorDataSchema = z.object({\n  error: z.object({\n    message: z.string(),\n    // The additional information below is handled loosely to support\n    // OpenAI-compatible providers that have slightly different error\n    // responses:\n    type: z.string().nullish(),\n    param: z.any().nullish(),\n    code: z.union([z.string(), z.number()]).nullish()\n  })\n});\nvar openaiFailedResponseHandler = createJsonErrorResponseHandler({\n  errorSchema: openAIErrorDataSchema,\n  errorToMessage: (data) => data.error.message\n});\n\n// src/get-response-metadata.ts\nfunction getResponseMetadata({\n  id,\n  model,\n  created\n}) {\n  return {\n    id: id != null ? id : void 0,\n    modelId: model != null ? model : void 0,\n    timestamp: created != null ? new Date(created * 1e3) : void 0\n  };\n}\n\n// src/openai-prepare-tools.ts\nimport {\n  UnsupportedFunctionalityError as UnsupportedFunctionalityError2\n} from \"@ai-sdk/provider\";\nfunction prepareTools({\n  mode,\n  useLegacyFunctionCalling = false,\n  structuredOutputs = false\n}) {\n  var _a;\n  const tools = ((_a = mode.tools) == null ? void 0 : _a.length) ? mode.tools : void 0;\n  const toolWarnings = [];\n  if (tools == null) {\n    return { tools: void 0, tool_choice: void 0, toolWarnings };\n  }\n  const toolChoice = mode.toolChoice;\n  if (useLegacyFunctionCalling) {\n    const openaiFunctions = [];\n    for (const tool of tools) {\n      if (tool.type === \"provider-defined\") {\n        toolWarnings.push({ type: \"unsupported-tool\", tool });\n      } else {\n        openaiFunctions.push({\n          name: tool.name,\n          description: tool.description,\n          parameters: tool.parameters\n        });\n      }\n    }\n    if (toolChoice == null) {\n      return {\n        functions: openaiFunctions,\n        function_call: void 0,\n        toolWarnings\n      };\n    }\n    const type2 = toolChoice.type;\n    switch (type2) {\n      case \"auto\":\n      case \"none\":\n      case void 0:\n        return {\n          functions: openaiFunctions,\n          function_call: void 0,\n          toolWarnings\n        };\n      case \"required\":\n        throw new UnsupportedFunctionalityError2({\n          functionality: \"useLegacyFunctionCalling and toolChoice: required\"\n        });\n      default:\n        return {\n          functions: openaiFunctions,\n          function_call: { name: toolChoice.toolName },\n          toolWarnings\n        };\n    }\n  }\n  const openaiTools = [];\n  for (const tool of tools) {\n    if (tool.type === \"provider-defined\") {\n      toolWarnings.push({ type: \"unsupported-tool\", tool });\n    } else {\n      openaiTools.push({\n        type: \"function\",\n        function: {\n          name: tool.name,\n          description: tool.description,\n          parameters: tool.parameters,\n          strict: structuredOutputs === true ? true : void 0\n        }\n      });\n    }\n  }\n  if (toolChoice == null) {\n    return { tools: openaiTools, tool_choice: void 0, toolWarnings };\n  }\n  const type = toolChoice.type;\n  switch (type) {\n    case \"auto\":\n    case \"none\":\n    case \"required\":\n      return { tools: openaiTools, tool_choice: type, toolWarnings };\n    case \"tool\":\n      return {\n        tools: openaiTools,\n        tool_choice: {\n          type: \"function\",\n          function: {\n            name: toolChoice.toolName\n          }\n        },\n        toolWarnings\n      };\n    default: {\n      const _exhaustiveCheck = type;\n      throw new UnsupportedFunctionalityError2({\n        functionality: `Unsupported tool choice type: ${_exhaustiveCheck}`\n      });\n    }\n  }\n}\n\n// src/openai-chat-language-model.ts\nvar OpenAIChatLanguageModel = class {\n  constructor(modelId, settings, config) {\n    this.specificationVersion = \"v1\";\n    this.modelId = modelId;\n    this.settings = settings;\n    this.config = config;\n  }\n  get supportsStructuredOutputs() {\n    return this.settings.structuredOutputs === true;\n  }\n  get defaultObjectGenerationMode() {\n    if (isAudioModel(this.modelId)) {\n      return \"tool\";\n    }\n    return this.supportsStructuredOutputs ? \"json\" : \"tool\";\n  }\n  get provider() {\n    return this.config.provider;\n  }\n  get supportsImageUrls() {\n    return !this.settings.downloadImages;\n  }\n  getArgs({\n    mode,\n    prompt,\n    maxTokens,\n    temperature,\n    topP,\n    topK,\n    frequencyPenalty,\n    presencePenalty,\n    stopSequences,\n    responseFormat,\n    seed,\n    providerMetadata\n  }) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i;\n    const type = mode.type;\n    const warnings = [];\n    if (topK != null) {\n      warnings.push({\n        type: \"unsupported-setting\",\n        setting: \"topK\"\n      });\n    }\n    if (responseFormat != null && responseFormat.type === \"json\" && responseFormat.schema != null) {\n      warnings.push({\n        type: \"unsupported-setting\",\n        setting: \"responseFormat\",\n        details: \"JSON response format schema is not supported\"\n      });\n    }\n    const useLegacyFunctionCalling = this.settings.useLegacyFunctionCalling;\n    if (useLegacyFunctionCalling && this.settings.parallelToolCalls === true) {\n      throw new UnsupportedFunctionalityError3({\n        functionality: \"useLegacyFunctionCalling with parallelToolCalls\"\n      });\n    }\n    if (useLegacyFunctionCalling && this.settings.structuredOutputs === true) {\n      throw new UnsupportedFunctionalityError3({\n        functionality: \"structuredOutputs with useLegacyFunctionCalling\"\n      });\n    }\n    const baseArgs = {\n      // model id:\n      model: this.modelId,\n      // model specific settings:\n      logit_bias: this.settings.logitBias,\n      logprobs: this.settings.logprobs === true || typeof this.settings.logprobs === \"number\" ? true : void 0,\n      top_logprobs: typeof this.settings.logprobs === \"number\" ? this.settings.logprobs : typeof this.settings.logprobs === \"boolean\" ? this.settings.logprobs ? 0 : void 0 : void 0,\n      user: this.settings.user,\n      parallel_tool_calls: this.settings.parallelToolCalls,\n      // standardized settings:\n      max_tokens: maxTokens,\n      temperature,\n      top_p: topP,\n      frequency_penalty: frequencyPenalty,\n      presence_penalty: presencePenalty,\n      stop: stopSequences,\n      seed,\n      // openai specific settings:\n      max_completion_tokens: (_b = (_a = providerMetadata == null ? void 0 : providerMetadata.openai) == null ? void 0 : _a.maxCompletionTokens) != null ? _b : void 0,\n      store: (_d = (_c = providerMetadata == null ? void 0 : providerMetadata.openai) == null ? void 0 : _c.store) != null ? _d : void 0,\n      metadata: (_f = (_e = providerMetadata == null ? void 0 : providerMetadata.openai) == null ? void 0 : _e.metadata) != null ? _f : void 0,\n      prediction: (_h = (_g = providerMetadata == null ? void 0 : providerMetadata.openai) == null ? void 0 : _g.prediction) != null ? _h : void 0,\n      // response format:\n      response_format: (responseFormat == null ? void 0 : responseFormat.type) === \"json\" ? { type: \"json_object\" } : void 0,\n      // messages:\n      messages: convertToOpenAIChatMessages({\n        prompt,\n        useLegacyFunctionCalling\n      })\n    };\n    if (isReasoningModel(this.modelId)) {\n      baseArgs.temperature = void 0;\n      baseArgs.top_p = void 0;\n      baseArgs.frequency_penalty = void 0;\n      baseArgs.presence_penalty = void 0;\n    }\n    switch (type) {\n      case \"regular\": {\n        const { tools, tool_choice, functions, function_call, toolWarnings } = prepareTools({\n          mode,\n          useLegacyFunctionCalling,\n          structuredOutputs: this.settings.structuredOutputs\n        });\n        return {\n          args: {\n            ...baseArgs,\n            tools,\n            tool_choice,\n            functions,\n            function_call\n          },\n          warnings: [...warnings, ...toolWarnings]\n        };\n      }\n      case \"object-json\": {\n        return {\n          args: {\n            ...baseArgs,\n            response_format: this.settings.structuredOutputs === true && mode.schema != null ? {\n              type: \"json_schema\",\n              json_schema: {\n                schema: mode.schema,\n                strict: true,\n                name: (_i = mode.name) != null ? _i : \"response\",\n                description: mode.description\n              }\n            } : { type: \"json_object\" }\n          },\n          warnings\n        };\n      }\n      case \"object-tool\": {\n        return {\n          args: useLegacyFunctionCalling ? {\n            ...baseArgs,\n            function_call: {\n              name: mode.tool.name\n            },\n            functions: [\n              {\n                name: mode.tool.name,\n                description: mode.tool.description,\n                parameters: mode.tool.parameters\n              }\n            ]\n          } : {\n            ...baseArgs,\n            tool_choice: {\n              type: \"function\",\n              function: { name: mode.tool.name }\n            },\n            tools: [\n              {\n                type: \"function\",\n                function: {\n                  name: mode.tool.name,\n                  description: mode.tool.description,\n                  parameters: mode.tool.parameters,\n                  strict: this.settings.structuredOutputs === true ? true : void 0\n                }\n              }\n            ]\n          },\n          warnings\n        };\n      }\n      default: {\n        const _exhaustiveCheck = type;\n        throw new Error(`Unsupported type: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n  async doGenerate(options) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r;\n    const { args: body, warnings } = this.getArgs(options);\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: this.config.url({\n        path: \"/chat/completions\",\n        modelId: this.modelId\n      }),\n      headers: combineHeaders(this.config.headers(), options.headers),\n      body,\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler(\n        openAIChatResponseSchema\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch\n    });\n    const { messages: rawPrompt, ...rawSettings } = body;\n    const choice = response.choices[0];\n    let providerMetadata;\n    if (((_b = (_a = response.usage) == null ? void 0 : _a.completion_tokens_details) == null ? void 0 : _b.reasoning_tokens) != null || ((_d = (_c = response.usage) == null ? void 0 : _c.prompt_tokens_details) == null ? void 0 : _d.cached_tokens) != null) {\n      providerMetadata = { openai: {} };\n      if (((_f = (_e = response.usage) == null ? void 0 : _e.completion_tokens_details) == null ? void 0 : _f.reasoning_tokens) != null) {\n        providerMetadata.openai.reasoningTokens = (_h = (_g = response.usage) == null ? void 0 : _g.completion_tokens_details) == null ? void 0 : _h.reasoning_tokens;\n      }\n      if (((_j = (_i = response.usage) == null ? void 0 : _i.prompt_tokens_details) == null ? void 0 : _j.cached_tokens) != null) {\n        providerMetadata.openai.cachedPromptTokens = (_l = (_k = response.usage) == null ? void 0 : _k.prompt_tokens_details) == null ? void 0 : _l.cached_tokens;\n      }\n    }\n    return {\n      text: (_m = choice.message.content) != null ? _m : void 0,\n      toolCalls: this.settings.useLegacyFunctionCalling && choice.message.function_call ? [\n        {\n          toolCallType: \"function\",\n          toolCallId: generateId(),\n          toolName: choice.message.function_call.name,\n          args: choice.message.function_call.arguments\n        }\n      ] : (_n = choice.message.tool_calls) == null ? void 0 : _n.map((toolCall) => {\n        var _a2;\n        return {\n          toolCallType: \"function\",\n          toolCallId: (_a2 = toolCall.id) != null ? _a2 : generateId(),\n          toolName: toolCall.function.name,\n          args: toolCall.function.arguments\n        };\n      }),\n      finishReason: mapOpenAIFinishReason(choice.finish_reason),\n      usage: {\n        promptTokens: (_p = (_o = response.usage) == null ? void 0 : _o.prompt_tokens) != null ? _p : NaN,\n        completionTokens: (_r = (_q = response.usage) == null ? void 0 : _q.completion_tokens) != null ? _r : NaN\n      },\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders },\n      request: { body: JSON.stringify(body) },\n      response: getResponseMetadata(response),\n      warnings,\n      logprobs: mapOpenAIChatLogProbsOutput(choice.logprobs),\n      providerMetadata\n    };\n  }\n  async doStream(options) {\n    if (isReasoningModel(this.modelId)) {\n      const result = await this.doGenerate(options);\n      const simulatedStream = new ReadableStream({\n        start(controller) {\n          controller.enqueue({ type: \"response-metadata\", ...result.response });\n          if (result.text) {\n            controller.enqueue({\n              type: \"text-delta\",\n              textDelta: result.text\n            });\n          }\n          if (result.toolCalls) {\n            for (const toolCall of result.toolCalls) {\n              controller.enqueue({\n                type: \"tool-call\",\n                ...toolCall\n              });\n            }\n          }\n          controller.enqueue({\n            type: \"finish\",\n            finishReason: result.finishReason,\n            usage: result.usage,\n            logprobs: result.logprobs,\n            providerMetadata: result.providerMetadata\n          });\n          controller.close();\n        }\n      });\n      return {\n        stream: simulatedStream,\n        rawCall: result.rawCall,\n        rawResponse: result.rawResponse,\n        warnings: result.warnings\n      };\n    }\n    const { args, warnings } = this.getArgs(options);\n    const body = {\n      ...args,\n      stream: true,\n      // only include stream_options when in strict compatibility mode:\n      stream_options: this.config.compatibility === \"strict\" ? { include_usage: true } : void 0\n    };\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: this.config.url({\n        path: \"/chat/completions\",\n        modelId: this.modelId\n      }),\n      headers: combineHeaders(this.config.headers(), options.headers),\n      body,\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createEventSourceResponseHandler(\n        openaiChatChunkSchema\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch\n    });\n    const { messages: rawPrompt, ...rawSettings } = args;\n    const toolCalls = [];\n    let finishReason = \"unknown\";\n    let usage = {\n      promptTokens: void 0,\n      completionTokens: void 0\n    };\n    let logprobs;\n    let isFirstChunk = true;\n    const { useLegacyFunctionCalling } = this.settings;\n    let providerMetadata;\n    return {\n      stream: response.pipeThrough(\n        new TransformStream({\n          transform(chunk, controller) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p;\n            if (!chunk.success) {\n              finishReason = \"error\";\n              controller.enqueue({ type: \"error\", error: chunk.error });\n              return;\n            }\n            const value = chunk.value;\n            if (\"error\" in value) {\n              finishReason = \"error\";\n              controller.enqueue({ type: \"error\", error: value.error });\n              return;\n            }\n            if (isFirstChunk) {\n              isFirstChunk = false;\n              controller.enqueue({\n                type: \"response-metadata\",\n                ...getResponseMetadata(value)\n              });\n            }\n            if (value.usage != null) {\n              usage = {\n                promptTokens: (_a = value.usage.prompt_tokens) != null ? _a : void 0,\n                completionTokens: (_b = value.usage.completion_tokens) != null ? _b : void 0\n              };\n              if (((_c = value.usage.prompt_tokens_details) == null ? void 0 : _c.cached_tokens) != null) {\n                providerMetadata = {\n                  openai: {\n                    cachedPromptTokens: (_d = value.usage.prompt_tokens_details) == null ? void 0 : _d.cached_tokens\n                  }\n                };\n              }\n            }\n            const choice = value.choices[0];\n            if ((choice == null ? void 0 : choice.finish_reason) != null) {\n              finishReason = mapOpenAIFinishReason(choice.finish_reason);\n            }\n            if ((choice == null ? void 0 : choice.delta) == null) {\n              return;\n            }\n            const delta = choice.delta;\n            if (delta.content != null) {\n              controller.enqueue({\n                type: \"text-delta\",\n                textDelta: delta.content\n              });\n            }\n            const mappedLogprobs = mapOpenAIChatLogProbsOutput(\n              choice == null ? void 0 : choice.logprobs\n            );\n            if (mappedLogprobs == null ? void 0 : mappedLogprobs.length) {\n              if (logprobs === void 0) logprobs = [];\n              logprobs.push(...mappedLogprobs);\n            }\n            const mappedToolCalls = useLegacyFunctionCalling && delta.function_call != null ? [\n              {\n                type: \"function\",\n                id: generateId(),\n                function: delta.function_call,\n                index: 0\n              }\n            ] : delta.tool_calls;\n            if (mappedToolCalls != null) {\n              for (const toolCallDelta of mappedToolCalls) {\n                const index = toolCallDelta.index;\n                if (toolCalls[index] == null) {\n                  if (toolCallDelta.type !== \"function\") {\n                    throw new InvalidResponseDataError({\n                      data: toolCallDelta,\n                      message: `Expected 'function' type.`\n                    });\n                  }\n                  if (toolCallDelta.id == null) {\n                    throw new InvalidResponseDataError({\n                      data: toolCallDelta,\n                      message: `Expected 'id' to be a string.`\n                    });\n                  }\n                  if (((_e = toolCallDelta.function) == null ? void 0 : _e.name) == null) {\n                    throw new InvalidResponseDataError({\n                      data: toolCallDelta,\n                      message: `Expected 'function.name' to be a string.`\n                    });\n                  }\n                  toolCalls[index] = {\n                    id: toolCallDelta.id,\n                    type: \"function\",\n                    function: {\n                      name: toolCallDelta.function.name,\n                      arguments: (_f = toolCallDelta.function.arguments) != null ? _f : \"\"\n                    }\n                  };\n                  const toolCall2 = toolCalls[index];\n                  if (((_g = toolCall2.function) == null ? void 0 : _g.name) != null && ((_h = toolCall2.function) == null ? void 0 : _h.arguments) != null) {\n                    if (toolCall2.function.arguments.length > 0) {\n                      controller.enqueue({\n                        type: \"tool-call-delta\",\n                        toolCallType: \"function\",\n                        toolCallId: toolCall2.id,\n                        toolName: toolCall2.function.name,\n                        argsTextDelta: toolCall2.function.arguments\n                      });\n                    }\n                    if (isParsableJson(toolCall2.function.arguments)) {\n                      controller.enqueue({\n                        type: \"tool-call\",\n                        toolCallType: \"function\",\n                        toolCallId: (_i = toolCall2.id) != null ? _i : generateId(),\n                        toolName: toolCall2.function.name,\n                        args: toolCall2.function.arguments\n                      });\n                    }\n                  }\n                  continue;\n                }\n                const toolCall = toolCalls[index];\n                if (((_j = toolCallDelta.function) == null ? void 0 : _j.arguments) != null) {\n                  toolCall.function.arguments += (_l = (_k = toolCallDelta.function) == null ? void 0 : _k.arguments) != null ? _l : \"\";\n                }\n                controller.enqueue({\n                  type: \"tool-call-delta\",\n                  toolCallType: \"function\",\n                  toolCallId: toolCall.id,\n                  toolName: toolCall.function.name,\n                  argsTextDelta: (_m = toolCallDelta.function.arguments) != null ? _m : \"\"\n                });\n                if (((_n = toolCall.function) == null ? void 0 : _n.name) != null && ((_o = toolCall.function) == null ? void 0 : _o.arguments) != null && isParsableJson(toolCall.function.arguments)) {\n                  controller.enqueue({\n                    type: \"tool-call\",\n                    toolCallType: \"function\",\n                    toolCallId: (_p = toolCall.id) != null ? _p : generateId(),\n                    toolName: toolCall.function.name,\n                    args: toolCall.function.arguments\n                  });\n                }\n              }\n            }\n          },\n          flush(controller) {\n            var _a, _b;\n            controller.enqueue({\n              type: \"finish\",\n              finishReason,\n              logprobs,\n              usage: {\n                promptTokens: (_a = usage.promptTokens) != null ? _a : NaN,\n                completionTokens: (_b = usage.completionTokens) != null ? _b : NaN\n              },\n              ...providerMetadata != null ? { providerMetadata } : {}\n            });\n          }\n        })\n      ),\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders },\n      request: { body: JSON.stringify(body) },\n      warnings\n    };\n  }\n};\nvar openAITokenUsageSchema = z2.object({\n  prompt_tokens: z2.number().nullish(),\n  completion_tokens: z2.number().nullish(),\n  prompt_tokens_details: z2.object({\n    cached_tokens: z2.number().nullish()\n  }).nullish(),\n  completion_tokens_details: z2.object({\n    reasoning_tokens: z2.number().nullish()\n  }).nullish()\n}).nullish();\nvar openAIChatResponseSchema = z2.object({\n  id: z2.string().nullish(),\n  created: z2.number().nullish(),\n  model: z2.string().nullish(),\n  choices: z2.array(\n    z2.object({\n      message: z2.object({\n        role: z2.literal(\"assistant\").nullish(),\n        content: z2.string().nullish(),\n        function_call: z2.object({\n          arguments: z2.string(),\n          name: z2.string()\n        }).nullish(),\n        tool_calls: z2.array(\n          z2.object({\n            id: z2.string().nullish(),\n            type: z2.literal(\"function\"),\n            function: z2.object({\n              name: z2.string(),\n              arguments: z2.string()\n            })\n          })\n        ).nullish()\n      }),\n      index: z2.number(),\n      logprobs: z2.object({\n        content: z2.array(\n          z2.object({\n            token: z2.string(),\n            logprob: z2.number(),\n            top_logprobs: z2.array(\n              z2.object({\n                token: z2.string(),\n                logprob: z2.number()\n              })\n            )\n          })\n        ).nullable()\n      }).nullish(),\n      finish_reason: z2.string().nullish()\n    })\n  ),\n  usage: openAITokenUsageSchema\n});\nvar openaiChatChunkSchema = z2.union([\n  z2.object({\n    id: z2.string().nullish(),\n    created: z2.number().nullish(),\n    model: z2.string().nullish(),\n    choices: z2.array(\n      z2.object({\n        delta: z2.object({\n          role: z2.enum([\"assistant\"]).nullish(),\n          content: z2.string().nullish(),\n          function_call: z2.object({\n            name: z2.string().optional(),\n            arguments: z2.string().optional()\n          }).nullish(),\n          tool_calls: z2.array(\n            z2.object({\n              index: z2.number(),\n              id: z2.string().nullish(),\n              type: z2.literal(\"function\").optional(),\n              function: z2.object({\n                name: z2.string().nullish(),\n                arguments: z2.string().nullish()\n              })\n            })\n          ).nullish()\n        }).nullish(),\n        logprobs: z2.object({\n          content: z2.array(\n            z2.object({\n              token: z2.string(),\n              logprob: z2.number(),\n              top_logprobs: z2.array(\n                z2.object({\n                  token: z2.string(),\n                  logprob: z2.number()\n                })\n              )\n            })\n          ).nullable()\n        }).nullish(),\n        finish_reason: z2.string().nullable().optional(),\n        index: z2.number()\n      })\n    ),\n    usage: openAITokenUsageSchema\n  }),\n  openAIErrorDataSchema\n]);\nfunction isReasoningModel(modelId) {\n  return modelId.startsWith(\"o1-\");\n}\nfunction isAudioModel(modelId) {\n  return modelId.startsWith(\"gpt-4o-audio-preview\");\n}\n\n// src/openai-completion-language-model.ts\nimport {\n  UnsupportedFunctionalityError as UnsupportedFunctionalityError5\n} from \"@ai-sdk/provider\";\nimport {\n  combineHeaders as combineHeaders2,\n  createEventSourceResponseHandler as createEventSourceResponseHandler2,\n  createJsonResponseHandler as createJsonResponseHandler2,\n  postJsonToApi as postJsonToApi2\n} from \"@ai-sdk/provider-utils\";\nimport { z as z3 } from \"zod\";\n\n// src/convert-to-openai-completion-prompt.ts\nimport {\n  InvalidPromptError,\n  UnsupportedFunctionalityError as UnsupportedFunctionalityError4\n} from \"@ai-sdk/provider\";\nfunction convertToOpenAICompletionPrompt({\n  prompt,\n  inputFormat,\n  user = \"user\",\n  assistant = \"assistant\"\n}) {\n  if (inputFormat === \"prompt\" && prompt.length === 1 && prompt[0].role === \"user\" && prompt[0].content.length === 1 && prompt[0].content[0].type === \"text\") {\n    return { prompt: prompt[0].content[0].text };\n  }\n  let text = \"\";\n  if (prompt[0].role === \"system\") {\n    text += `${prompt[0].content}\n\n`;\n    prompt = prompt.slice(1);\n  }\n  for (const { role, content } of prompt) {\n    switch (role) {\n      case \"system\": {\n        throw new InvalidPromptError({\n          message: \"Unexpected system message in prompt: ${content}\",\n          prompt\n        });\n      }\n      case \"user\": {\n        const userMessage = content.map((part) => {\n          switch (part.type) {\n            case \"text\": {\n              return part.text;\n            }\n            case \"image\": {\n              throw new UnsupportedFunctionalityError4({\n                functionality: \"images\"\n              });\n            }\n          }\n        }).join(\"\");\n        text += `${user}:\n${userMessage}\n\n`;\n        break;\n      }\n      case \"assistant\": {\n        const assistantMessage = content.map((part) => {\n          switch (part.type) {\n            case \"text\": {\n              return part.text;\n            }\n            case \"tool-call\": {\n              throw new UnsupportedFunctionalityError4({\n                functionality: \"tool-call messages\"\n              });\n            }\n          }\n        }).join(\"\");\n        text += `${assistant}:\n${assistantMessage}\n\n`;\n        break;\n      }\n      case \"tool\": {\n        throw new UnsupportedFunctionalityError4({\n          functionality: \"tool messages\"\n        });\n      }\n      default: {\n        const _exhaustiveCheck = role;\n        throw new Error(`Unsupported role: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n  text += `${assistant}:\n`;\n  return {\n    prompt: text,\n    stopSequences: [`\n${user}:`]\n  };\n}\n\n// src/map-openai-completion-logprobs.ts\nfunction mapOpenAICompletionLogProbs(logprobs) {\n  return logprobs == null ? void 0 : logprobs.tokens.map((token, index) => ({\n    token,\n    logprob: logprobs.token_logprobs[index],\n    topLogprobs: logprobs.top_logprobs ? Object.entries(logprobs.top_logprobs[index]).map(\n      ([token2, logprob]) => ({\n        token: token2,\n        logprob\n      })\n    ) : []\n  }));\n}\n\n// src/openai-completion-language-model.ts\nvar OpenAICompletionLanguageModel = class {\n  constructor(modelId, settings, config) {\n    this.specificationVersion = \"v1\";\n    this.defaultObjectGenerationMode = void 0;\n    this.modelId = modelId;\n    this.settings = settings;\n    this.config = config;\n  }\n  get provider() {\n    return this.config.provider;\n  }\n  getArgs({\n    mode,\n    inputFormat,\n    prompt,\n    maxTokens,\n    temperature,\n    topP,\n    topK,\n    frequencyPenalty,\n    presencePenalty,\n    stopSequences: userStopSequences,\n    responseFormat,\n    seed\n  }) {\n    var _a;\n    const type = mode.type;\n    const warnings = [];\n    if (topK != null) {\n      warnings.push({\n        type: \"unsupported-setting\",\n        setting: \"topK\"\n      });\n    }\n    if (responseFormat != null && responseFormat.type !== \"text\") {\n      warnings.push({\n        type: \"unsupported-setting\",\n        setting: \"responseFormat\",\n        details: \"JSON response format is not supported.\"\n      });\n    }\n    const { prompt: completionPrompt, stopSequences } = convertToOpenAICompletionPrompt({ prompt, inputFormat });\n    const stop = [...stopSequences != null ? stopSequences : [], ...userStopSequences != null ? userStopSequences : []];\n    const baseArgs = {\n      // model id:\n      model: this.modelId,\n      // model specific settings:\n      echo: this.settings.echo,\n      logit_bias: this.settings.logitBias,\n      logprobs: typeof this.settings.logprobs === \"number\" ? this.settings.logprobs : typeof this.settings.logprobs === \"boolean\" ? this.settings.logprobs ? 0 : void 0 : void 0,\n      suffix: this.settings.suffix,\n      user: this.settings.user,\n      // standardized settings:\n      max_tokens: maxTokens,\n      temperature,\n      top_p: topP,\n      frequency_penalty: frequencyPenalty,\n      presence_penalty: presencePenalty,\n      seed,\n      // prompt:\n      prompt: completionPrompt,\n      // stop sequences:\n      stop: stop.length > 0 ? stop : void 0\n    };\n    switch (type) {\n      case \"regular\": {\n        if ((_a = mode.tools) == null ? void 0 : _a.length) {\n          throw new UnsupportedFunctionalityError5({\n            functionality: \"tools\"\n          });\n        }\n        if (mode.toolChoice) {\n          throw new UnsupportedFunctionalityError5({\n            functionality: \"toolChoice\"\n          });\n        }\n        return { args: baseArgs, warnings };\n      }\n      case \"object-json\": {\n        throw new UnsupportedFunctionalityError5({\n          functionality: \"object-json mode\"\n        });\n      }\n      case \"object-tool\": {\n        throw new UnsupportedFunctionalityError5({\n          functionality: \"object-tool mode\"\n        });\n      }\n      default: {\n        const _exhaustiveCheck = type;\n        throw new Error(`Unsupported type: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n  async doGenerate(options) {\n    const { args, warnings } = this.getArgs(options);\n    const { responseHeaders, value: response } = await postJsonToApi2({\n      url: this.config.url({\n        path: \"/completions\",\n        modelId: this.modelId\n      }),\n      headers: combineHeaders2(this.config.headers(), options.headers),\n      body: args,\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler2(\n        openAICompletionResponseSchema\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch\n    });\n    const { prompt: rawPrompt, ...rawSettings } = args;\n    const choice = response.choices[0];\n    return {\n      text: choice.text,\n      usage: {\n        promptTokens: response.usage.prompt_tokens,\n        completionTokens: response.usage.completion_tokens\n      },\n      finishReason: mapOpenAIFinishReason(choice.finish_reason),\n      logprobs: mapOpenAICompletionLogProbs(choice.logprobs),\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders },\n      response: getResponseMetadata(response),\n      warnings,\n      request: { body: JSON.stringify(args) }\n    };\n  }\n  async doStream(options) {\n    const { args, warnings } = this.getArgs(options);\n    const body = {\n      ...args,\n      stream: true,\n      // only include stream_options when in strict compatibility mode:\n      stream_options: this.config.compatibility === \"strict\" ? { include_usage: true } : void 0\n    };\n    const { responseHeaders, value: response } = await postJsonToApi2({\n      url: this.config.url({\n        path: \"/completions\",\n        modelId: this.modelId\n      }),\n      headers: combineHeaders2(this.config.headers(), options.headers),\n      body,\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createEventSourceResponseHandler2(\n        openaiCompletionChunkSchema\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch\n    });\n    const { prompt: rawPrompt, ...rawSettings } = args;\n    let finishReason = \"unknown\";\n    let usage = {\n      promptTokens: Number.NaN,\n      completionTokens: Number.NaN\n    };\n    let logprobs;\n    let isFirstChunk = true;\n    return {\n      stream: response.pipeThrough(\n        new TransformStream({\n          transform(chunk, controller) {\n            if (!chunk.success) {\n              finishReason = \"error\";\n              controller.enqueue({ type: \"error\", error: chunk.error });\n              return;\n            }\n            const value = chunk.value;\n            if (\"error\" in value) {\n              finishReason = \"error\";\n              controller.enqueue({ type: \"error\", error: value.error });\n              return;\n            }\n            if (isFirstChunk) {\n              isFirstChunk = false;\n              controller.enqueue({\n                type: \"response-metadata\",\n                ...getResponseMetadata(value)\n              });\n            }\n            if (value.usage != null) {\n              usage = {\n                promptTokens: value.usage.prompt_tokens,\n                completionTokens: value.usage.completion_tokens\n              };\n            }\n            const choice = value.choices[0];\n            if ((choice == null ? void 0 : choice.finish_reason) != null) {\n              finishReason = mapOpenAIFinishReason(choice.finish_reason);\n            }\n            if ((choice == null ? void 0 : choice.text) != null) {\n              controller.enqueue({\n                type: \"text-delta\",\n                textDelta: choice.text\n              });\n            }\n            const mappedLogprobs = mapOpenAICompletionLogProbs(\n              choice == null ? void 0 : choice.logprobs\n            );\n            if (mappedLogprobs == null ? void 0 : mappedLogprobs.length) {\n              if (logprobs === void 0) logprobs = [];\n              logprobs.push(...mappedLogprobs);\n            }\n          },\n          flush(controller) {\n            controller.enqueue({\n              type: \"finish\",\n              finishReason,\n              logprobs,\n              usage\n            });\n          }\n        })\n      ),\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders },\n      warnings,\n      request: { body: JSON.stringify(body) }\n    };\n  }\n};\nvar openAICompletionResponseSchema = z3.object({\n  id: z3.string().nullish(),\n  created: z3.number().nullish(),\n  model: z3.string().nullish(),\n  choices: z3.array(\n    z3.object({\n      text: z3.string(),\n      finish_reason: z3.string(),\n      logprobs: z3.object({\n        tokens: z3.array(z3.string()),\n        token_logprobs: z3.array(z3.number()),\n        top_logprobs: z3.array(z3.record(z3.string(), z3.number())).nullable()\n      }).nullish()\n    })\n  ),\n  usage: z3.object({\n    prompt_tokens: z3.number(),\n    completion_tokens: z3.number()\n  })\n});\nvar openaiCompletionChunkSchema = z3.union([\n  z3.object({\n    id: z3.string().nullish(),\n    created: z3.number().nullish(),\n    model: z3.string().nullish(),\n    choices: z3.array(\n      z3.object({\n        text: z3.string(),\n        finish_reason: z3.string().nullish(),\n        index: z3.number(),\n        logprobs: z3.object({\n          tokens: z3.array(z3.string()),\n          token_logprobs: z3.array(z3.number()),\n          top_logprobs: z3.array(z3.record(z3.string(), z3.number())).nullable()\n        }).nullish()\n      })\n    ),\n    usage: z3.object({\n      prompt_tokens: z3.number(),\n      completion_tokens: z3.number()\n    }).nullish()\n  }),\n  openAIErrorDataSchema\n]);\n\n// src/openai-facade.ts\nvar OpenAI = class {\n  /**\n   * Creates a new OpenAI provider instance.\n   */\n  constructor(options = {}) {\n    var _a, _b;\n    this.baseURL = (_b = withoutTrailingSlash((_a = options.baseURL) != null ? _a : options.baseUrl)) != null ? _b : \"https://api.openai.com/v1\";\n    this.apiKey = options.apiKey;\n    this.organization = options.organization;\n    this.project = options.project;\n    this.headers = options.headers;\n  }\n  get baseConfig() {\n    return {\n      organization: this.organization,\n      baseURL: this.baseURL,\n      headers: () => ({\n        Authorization: `Bearer ${loadApiKey({\n          apiKey: this.apiKey,\n          environmentVariableName: \"OPENAI_API_KEY\",\n          description: \"OpenAI\"\n        })}`,\n        \"OpenAI-Organization\": this.organization,\n        \"OpenAI-Project\": this.project,\n        ...this.headers\n      })\n    };\n  }\n  chat(modelId, settings = {}) {\n    return new OpenAIChatLanguageModel(modelId, settings, {\n      provider: \"openai.chat\",\n      ...this.baseConfig,\n      compatibility: \"strict\",\n      url: ({ path }) => `${this.baseURL}${path}`\n    });\n  }\n  completion(modelId, settings = {}) {\n    return new OpenAICompletionLanguageModel(modelId, settings, {\n      provider: \"openai.completion\",\n      ...this.baseConfig,\n      compatibility: \"strict\",\n      url: ({ path }) => `${this.baseURL}${path}`\n    });\n  }\n};\n\n// src/openai-provider.ts\nimport {\n  loadApiKey as loadApiKey2,\n  withoutTrailingSlash as withoutTrailingSlash2\n} from \"@ai-sdk/provider-utils\";\n\n// src/openai-embedding-model.ts\nimport {\n  TooManyEmbeddingValuesForCallError\n} from \"@ai-sdk/provider\";\nimport {\n  combineHeaders as combineHeaders3,\n  createJsonResponseHandler as createJsonResponseHandler3,\n  postJsonToApi as postJsonToApi3\n} from \"@ai-sdk/provider-utils\";\nimport { z as z4 } from \"zod\";\nvar OpenAIEmbeddingModel = class {\n  constructor(modelId, settings, config) {\n    this.specificationVersion = \"v1\";\n    this.modelId = modelId;\n    this.settings = settings;\n    this.config = config;\n  }\n  get provider() {\n    return this.config.provider;\n  }\n  get maxEmbeddingsPerCall() {\n    var _a;\n    return (_a = this.settings.maxEmbeddingsPerCall) != null ? _a : 2048;\n  }\n  get supportsParallelCalls() {\n    var _a;\n    return (_a = this.settings.supportsParallelCalls) != null ? _a : true;\n  }\n  async doEmbed({\n    values,\n    headers,\n    abortSignal\n  }) {\n    if (values.length > this.maxEmbeddingsPerCall) {\n      throw new TooManyEmbeddingValuesForCallError({\n        provider: this.provider,\n        modelId: this.modelId,\n        maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,\n        values\n      });\n    }\n    const { responseHeaders, value: response } = await postJsonToApi3({\n      url: this.config.url({\n        path: \"/embeddings\",\n        modelId: this.modelId\n      }),\n      headers: combineHeaders3(this.config.headers(), headers),\n      body: {\n        model: this.modelId,\n        input: values,\n        encoding_format: \"float\",\n        dimensions: this.settings.dimensions,\n        user: this.settings.user\n      },\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler3(\n        openaiTextEmbeddingResponseSchema\n      ),\n      abortSignal,\n      fetch: this.config.fetch\n    });\n    return {\n      embeddings: response.data.map((item) => item.embedding),\n      usage: response.usage ? { tokens: response.usage.prompt_tokens } : void 0,\n      rawResponse: { headers: responseHeaders }\n    };\n  }\n};\nvar openaiTextEmbeddingResponseSchema = z4.object({\n  data: z4.array(z4.object({ embedding: z4.array(z4.number()) })),\n  usage: z4.object({ prompt_tokens: z4.number() }).nullish()\n});\n\n// src/openai-provider.ts\nfunction createOpenAI(options = {}) {\n  var _a, _b, _c, _d;\n  const baseURL = (_b = withoutTrailingSlash2((_a = options.baseURL) != null ? _a : options.baseUrl)) != null ? _b : \"https://api.openai.com/v1\";\n  const compatibility = (_c = options.compatibility) != null ? _c : \"compatible\";\n  const providerName = (_d = options.name) != null ? _d : \"openai\";\n  const getHeaders = () => ({\n    Authorization: `Bearer ${loadApiKey2({\n      apiKey: options.apiKey,\n      environmentVariableName: \"OPENAI_API_KEY\",\n      description: \"OpenAI\"\n    })}`,\n    \"OpenAI-Organization\": options.organization,\n    \"OpenAI-Project\": options.project,\n    ...options.headers\n  });\n  const createChatModel = (modelId, settings = {}) => new OpenAIChatLanguageModel(modelId, settings, {\n    provider: `${providerName}.chat`,\n    url: ({ path }) => `${baseURL}${path}`,\n    headers: getHeaders,\n    compatibility,\n    fetch: options.fetch\n  });\n  const createCompletionModel = (modelId, settings = {}) => new OpenAICompletionLanguageModel(modelId, settings, {\n    provider: `${providerName}.completion`,\n    url: ({ path }) => `${baseURL}${path}`,\n    headers: getHeaders,\n    compatibility,\n    fetch: options.fetch\n  });\n  const createEmbeddingModel = (modelId, settings = {}) => new OpenAIEmbeddingModel(modelId, settings, {\n    provider: `${providerName}.embedding`,\n    url: ({ path }) => `${baseURL}${path}`,\n    headers: getHeaders,\n    fetch: options.fetch\n  });\n  const createLanguageModel = (modelId, settings) => {\n    if (new.target) {\n      throw new Error(\n        \"The OpenAI model function cannot be called with the new keyword.\"\n      );\n    }\n    if (modelId === \"gpt-3.5-turbo-instruct\") {\n      return createCompletionModel(\n        modelId,\n        settings\n      );\n    }\n    return createChatModel(modelId, settings);\n  };\n  const provider = function(modelId, settings) {\n    return createLanguageModel(modelId, settings);\n  };\n  provider.languageModel = createLanguageModel;\n  provider.chat = createChatModel;\n  provider.completion = createCompletionModel;\n  provider.embedding = createEmbeddingModel;\n  provider.textEmbedding = createEmbeddingModel;\n  provider.textEmbeddingModel = createEmbeddingModel;\n  return provider;\n}\nvar openai = createOpenAI({\n  compatibility: \"strict\"\n  // strict for OpenAI API\n});\nexport {\n  OpenAI,\n  createOpenAI,\n  openai\n};\n//# sourceMappingURL=index.mjs.map","export const initialMessage = {\n    role: \"system\",\n    content: `You are an AI assistant for SQR, a platform specializing in recruitment, hiring solutions, and career development. Here are the key features and offerings of SQR:\n  \n    **Key Features Include:**\n    - **Efficient Job Matching**: AI-powered matching to connect job seekers with relevant opportunities.\n    - **Seamless Hiring Process**: End-to-end recruitment solutions for hiring managers and businesses.\n    - **Candidate Engagement Tools**: Improve communication and retention for top talent.\n    - **Quality Talent Acquisition**: Advanced screening and vetting to ensure top-quality hires.\n    - **Career Growth Resources**: Guidance and tools to help job seekers enhance their careers.\n    - **Transparent Hiring**: Data-driven insights to improve hiring decisions.\n  \n    **Our Services:**\n    - **For Job Seekers**: Access to a wide range of job listings, resume-building tools, and career guidance.\n    - **For Hiring Managers**: AI-driven candidate recommendations, automated screening, and seamless interview scheduling.\n    - **For Companies**: Tailored recruitment strategies, employer branding solutions, and workforce analytics.\n    - **Partnership Opportunities**: Collaborate with SQR to improve hiring efficiency and access premium talent.\n  \n    **Our Core Values:**\n    - **Integrity**: Committed to fair and ethical hiring practices.\n    - **Customer Commitment**: Dedicated to providing the best job search and hiring experience.\n    - **Quality & Transparency**: Ensuring high standards in recruitment and career development.\n  \n    **Answer user queries about SQR's features, services, pricing, and capabilities only.** Do not answer questions unrelated to SQR. If a question is outside this scope, respond with:\n  \n    *\"I'm sorry, I can only answer questions related to SQR, its features, hiring solutions, and career development. Please visit our website for more information.\"*\n  \n    **Please format responses using Markdown.** Use **bold**, *italics*, \\`code\\`, lists, and other Markdown features where appropriate. Ensure responses are structured, clear, and easy to read.\n    `\n  };\n  ","import { streamText } from \"ai\";\nimport { createOpenAI } from \"@ai-sdk/openai\";\nimport { initialMessage } from \"@/lib/data\";\n\nconst openai = createOpenAI({\n    apiKey: process.env.OPENAI_API_KEY || \"\",\n    compatibility: \"strict\", // strict mode, enable when using the OpenAI API\n});\n\n// Set the runtime for edge\nexport const runtime = \"edge\";\n\nexport async function POST(req: Request) {\n    const { messages } = await req.json();\n\n    const stream = await streamText({\n        model: openai(\"gpt-4o-mini\"),\n        messages: [initialMessage, ...messages],\n        temperature: 1,\n    });\n\n    return stream?.toDataStreamResponse();\n}\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Users/saralask/Desktop/SquareResults/Prototype2/futuristic-interactive-showcase/app/api/openai/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/openai/route\",\n        pathname: \"/api/openai\",\n        filename: \"route\",\n        bundlePath: \"app/api/openai/route\"\n    },\n    resolvedPagePath: \"/Users/saralask/Desktop/SquareResults/Prototype2/futuristic-interactive-showcase/app/api/openai/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","var _self___RSC_MANIFEST;\nimport { createServerModuleMap } from \"next/dist/server/app-render/action-utils\";\nimport { setReferenceManifestsSingleton } from \"next/dist/server/app-render/encryption-utils\";\nimport { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fopenai%2Froute&page=%2Fapi%2Fopenai%2Froute&pagePath=private-next-app-dir%2Fapi%2Fopenai%2Froute.ts&appDir=%2FUsers%2Fsaralask%2FDesktop%2FSquareResults%2FPrototype2%2Ffuturistic-interactive-showcase%2Fapp&appPaths=%2Fapi%2Fopenai%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/openai/route.ts?__next_edge_ssr_entry__\";\nconst nextConfig = {\"env\":{},\"webpack\":null,\"eslint\":{\"ignoreDuringBuilds\":false},\"typescript\":{\"ignoreBuildErrors\":false,\"tsconfigPath\":\"tsconfig.json\"},\"distDir\":\".next\",\"cleanDistDir\":true,\"assetPrefix\":\"\",\"cacheMaxMemorySize\":52428800,\"configOrigin\":\"next.config.ts\",\"useFileSystemPublicRoutes\":true,\"generateEtags\":true,\"pageExtensions\":[\"tsx\",\"ts\",\"jsx\",\"js\"],\"poweredByHeader\":true,\"compress\":true,\"images\":{\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"loaderFile\":\"\",\"domains\":[],\"disableStaticImages\":false,\"minimumCacheTTL\":60,\"formats\":[\"image/webp\"],\"dangerouslyAllowSVG\":false,\"contentSecurityPolicy\":\"script-src 'none'; frame-src 'none'; sandbox;\",\"contentDispositionType\":\"attachment\",\"remotePatterns\":[],\"unoptimized\":false},\"devIndicators\":{\"appIsrStatus\":true,\"buildActivity\":true,\"buildActivityPosition\":\"bottom-right\"},\"onDemandEntries\":{\"maxInactiveAge\":60000,\"pagesBufferLength\":5},\"amp\":{\"canonicalBase\":\"\"},\"basePath\":\"\",\"sassOptions\":{},\"trailingSlash\":false,\"i18n\":null,\"productionBrowserSourceMaps\":false,\"excludeDefaultMomentLocales\":true,\"serverRuntimeConfig\":{},\"publicRuntimeConfig\":{},\"reactProductionProfiling\":false,\"reactStrictMode\":null,\"reactMaxHeadersLength\":6000,\"httpAgentOptions\":{\"keepAlive\":true},\"logging\":{},\"expireTime\":31536000,\"staticPageGenerationTimeout\":60,\"modularizeImports\":{\"@mui/icons-material\":{\"transform\":\"@mui/icons-material/{{member}}\"},\"lodash\":{\"transform\":\"lodash/{{member}}\"}},\"outputFileTracingRoot\":\"/Users/saralask/Desktop/SquareResults/Prototype2/futuristic-interactive-showcase\",\"experimental\":{\"cacheLife\":{\"default\":{\"stale\":300,\"revalidate\":900,\"expire\":4294967294},\"seconds\":{\"stale\":0,\"revalidate\":1,\"expire\":60},\"minutes\":{\"stale\":300,\"revalidate\":60,\"expire\":3600},\"hours\":{\"stale\":300,\"revalidate\":3600,\"expire\":86400},\"days\":{\"stale\":300,\"revalidate\":86400,\"expire\":604800},\"weeks\":{\"stale\":300,\"revalidate\":604800,\"expire\":2592000},\"max\":{\"stale\":300,\"revalidate\":2592000,\"expire\":4294967294}},\"cacheHandlers\":{},\"cssChunking\":true,\"multiZoneDraftMode\":false,\"appNavFailHandling\":false,\"prerenderEarlyExit\":true,\"serverMinification\":true,\"serverSourceMaps\":false,\"linkNoTouchStart\":false,\"caseSensitiveRoutes\":false,\"clientSegmentCache\":false,\"preloadEntriesOnStart\":true,\"clientRouterFilter\":true,\"clientRouterFilterRedirects\":false,\"fetchCacheKeyPrefix\":\"\",\"middlewarePrefetch\":\"flexible\",\"optimisticClientCache\":true,\"manualClientBasePath\":false,\"cpus\":7,\"memoryBasedWorkersCount\":false,\"imgOptConcurrency\":null,\"imgOptTimeoutInSeconds\":7,\"imgOptMaxInputPixels\":268402689,\"imgOptSequentialRead\":null,\"isrFlushToDisk\":true,\"workerThreads\":false,\"optimizeCss\":false,\"nextScriptWorkers\":false,\"scrollRestoration\":false,\"externalDir\":false,\"disableOptimizedLoading\":false,\"gzipSize\":true,\"craCompat\":false,\"esmExternals\":true,\"fullySpecified\":false,\"swcTraceProfiling\":false,\"forceSwcTransforms\":false,\"largePageDataBytes\":128000,\"turbo\":{\"root\":\"/Users/saralask/Desktop/SquareResults/Prototype2/futuristic-interactive-showcase\"},\"typedRoutes\":false,\"typedEnv\":false,\"parallelServerCompiles\":false,\"parallelServerBuildTraces\":false,\"ppr\":false,\"authInterrupts\":false,\"reactOwnerStack\":false,\"webpackMemoryOptimizations\":false,\"optimizeServerReact\":true,\"useEarlyImport\":false,\"staleTimes\":{\"dynamic\":0,\"static\":300},\"serverComponentsHmrCache\":true,\"staticGenerationMaxConcurrency\":8,\"staticGenerationMinPagesPerWorker\":25,\"dynamicIO\":false,\"inlineCss\":false,\"optimizePackageImports\":[\"lucide-react\",\"date-fns\",\"lodash-es\",\"ramda\",\"antd\",\"react-bootstrap\",\"ahooks\",\"@ant-design/icons\",\"@headlessui/react\",\"@headlessui-float/react\",\"@heroicons/react/20/solid\",\"@heroicons/react/24/solid\",\"@heroicons/react/24/outline\",\"@visx/visx\",\"@tremor/react\",\"rxjs\",\"@mui/material\",\"@mui/icons-material\",\"recharts\",\"react-use\",\"effect\",\"@effect/schema\",\"@effect/platform\",\"@effect/platform-node\",\"@effect/platform-browser\",\"@effect/platform-bun\",\"@effect/sql\",\"@effect/sql-mssql\",\"@effect/sql-mysql2\",\"@effect/sql-pg\",\"@effect/sql-squlite-node\",\"@effect/sql-squlite-bun\",\"@effect/sql-squlite-wasm\",\"@effect/sql-squlite-react-native\",\"@effect/rpc\",\"@effect/rpc-http\",\"@effect/typeclass\",\"@effect/experimental\",\"@effect/opentelemetry\",\"@material-ui/core\",\"@material-ui/icons\",\"@tabler/icons-react\",\"mui-core\",\"react-icons/ai\",\"react-icons/bi\",\"react-icons/bs\",\"react-icons/cg\",\"react-icons/ci\",\"react-icons/di\",\"react-icons/fa\",\"react-icons/fa6\",\"react-icons/fc\",\"react-icons/fi\",\"react-icons/gi\",\"react-icons/go\",\"react-icons/gr\",\"react-icons/hi\",\"react-icons/hi2\",\"react-icons/im\",\"react-icons/io\",\"react-icons/io5\",\"react-icons/lia\",\"react-icons/lib\",\"react-icons/lu\",\"react-icons/md\",\"react-icons/pi\",\"react-icons/ri\",\"react-icons/rx\",\"react-icons/si\",\"react-icons/sl\",\"react-icons/tb\",\"react-icons/tfi\",\"react-icons/ti\",\"react-icons/vsc\",\"react-icons/wi\"]},\"bundlePagesRouterDependencies\":false,\"configFile\":\"/Users/saralask/Desktop/SquareResults/Prototype2/futuristic-interactive-showcase/next.config.ts\",\"configFileName\":\"next.config.ts\"}\nconst maybeJSONParse = (str)=>str ? JSON.parse(str) : undefined;\nconst rscManifest = (_self___RSC_MANIFEST = self.__RSC_MANIFEST) == null ? void 0 : _self___RSC_MANIFEST[\"/api/openai/route\"];\nconst rscServerManifest = maybeJSONParse(self.__RSC_SERVER_MANIFEST);\nif (rscManifest && rscServerManifest) {\n    setReferenceManifestsSingleton({\n        page: \"/api/openai/route\",\n        clientReferenceManifest: rscManifest,\n        serverActionsManifest: rscServerManifest,\n        serverModuleMap: createServerModuleMap({\n            serverActionsManifest: rscServerManifest\n        })\n    });\n}\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule, {\n    nextConfig\n});\n\n//# sourceMappingURL=edge-app-route.js.map",null,null,"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { ROOT_CONTEXT } from './context';\nvar NoopContextManager = /** @class */ (function () {\n    function NoopContextManager() {\n    }\n    NoopContextManager.prototype.active = function () {\n        return ROOT_CONTEXT;\n    };\n    NoopContextManager.prototype.with = function (_context, fn, thisArg) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return fn.call.apply(fn, __spreadArray([thisArg], __read(args), false));\n    };\n    NoopContextManager.prototype.bind = function (_context, target) {\n        return target;\n    };\n    NoopContextManager.prototype.enable = function () {\n        return this;\n    };\n    NoopContextManager.prototype.disable = function () {\n        return this;\n    };\n    return NoopContextManager;\n}());\nexport { NoopContextManager };\n//# sourceMappingURL=NoopContextManager.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { NoopContextManager } from '../context/NoopContextManager';\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'context';\nvar NOOP_CONTEXT_MANAGER = new NoopContextManager();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nvar ContextAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function ContextAPI() {\n    }\n    /** Get the singleton instance of the Context API */\n    ContextAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new ContextAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current context manager.\n     *\n     * @returns true if the context manager was successfully registered, else false\n     */\n    ContextAPI.prototype.setGlobalContextManager = function (contextManager) {\n        return registerGlobal(API_NAME, contextManager, DiagAPI.instance());\n    };\n    /**\n     * Get the currently active context\n     */\n    ContextAPI.prototype.active = function () {\n        return this._getContextManager().active();\n    };\n    /**\n     * Execute a function with an active context\n     *\n     * @param context context to be active during function execution\n     * @param fn function to execute in a context\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    ContextAPI.prototype.with = function (context, fn, thisArg) {\n        var _a;\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return (_a = this._getContextManager()).with.apply(_a, __spreadArray([context, fn, thisArg], __read(args), false));\n    };\n    /**\n     * Bind a context to a target function or event emitter\n     *\n     * @param context context to bind to the event emitter or function. Defaults to the currently active context\n     * @param target function or event emitter to bind\n     */\n    ContextAPI.prototype.bind = function (context, target) {\n        return this._getContextManager().bind(context, target);\n    };\n    ContextAPI.prototype._getContextManager = function () {\n        return getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n    };\n    /** Disable and remove the global context manager */\n    ContextAPI.prototype.disable = function () {\n        this._getContextManager().disable();\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n    };\n    return ContextAPI;\n}());\nexport { ContextAPI };\n//# sourceMappingURL=context.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { getGlobal } from '../internal/global-utils';\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nvar DiagComponentLogger = /** @class */ (function () {\n    function DiagComponentLogger(props) {\n        this._namespace = props.namespace || 'DiagComponentLogger';\n    }\n    DiagComponentLogger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('debug', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('error', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('info', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('warn', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.verbose = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('verbose', this._namespace, args);\n    };\n    return DiagComponentLogger;\n}());\nexport { DiagComponentLogger };\nfunction logProxy(funcName, namespace, args) {\n    var logger = getGlobal('diag');\n    // shortcut if logger not set\n    if (!logger) {\n        return;\n    }\n    args.unshift(namespace);\n    return logger[funcName].apply(logger, __spreadArray([], __read(args), false));\n}\n//# sourceMappingURL=ComponentLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '../types';\nexport function createLogLevelDiagLogger(maxLevel, logger) {\n    if (maxLevel < DiagLogLevel.NONE) {\n        maxLevel = DiagLogLevel.NONE;\n    }\n    else if (maxLevel > DiagLogLevel.ALL) {\n        maxLevel = DiagLogLevel.ALL;\n    }\n    // In case the logger is null or undefined\n    logger = logger || {};\n    function _filterFunc(funcName, theLevel) {\n        var theFunc = logger[funcName];\n        if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n            return theFunc.bind(logger);\n        }\n        return function () { };\n    }\n    return {\n        error: _filterFunc('error', DiagLogLevel.ERROR),\n        warn: _filterFunc('warn', DiagLogLevel.WARN),\n        info: _filterFunc('info', DiagLogLevel.INFO),\n        debug: _filterFunc('debug', DiagLogLevel.DEBUG),\n        verbose: _filterFunc('verbose', DiagLogLevel.VERBOSE),\n    };\n}\n//# sourceMappingURL=logLevelLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { DiagComponentLogger } from '../diag/ComponentLogger';\nimport { createLogLevelDiagLogger } from '../diag/internal/logLevelLogger';\nimport { DiagLogLevel, } from '../diag/types';\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nvar API_NAME = 'diag';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nvar DiagAPI = /** @class */ (function () {\n    /**\n     * Private internal constructor\n     * @private\n     */\n    function DiagAPI() {\n        function _logProxy(funcName) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var logger = getGlobal('diag');\n                // shortcut if logger not set\n                if (!logger)\n                    return;\n                return logger[funcName].apply(logger, __spreadArray([], __read(args), false));\n            };\n        }\n        // Using self local variable for minification purposes as 'this' cannot be minified\n        var self = this;\n        // DiagAPI specific functions\n        var setLogger = function (logger, optionsOrLogLevel) {\n            var _a, _b, _c;\n            if (optionsOrLogLevel === void 0) { optionsOrLogLevel = { logLevel: DiagLogLevel.INFO }; }\n            if (logger === self) {\n                // There isn't much we can do here.\n                // Logging to the console might break the user application.\n                // Try to log to self. If a logger was previously registered it will receive the log.\n                var err = new Error('Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation');\n                self.error((_a = err.stack) !== null && _a !== void 0 ? _a : err.message);\n                return false;\n            }\n            if (typeof optionsOrLogLevel === 'number') {\n                optionsOrLogLevel = {\n                    logLevel: optionsOrLogLevel,\n                };\n            }\n            var oldLogger = getGlobal('diag');\n            var newLogger = createLogLevelDiagLogger((_b = optionsOrLogLevel.logLevel) !== null && _b !== void 0 ? _b : DiagLogLevel.INFO, logger);\n            // There already is an logger registered. We'll let it know before overwriting it.\n            if (oldLogger && !optionsOrLogLevel.suppressOverrideMessage) {\n                var stack = (_c = new Error().stack) !== null && _c !== void 0 ? _c : '<failed to generate stacktrace>';\n                oldLogger.warn(\"Current logger will be overwritten from \" + stack);\n                newLogger.warn(\"Current logger will overwrite one already registered from \" + stack);\n            }\n            return registerGlobal('diag', newLogger, self, true);\n        };\n        self.setLogger = setLogger;\n        self.disable = function () {\n            unregisterGlobal(API_NAME, self);\n        };\n        self.createComponentLogger = function (options) {\n            return new DiagComponentLogger(options);\n        };\n        self.verbose = _logProxy('verbose');\n        self.debug = _logProxy('debug');\n        self.info = _logProxy('info');\n        self.warn = _logProxy('warn');\n        self.error = _logProxy('error');\n    }\n    /** Get the singleton instance of the DiagAPI API */\n    DiagAPI.instance = function () {\n        if (!this._instance) {\n            this._instance = new DiagAPI();\n        }\n        return this._instance;\n    };\n    return DiagAPI;\n}());\nexport { DiagAPI };\n//# sourceMappingURL=diag.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description) {\n    // The specification states that for the same input, multiple calls should\n    // return different keys. Due to the nature of the JS dependency management\n    // system, this creates problems where multiple versions of some package\n    // could hold different keys for the same property.\n    //\n    // Therefore, we use Symbol.for which returns the same key for the same input.\n    return Symbol.for(description);\n}\nvar BaseContext = /** @class */ (function () {\n    /**\n     * Construct a new context which inherits values from an optional parent context.\n     *\n     * @param parentContext a context from which to inherit values\n     */\n    function BaseContext(parentContext) {\n        // for minification\n        var self = this;\n        self._currentContext = parentContext ? new Map(parentContext) : new Map();\n        self.getValue = function (key) { return self._currentContext.get(key); };\n        self.setValue = function (key, value) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.set(key, value);\n            return context;\n        };\n        self.deleteValue = function (key) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.delete(key);\n            return context;\n        };\n    }\n    return BaseContext;\n}());\n/** The root context is used as the default parent context when there is no active context */\nexport var ROOT_CONTEXT = new BaseContext();\n//# sourceMappingURL=context.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport var DiagLogLevel;\n(function (DiagLogLevel) {\n    /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n    DiagLogLevel[DiagLogLevel[\"NONE\"] = 0] = \"NONE\";\n    /** Identifies an error scenario */\n    DiagLogLevel[DiagLogLevel[\"ERROR\"] = 30] = \"ERROR\";\n    /** Identifies a warning scenario */\n    DiagLogLevel[DiagLogLevel[\"WARN\"] = 50] = \"WARN\";\n    /** General informational log message */\n    DiagLogLevel[DiagLogLevel[\"INFO\"] = 60] = \"INFO\";\n    /** General debug log message */\n    DiagLogLevel[DiagLogLevel[\"DEBUG\"] = 70] = \"DEBUG\";\n    /**\n     * Detailed trace level logging should only be used for development, should only be set\n     * in a development environment.\n     */\n    DiagLogLevel[DiagLogLevel[\"VERBOSE\"] = 80] = \"VERBOSE\";\n    /** Used to set the logging level to include all logging */\n    DiagLogLevel[DiagLogLevel[\"ALL\"] = 9999] = \"ALL\";\n})(DiagLogLevel || (DiagLogLevel = {}));\n//# sourceMappingURL=types.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar BaggageImpl = /** @class */ (function () {\n    function BaggageImpl(entries) {\n        this._entries = entries ? new Map(entries) : new Map();\n    }\n    BaggageImpl.prototype.getEntry = function (key) {\n        var entry = this._entries.get(key);\n        if (!entry) {\n            return undefined;\n        }\n        return Object.assign({}, entry);\n    };\n    BaggageImpl.prototype.getAllEntries = function () {\n        return Array.from(this._entries.entries()).map(function (_a) {\n            var _b = __read(_a, 2), k = _b[0], v = _b[1];\n            return [k, v];\n        });\n    };\n    BaggageImpl.prototype.setEntry = function (key, entry) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.set(key, entry);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntry = function (key) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.delete(key);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntries = function () {\n        var e_1, _a;\n        var keys = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            keys[_i] = arguments[_i];\n        }\n        var newBaggage = new BaggageImpl(this._entries);\n        try {\n            for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n                var key = keys_1_1.value;\n                newBaggage._entries.delete(key);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return newBaggage;\n    };\n    BaggageImpl.prototype.clear = function () {\n        return new BaggageImpl();\n    };\n    return BaggageImpl;\n}());\nexport { BaggageImpl };\n//# sourceMappingURL=baggage-impl.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nexport var baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n//# sourceMappingURL=symbol.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagAPI } from '../api/diag';\nimport { BaggageImpl } from './internal/baggage-impl';\nimport { baggageEntryMetadataSymbol } from './internal/symbol';\nvar diag = DiagAPI.instance();\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nexport function createBaggage(entries) {\n    if (entries === void 0) { entries = {}; }\n    return new BaggageImpl(new Map(Object.entries(entries)));\n}\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nexport function baggageEntryMetadataFromString(str) {\n    if (typeof str !== 'string') {\n        diag.error(\"Cannot create baggage metadata from unknown type: \" + typeof str);\n        str = '';\n    }\n    return {\n        __TYPE__: baggageEntryMetadataSymbol,\n        toString: function () {\n            return str;\n        },\n    };\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar consoleMap = [\n    { n: 'error', c: 'error' },\n    { n: 'warn', c: 'warn' },\n    { n: 'info', c: 'info' },\n    { n: 'debug', c: 'debug' },\n    { n: 'verbose', c: 'trace' },\n];\n/**\n * A simple Immutable Console based diagnostic logger which will output any messages to the Console.\n * If you want to limit the amount of logging to a specific level or lower use the\n * {@link createLogLevelDiagLogger}\n */\nvar DiagConsoleLogger = /** @class */ (function () {\n    function DiagConsoleLogger() {\n        function _consoleFunc(funcName) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (console) {\n                    // Some environments only expose the console when the F12 developer console is open\n                    // eslint-disable-next-line no-console\n                    var theFunc = console[funcName];\n                    if (typeof theFunc !== 'function') {\n                        // Not all environments support all functions\n                        // eslint-disable-next-line no-console\n                        theFunc = console.log;\n                    }\n                    // One last final check\n                    if (typeof theFunc === 'function') {\n                        return theFunc.apply(console, args);\n                    }\n                }\n            };\n        }\n        for (var i = 0; i < consoleMap.length; i++) {\n            this[consoleMap[i].n] = _consoleFunc(consoleMap[i].c);\n        }\n    }\n    return DiagConsoleLogger;\n}());\nexport { DiagConsoleLogger };\n//# sourceMappingURL=consoleLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nvar NoopMeter = /** @class */ (function () {\n    function NoopMeter() {\n    }\n    /**\n     * @see {@link Meter.createGauge}\n     */\n    NoopMeter.prototype.createGauge = function (_name, _options) {\n        return NOOP_GAUGE_METRIC;\n    };\n    /**\n     * @see {@link Meter.createHistogram}\n     */\n    NoopMeter.prototype.createHistogram = function (_name, _options) {\n        return NOOP_HISTOGRAM_METRIC;\n    };\n    /**\n     * @see {@link Meter.createCounter}\n     */\n    NoopMeter.prototype.createCounter = function (_name, _options) {\n        return NOOP_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.createUpDownCounter}\n     */\n    NoopMeter.prototype.createUpDownCounter = function (_name, _options) {\n        return NOOP_UP_DOWN_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.createObservableGauge}\n     */\n    NoopMeter.prototype.createObservableGauge = function (_name, _options) {\n        return NOOP_OBSERVABLE_GAUGE_METRIC;\n    };\n    /**\n     * @see {@link Meter.createObservableCounter}\n     */\n    NoopMeter.prototype.createObservableCounter = function (_name, _options) {\n        return NOOP_OBSERVABLE_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.createObservableUpDownCounter}\n     */\n    NoopMeter.prototype.createObservableUpDownCounter = function (_name, _options) {\n        return NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.addBatchObservableCallback}\n     */\n    NoopMeter.prototype.addBatchObservableCallback = function (_callback, _observables) { };\n    /**\n     * @see {@link Meter.removeBatchObservableCallback}\n     */\n    NoopMeter.prototype.removeBatchObservableCallback = function (_callback) { };\n    return NoopMeter;\n}());\nexport { NoopMeter };\nvar NoopMetric = /** @class */ (function () {\n    function NoopMetric() {\n    }\n    return NoopMetric;\n}());\nexport { NoopMetric };\nvar NoopCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopCounterMetric, _super);\n    function NoopCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopCounterMetric.prototype.add = function (_value, _attributes) { };\n    return NoopCounterMetric;\n}(NoopMetric));\nexport { NoopCounterMetric };\nvar NoopUpDownCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopUpDownCounterMetric, _super);\n    function NoopUpDownCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopUpDownCounterMetric.prototype.add = function (_value, _attributes) { };\n    return NoopUpDownCounterMetric;\n}(NoopMetric));\nexport { NoopUpDownCounterMetric };\nvar NoopGaugeMetric = /** @class */ (function (_super) {\n    __extends(NoopGaugeMetric, _super);\n    function NoopGaugeMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopGaugeMetric.prototype.record = function (_value, _attributes) { };\n    return NoopGaugeMetric;\n}(NoopMetric));\nexport { NoopGaugeMetric };\nvar NoopHistogramMetric = /** @class */ (function (_super) {\n    __extends(NoopHistogramMetric, _super);\n    function NoopHistogramMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopHistogramMetric.prototype.record = function (_value, _attributes) { };\n    return NoopHistogramMetric;\n}(NoopMetric));\nexport { NoopHistogramMetric };\nvar NoopObservableMetric = /** @class */ (function () {\n    function NoopObservableMetric() {\n    }\n    NoopObservableMetric.prototype.addCallback = function (_callback) { };\n    NoopObservableMetric.prototype.removeCallback = function (_callback) { };\n    return NoopObservableMetric;\n}());\nexport { NoopObservableMetric };\nvar NoopObservableCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopObservableCounterMetric, _super);\n    function NoopObservableCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NoopObservableCounterMetric;\n}(NoopObservableMetric));\nexport { NoopObservableCounterMetric };\nvar NoopObservableGaugeMetric = /** @class */ (function (_super) {\n    __extends(NoopObservableGaugeMetric, _super);\n    function NoopObservableGaugeMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NoopObservableGaugeMetric;\n}(NoopObservableMetric));\nexport { NoopObservableGaugeMetric };\nvar NoopObservableUpDownCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopObservableUpDownCounterMetric, _super);\n    function NoopObservableUpDownCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NoopObservableUpDownCounterMetric;\n}(NoopObservableMetric));\nexport { NoopObservableUpDownCounterMetric };\nexport var NOOP_METER = new NoopMeter();\n// Synchronous instruments\nexport var NOOP_COUNTER_METRIC = new NoopCounterMetric();\nexport var NOOP_GAUGE_METRIC = new NoopGaugeMetric();\nexport var NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();\nexport var NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();\n// Asynchronous instruments\nexport var NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric();\nexport var NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric();\nexport var NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableUpDownCounterMetric();\n/**\n * Create a no-op Meter\n */\nexport function createNoopMeter() {\n    return NOOP_METER;\n}\n//# sourceMappingURL=NoopMeter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Type of value. It describes how the data is reported. */\nexport var ValueType;\n(function (ValueType) {\n    ValueType[ValueType[\"INT\"] = 0] = \"INT\";\n    ValueType[ValueType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n})(ValueType || (ValueType = {}));\n//# sourceMappingURL=Metric.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var defaultTextMapGetter = {\n    get: function (carrier, key) {\n        if (carrier == null) {\n            return undefined;\n        }\n        return carrier[key];\n    },\n    keys: function (carrier) {\n        if (carrier == null) {\n            return [];\n        }\n        return Object.keys(carrier);\n    },\n};\nexport var defaultTextMapSetter = {\n    set: function (carrier, key, value) {\n        if (carrier == null) {\n            return;\n        }\n        carrier[key] = value;\n    },\n};\n//# sourceMappingURL=TextMapPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport var SamplingDecision;\n(function (SamplingDecision) {\n    /**\n     * `Span.isRecording() === false`, span will not be recorded and all events\n     * and attributes will be dropped.\n     */\n    SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n    /**\n     * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n     * MUST NOT be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n    /**\n     * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n     * MUST be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision || (SamplingDecision = {}));\n//# sourceMappingURL=SamplingResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind || (SpanKind = {}));\n//# sourceMappingURL=span_kind.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nvar VALID_KEY = \"[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,255}\";\nvar VALID_VENDOR_KEY = \"[a-z0-9]\" + VALID_KEY_CHAR_RANGE + \"{0,240}@[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,13}\";\nvar VALID_KEY_REGEX = new RegExp(\"^(?:\" + VALID_KEY + \"|\" + VALID_VENDOR_KEY + \")$\");\nvar VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nvar INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\n//# sourceMappingURL=tracestate-validators.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { validateKey, validateValue } from './tracestate-validators';\nvar MAX_TRACE_STATE_ITEMS = 32;\nvar MAX_TRACE_STATE_LEN = 512;\nvar LIST_MEMBERS_SEPARATOR = ',';\nvar LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nvar TraceStateImpl = /** @class */ (function () {\n    function TraceStateImpl(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    TraceStateImpl.prototype.set = function (key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        var traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    };\n    TraceStateImpl.prototype.unset = function (key) {\n        var traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    };\n    TraceStateImpl.prototype.get = function (key) {\n        return this._internalState.get(key);\n    };\n    TraceStateImpl.prototype.serialize = function () {\n        var _this = this;\n        return this._keys()\n            .reduce(function (agg, key) {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + _this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    };\n    TraceStateImpl.prototype._parse = function (rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce(function (agg, part) {\n            var listMember = part.trim(); // Optional Whitespace (OWS) handling\n            var i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                var key = listMember.slice(0, i);\n                var value = listMember.slice(i + 1, part.length);\n                if (validateKey(key) && validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    };\n    TraceStateImpl.prototype._keys = function () {\n        return Array.from(this._internalState.keys()).reverse();\n    };\n    TraceStateImpl.prototype._clone = function () {\n        var traceState = new TraceStateImpl();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    };\n    return TraceStateImpl;\n}());\nexport { TraceStateImpl };\n//# sourceMappingURL=tracestate-impl.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TraceStateImpl } from './tracestate-impl';\nexport function createTraceState(rawTraceState) {\n    return new TraceStateImpl(rawTraceState);\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport var context = ContextAPI.getInstance();\n//# sourceMappingURL=context-api.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport var diag = DiagAPI.instance();\n//# sourceMappingURL=diag-api.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_METER } from './NoopMeter';\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nvar NoopMeterProvider = /** @class */ (function () {\n    function NoopMeterProvider() {\n    }\n    NoopMeterProvider.prototype.getMeter = function (_name, _version, _options) {\n        return NOOP_METER;\n    };\n    return NoopMeterProvider;\n}());\nexport { NoopMeterProvider };\nexport var NOOP_METER_PROVIDER = new NoopMeterProvider();\n//# sourceMappingURL=NoopMeterProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_METER_PROVIDER } from '../metrics/NoopMeterProvider';\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'metrics';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\n */\nvar MetricsAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function MetricsAPI() {\n    }\n    /** Get the singleton instance of the Metrics API */\n    MetricsAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new MetricsAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global meter provider.\n     * Returns true if the meter provider was successfully registered, else false.\n     */\n    MetricsAPI.prototype.setGlobalMeterProvider = function (provider) {\n        return registerGlobal(API_NAME, provider, DiagAPI.instance());\n    };\n    /**\n     * Returns the global meter provider.\n     */\n    MetricsAPI.prototype.getMeterProvider = function () {\n        return getGlobal(API_NAME) || NOOP_METER_PROVIDER;\n    };\n    /**\n     * Returns a meter from the global meter provider.\n     */\n    MetricsAPI.prototype.getMeter = function (name, version, options) {\n        return this.getMeterProvider().getMeter(name, version, options);\n    };\n    /** Remove the global meter provider */\n    MetricsAPI.prototype.disable = function () {\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n    };\n    return MetricsAPI;\n}());\nexport { MetricsAPI };\n//# sourceMappingURL=metrics.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { MetricsAPI } from './api/metrics';\n/** Entrypoint for metrics API */\nexport var metrics = MetricsAPI.getInstance();\n//# sourceMappingURL=metrics-api.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nvar NoopTextMapPropagator = /** @class */ (function () {\n    function NoopTextMapPropagator() {\n    }\n    /** Noop inject function does nothing */\n    NoopTextMapPropagator.prototype.inject = function (_context, _carrier) { };\n    /** Noop extract function does nothing and returns the input context */\n    NoopTextMapPropagator.prototype.extract = function (context, _carrier) {\n        return context;\n    };\n    NoopTextMapPropagator.prototype.fields = function () {\n        return [];\n    };\n    return NoopTextMapPropagator;\n}());\nexport { NoopTextMapPropagator };\n//# sourceMappingURL=NoopTextMapPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ContextAPI } from '../api/context';\nimport { createContextKey } from '../context/context';\n/**\n * Baggage key\n */\nvar BAGGAGE_KEY = createContextKey('OpenTelemetry Baggage Key');\n/**\n * Retrieve the current baggage from the given context\n *\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getBaggage(context) {\n    return context.getValue(BAGGAGE_KEY) || undefined;\n}\n/**\n * Retrieve the current baggage from the active/current context\n *\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getActiveBaggage() {\n    return getBaggage(ContextAPI.getInstance().active());\n}\n/**\n * Store a baggage in the given context\n *\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nexport function setBaggage(context, baggage) {\n    return context.setValue(BAGGAGE_KEY, baggage);\n}\n/**\n * Delete the baggage stored in the given context\n *\n * @param {Context} Context that manage all context values\n */\nexport function deleteBaggage(context) {\n    return context.deleteValue(BAGGAGE_KEY);\n}\n//# sourceMappingURL=context-helpers.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { NoopTextMapPropagator } from '../propagation/NoopTextMapPropagator';\nimport { defaultTextMapGetter, defaultTextMapSetter, } from '../propagation/TextMapPropagator';\nimport { getBaggage, getActiveBaggage, setBaggage, deleteBaggage, } from '../baggage/context-helpers';\nimport { createBaggage } from '../baggage/utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'propagation';\nvar NOOP_TEXT_MAP_PROPAGATOR = new NoopTextMapPropagator();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nvar PropagationAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function PropagationAPI() {\n        this.createBaggage = createBaggage;\n        this.getBaggage = getBaggage;\n        this.getActiveBaggage = getActiveBaggage;\n        this.setBaggage = setBaggage;\n        this.deleteBaggage = deleteBaggage;\n    }\n    /** Get the singleton instance of the Propagator API */\n    PropagationAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new PropagationAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current propagator.\n     *\n     * @returns true if the propagator was successfully registered, else false\n     */\n    PropagationAPI.prototype.setGlobalPropagator = function (propagator) {\n        return registerGlobal(API_NAME, propagator, DiagAPI.instance());\n    };\n    /**\n     * Inject context into a carrier to be propagated inter-process\n     *\n     * @param context Context carrying tracing data to inject\n     * @param carrier carrier to inject context into\n     * @param setter Function used to set values on the carrier\n     */\n    PropagationAPI.prototype.inject = function (context, carrier, setter) {\n        if (setter === void 0) { setter = defaultTextMapSetter; }\n        return this._getGlobalPropagator().inject(context, carrier, setter);\n    };\n    /**\n     * Extract context from a carrier\n     *\n     * @param context Context which the newly created context will inherit from\n     * @param carrier Carrier to extract context from\n     * @param getter Function used to extract keys from a carrier\n     */\n    PropagationAPI.prototype.extract = function (context, carrier, getter) {\n        if (getter === void 0) { getter = defaultTextMapGetter; }\n        return this._getGlobalPropagator().extract(context, carrier, getter);\n    };\n    /**\n     * Return a list of all fields which may be used by the propagator.\n     */\n    PropagationAPI.prototype.fields = function () {\n        return this._getGlobalPropagator().fields();\n    };\n    /** Remove the global propagator */\n    PropagationAPI.prototype.disable = function () {\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n    };\n    PropagationAPI.prototype._getGlobalPropagator = function () {\n        return getGlobal(API_NAME) || NOOP_TEXT_MAP_PROPAGATOR;\n    };\n    return PropagationAPI;\n}());\nexport { PropagationAPI };\n//# sourceMappingURL=propagation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { PropagationAPI } from './api/propagation';\n/** Entrypoint for propagation API */\nexport var propagation = PropagationAPI.getInstance();\n//# sourceMappingURL=propagation-api.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport { baggageEntryMetadataFromString } from './baggage/utils';\n// Context APIs\nexport { createContextKey, ROOT_CONTEXT } from './context/context';\n// Diag APIs\nexport { DiagConsoleLogger } from './diag/consoleLogger';\nexport { DiagLogLevel, } from './diag/types';\n// Metrics APIs\nexport { createNoopMeter } from './metrics/NoopMeter';\nexport { ValueType, } from './metrics/Metric';\n// Propagation APIs\nexport { defaultTextMapGetter, defaultTextMapSetter, } from './propagation/TextMapPropagator';\nexport { ProxyTracer } from './trace/ProxyTracer';\nexport { ProxyTracerProvider } from './trace/ProxyTracerProvider';\nexport { SamplingDecision } from './trace/SamplingResult';\nexport { SpanKind } from './trace/span_kind';\nexport { SpanStatusCode } from './trace/status';\nexport { TraceFlags } from './trace/trace_flags';\nexport { createTraceState } from './trace/internal/utils';\nexport { isSpanContextValid, isValidTraceId, isValidSpanId, } from './trace/spancontext-utils';\nexport { INVALID_SPANID, INVALID_TRACEID, INVALID_SPAN_CONTEXT, } from './trace/invalid-span-constants';\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { context } from './context-api';\nimport { diag } from './diag-api';\nimport { metrics } from './metrics-api';\nimport { propagation } from './propagation-api';\nimport { trace } from './trace-api';\n// Named export.\nexport { context, diag, metrics, propagation, trace };\n// Default export.\nexport default {\n    context: context,\n    diag: diag,\n    metrics: metrics,\n    propagation: propagation,\n    trace: trace,\n};\n//# sourceMappingURL=index.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/core too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n        ? self\n        : typeof window === 'object'\n            ? window\n            : typeof global === 'object'\n                ? global\n                : {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.9.0';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VERSION } from '../version';\nvar re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nexport function _makeCompatibilityCheck(ownVersion) {\n    var acceptedVersions = new Set([ownVersion]);\n    var rejectedVersions = new Set();\n    var myVersionMatch = ownVersion.match(re);\n    if (!myVersionMatch) {\n        // we cannot guarantee compatibility so we always return noop\n        return function () { return false; };\n    }\n    var ownVersionParsed = {\n        major: +myVersionMatch[1],\n        minor: +myVersionMatch[2],\n        patch: +myVersionMatch[3],\n        prerelease: myVersionMatch[4],\n    };\n    // if ownVersion has a prerelease tag, versions must match exactly\n    if (ownVersionParsed.prerelease != null) {\n        return function isExactmatch(globalVersion) {\n            return globalVersion === ownVersion;\n        };\n    }\n    function _reject(v) {\n        rejectedVersions.add(v);\n        return false;\n    }\n    function _accept(v) {\n        acceptedVersions.add(v);\n        return true;\n    }\n    return function isCompatible(globalVersion) {\n        if (acceptedVersions.has(globalVersion)) {\n            return true;\n        }\n        if (rejectedVersions.has(globalVersion)) {\n            return false;\n        }\n        var globalVersionMatch = globalVersion.match(re);\n        if (!globalVersionMatch) {\n            // cannot parse other version\n            // we cannot guarantee compatibility so we always noop\n            return _reject(globalVersion);\n        }\n        var globalVersionParsed = {\n            major: +globalVersionMatch[1],\n            minor: +globalVersionMatch[2],\n            patch: +globalVersionMatch[3],\n            prerelease: globalVersionMatch[4],\n        };\n        // if globalVersion has a prerelease tag, versions must match exactly\n        if (globalVersionParsed.prerelease != null) {\n            return _reject(globalVersion);\n        }\n        // major versions must match\n        if (ownVersionParsed.major !== globalVersionParsed.major) {\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.major === 0) {\n            if (ownVersionParsed.minor === globalVersionParsed.minor &&\n                ownVersionParsed.patch <= globalVersionParsed.patch) {\n                return _accept(globalVersion);\n            }\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n            return _accept(globalVersion);\n        }\n        return _reject(globalVersion);\n    };\n}\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexport var isCompatible = _makeCompatibilityCheck(VERSION);\n//# sourceMappingURL=semver.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _globalThis } from '../platform';\nimport { VERSION } from '../version';\nimport { isCompatible } from './semver';\nvar major = VERSION.split('.')[0];\nvar GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\"opentelemetry.js.api.\" + major);\nvar _global = _globalThis;\nexport function registerGlobal(type, instance, diag, allowOverride) {\n    var _a;\n    if (allowOverride === void 0) { allowOverride = false; }\n    var api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) !== null && _a !== void 0 ? _a : {\n        version: VERSION,\n    });\n    if (!allowOverride && api[type]) {\n        // already registered an API of this type\n        var err = new Error(\"@opentelemetry/api: Attempted duplicate registration of API: \" + type);\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    if (api.version !== VERSION) {\n        // All registered APIs must be of the same version exactly\n        var err = new Error(\"@opentelemetry/api: Registration of version v\" + api.version + \" for \" + type + \" does not match previously registered API v\" + VERSION);\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    api[type] = instance;\n    diag.debug(\"@opentelemetry/api: Registered a global for \" + type + \" v\" + VERSION + \".\");\n    return true;\n}\nexport function getGlobal(type) {\n    var _a, _b;\n    var globalVersion = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _a === void 0 ? void 0 : _a.version;\n    if (!globalVersion || !isCompatible(globalVersion)) {\n        return;\n    }\n    return (_b = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _b === void 0 ? void 0 : _b[type];\n}\nexport function unregisterGlobal(type, diag) {\n    diag.debug(\"@opentelemetry/api: Unregistering a global for \" + type + \" v\" + VERSION + \".\");\n    var api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n    if (api) {\n        delete api[type];\n    }\n}\n//# sourceMappingURL=global-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { ProxyTracerProvider } from '../trace/ProxyTracerProvider';\nimport { isSpanContextValid, wrapSpanContext, } from '../trace/spancontext-utils';\nimport { deleteSpan, getActiveSpan, getSpan, getSpanContext, setSpan, setSpanContext, } from '../trace/context-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'trace';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nvar TraceAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function TraceAPI() {\n        this._proxyTracerProvider = new ProxyTracerProvider();\n        this.wrapSpanContext = wrapSpanContext;\n        this.isSpanContextValid = isSpanContextValid;\n        this.deleteSpan = deleteSpan;\n        this.getSpan = getSpan;\n        this.getActiveSpan = getActiveSpan;\n        this.getSpanContext = getSpanContext;\n        this.setSpan = setSpan;\n        this.setSpanContext = setSpanContext;\n    }\n    /** Get the singleton instance of the Trace API */\n    TraceAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new TraceAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global tracer.\n     *\n     * @returns true if the tracer provider was successfully registered, else false\n     */\n    TraceAPI.prototype.setGlobalTracerProvider = function (provider) {\n        var success = registerGlobal(API_NAME, this._proxyTracerProvider, DiagAPI.instance());\n        if (success) {\n            this._proxyTracerProvider.setDelegate(provider);\n        }\n        return success;\n    };\n    /**\n     * Returns the global tracer provider.\n     */\n    TraceAPI.prototype.getTracerProvider = function () {\n        return getGlobal(API_NAME) || this._proxyTracerProvider;\n    };\n    /**\n     * Returns a tracer from the global tracer provider.\n     */\n    TraceAPI.prototype.getTracer = function (name, version) {\n        return this.getTracerProvider().getTracer(name, version);\n    };\n    /** Remove the global tracer provider */\n    TraceAPI.prototype.disable = function () {\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n        this._proxyTracerProvider = new ProxyTracerProvider();\n    };\n    return TraceAPI;\n}());\nexport { TraceAPI };\n//# sourceMappingURL=trace.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport var trace = TraceAPI.getInstance();\n//# sourceMappingURL=trace-api.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPAN_CONTEXT } from './invalid-span-constants';\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nvar NonRecordingSpan = /** @class */ (function () {\n    function NonRecordingSpan(_spanContext) {\n        if (_spanContext === void 0) { _spanContext = INVALID_SPAN_CONTEXT; }\n        this._spanContext = _spanContext;\n    }\n    // Returns a SpanContext.\n    NonRecordingSpan.prototype.spanContext = function () {\n        return this._spanContext;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttribute = function (_key, _value) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttributes = function (_attributes) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.addEvent = function (_name, _attributes) {\n        return this;\n    };\n    NonRecordingSpan.prototype.addLink = function (_link) {\n        return this;\n    };\n    NonRecordingSpan.prototype.addLinks = function (_links) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setStatus = function (_status) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.updateName = function (_name) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.end = function (_endTime) { };\n    // isRecording always returns false for NonRecordingSpan.\n    NonRecordingSpan.prototype.isRecording = function () {\n        return false;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.recordException = function (_exception, _time) { };\n    return NonRecordingSpan;\n}());\nexport { NonRecordingSpan };\n//# sourceMappingURL=NonRecordingSpan.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ContextAPI } from '../api/context';\nimport { getSpanContext, setSpan } from '../trace/context-utils';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { isSpanContextValid } from './spancontext-utils';\nvar contextApi = ContextAPI.getInstance();\n/**\n * No-op implementations of {@link Tracer}.\n */\nvar NoopTracer = /** @class */ (function () {\n    function NoopTracer() {\n    }\n    // startSpan starts a noop span.\n    NoopTracer.prototype.startSpan = function (name, options, context) {\n        if (context === void 0) { context = contextApi.active(); }\n        var root = Boolean(options === null || options === void 0 ? void 0 : options.root);\n        if (root) {\n            return new NonRecordingSpan();\n        }\n        var parentFromContext = context && getSpanContext(context);\n        if (isSpanContext(parentFromContext) &&\n            isSpanContextValid(parentFromContext)) {\n            return new NonRecordingSpan(parentFromContext);\n        }\n        else {\n            return new NonRecordingSpan();\n        }\n    };\n    NoopTracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {\n        var opts;\n        var ctx;\n        var fn;\n        if (arguments.length < 2) {\n            return;\n        }\n        else if (arguments.length === 2) {\n            fn = arg2;\n        }\n        else if (arguments.length === 3) {\n            opts = arg2;\n            fn = arg3;\n        }\n        else {\n            opts = arg2;\n            ctx = arg3;\n            fn = arg4;\n        }\n        var parentContext = ctx !== null && ctx !== void 0 ? ctx : contextApi.active();\n        var span = this.startSpan(name, opts, parentContext);\n        var contextWithSpanSet = setSpan(parentContext, span);\n        return contextApi.with(contextWithSpanSet, fn, undefined, span);\n    };\n    return NoopTracer;\n}());\nexport { NoopTracer };\nfunction isSpanContext(spanContext) {\n    return (typeof spanContext === 'object' &&\n        typeof spanContext['spanId'] === 'string' &&\n        typeof spanContext['traceId'] === 'string' &&\n        typeof spanContext['traceFlags'] === 'number');\n}\n//# sourceMappingURL=NoopTracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopTracer } from './NoopTracer';\nvar NOOP_TRACER = new NoopTracer();\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nvar ProxyTracer = /** @class */ (function () {\n    function ProxyTracer(_provider, name, version, options) {\n        this._provider = _provider;\n        this.name = name;\n        this.version = version;\n        this.options = options;\n    }\n    ProxyTracer.prototype.startSpan = function (name, options, context) {\n        return this._getTracer().startSpan(name, options, context);\n    };\n    ProxyTracer.prototype.startActiveSpan = function (_name, _options, _context, _fn) {\n        var tracer = this._getTracer();\n        return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n    };\n    /**\n     * Try to get a tracer from the proxy tracer provider.\n     * If the proxy tracer provider has no delegate, return a noop tracer.\n     */\n    ProxyTracer.prototype._getTracer = function () {\n        if (this._delegate) {\n            return this._delegate;\n        }\n        var tracer = this._provider.getDelegateTracer(this.name, this.version, this.options);\n        if (!tracer) {\n            return NOOP_TRACER;\n        }\n        this._delegate = tracer;\n        return this._delegate;\n    };\n    return ProxyTracer;\n}());\nexport { ProxyTracer };\n//# sourceMappingURL=ProxyTracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopTracer } from './NoopTracer';\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nvar NoopTracerProvider = /** @class */ (function () {\n    function NoopTracerProvider() {\n    }\n    NoopTracerProvider.prototype.getTracer = function (_name, _version, _options) {\n        return new NoopTracer();\n    };\n    return NoopTracerProvider;\n}());\nexport { NoopTracerProvider };\n//# sourceMappingURL=NoopTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ProxyTracer } from './ProxyTracer';\nimport { NoopTracerProvider } from './NoopTracerProvider';\nvar NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nvar ProxyTracerProvider = /** @class */ (function () {\n    function ProxyTracerProvider() {\n    }\n    /**\n     * Get a {@link ProxyTracer}\n     */\n    ProxyTracerProvider.prototype.getTracer = function (name, version, options) {\n        var _a;\n        return ((_a = this.getDelegateTracer(name, version, options)) !== null && _a !== void 0 ? _a : new ProxyTracer(this, name, version, options));\n    };\n    ProxyTracerProvider.prototype.getDelegate = function () {\n        var _a;\n        return (_a = this._delegate) !== null && _a !== void 0 ? _a : NOOP_TRACER_PROVIDER;\n    };\n    /**\n     * Set the delegate tracer provider\n     */\n    ProxyTracerProvider.prototype.setDelegate = function (delegate) {\n        this._delegate = delegate;\n    };\n    ProxyTracerProvider.prototype.getDelegateTracer = function (name, version, options) {\n        var _a;\n        return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getTracer(name, version, options);\n    };\n    return ProxyTracerProvider;\n}());\nexport { ProxyTracerProvider };\n//# sourceMappingURL=ProxyTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '../context/context';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { ContextAPI } from '../api/context';\n/**\n * span key\n */\nvar SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nexport function getSpan(context) {\n    return context.getValue(SPAN_KEY) || undefined;\n}\n/**\n * Gets the span from the current context, if one exists.\n */\nexport function getActiveSpan() {\n    return getSpan(ContextAPI.getInstance().active());\n}\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nexport function setSpan(context, span) {\n    return context.setValue(SPAN_KEY, span);\n}\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nexport function deleteSpan(context) {\n    return context.deleteValue(SPAN_KEY);\n}\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nexport function setSpanContext(context, spanContext) {\n    return setSpan(context, new NonRecordingSpan(spanContext));\n}\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nexport function getSpanContext(context) {\n    var _a;\n    return (_a = getSpan(context)) === null || _a === void 0 ? void 0 : _a.spanContext();\n}\n//# sourceMappingURL=context-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TraceFlags } from './trace_flags';\nexport var INVALID_SPANID = '0000000000000000';\nexport var INVALID_TRACEID = '00000000000000000000000000000000';\nexport var INVALID_SPAN_CONTEXT = {\n    traceId: INVALID_TRACEID,\n    spanId: INVALID_SPANID,\n    traceFlags: TraceFlags.NONE,\n};\n//# sourceMappingURL=invalid-span-constants.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPANID, INVALID_TRACEID } from './invalid-span-constants';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nvar VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nvar VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\nexport function isValidTraceId(traceId) {\n    return VALID_TRACEID_REGEX.test(traceId) && traceId !== INVALID_TRACEID;\n}\nexport function isValidSpanId(spanId) {\n    return VALID_SPANID_REGEX.test(spanId) && spanId !== INVALID_SPANID;\n}\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nexport function isSpanContextValid(spanContext) {\n    return (isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId));\n}\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nexport function wrapSpanContext(spanContext) {\n    return new NonRecordingSpan(spanContext);\n}\n//# sourceMappingURL=spancontext-utils.js.map","/**\n * An enumeration of status codes.\n */\nexport var SpanStatusCode;\n(function (SpanStatusCode) {\n    /**\n     * The default status.\n     */\n    SpanStatusCode[SpanStatusCode[\"UNSET\"] = 0] = \"UNSET\";\n    /**\n     * The operation has been validated by an Application developer or\n     * Operator to have completed successfully.\n     */\n    SpanStatusCode[SpanStatusCode[\"OK\"] = 1] = \"OK\";\n    /**\n     * The operation contains an error.\n     */\n    SpanStatusCode[SpanStatusCode[\"ERROR\"] = 2] = \"ERROR\";\n})(SpanStatusCode || (SpanStatusCode = {}));\n//# sourceMappingURL=status.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TraceFlags;\n(function (TraceFlags) {\n    /** Represents no flag set. */\n    TraceFlags[TraceFlags[\"NONE\"] = 0] = \"NONE\";\n    /** Bit to represent whether trace is sampled in trace flags. */\n    TraceFlags[TraceFlags[\"SAMPLED\"] = 1] = \"SAMPLED\";\n})(TraceFlags || (TraceFlags = {}));\n//# sourceMappingURL=trace_flags.js.map","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [\n      key.toLowerCase().replace(/-/g, \"\"),\n      value2\n    ])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, options] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0]];\n    return this.set({ ...options, name, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();","(function(){var e={452:function(e){\"use strict\";e.exports=require(\"next/dist/compiled/querystring-es3\")}};var t={};function __nccwpck_require__(o){var a=t[o];if(a!==undefined){return a.exports}var s=t[o]={exports:{}};var n=true;try{e[o](s,s.exports,__nccwpck_require__);n=false}finally{if(n)delete t[o]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var o={};!function(){var e=o;var t,a=(t=__nccwpck_require__(452))&&\"object\"==typeof t&&\"default\"in t?t.default:t,s=/https?|ftp|gopher|file/;function r(e){\"string\"==typeof e&&(e=d(e));var t=function(e,t,o){var a=e.auth,s=e.hostname,n=e.protocol||\"\",p=e.pathname||\"\",c=e.hash||\"\",i=e.query||\"\",u=!1;a=a?encodeURIComponent(a).replace(/%3A/i,\":\")+\"@\":\"\",e.host?u=a+e.host:s&&(u=a+(~s.indexOf(\":\")?\"[\"+s+\"]\":s),e.port&&(u+=\":\"+e.port)),i&&\"object\"==typeof i&&(i=t.encode(i));var f=e.search||i&&\"?\"+i||\"\";return n&&\":\"!==n.substr(-1)&&(n+=\":\"),e.slashes||(!n||o.test(n))&&!1!==u?(u=\"//\"+(u||\"\"),p&&\"/\"!==p[0]&&(p=\"/\"+p)):u||(u=\"\"),c&&\"#\"!==c[0]&&(c=\"#\"+c),f&&\"?\"!==f[0]&&(f=\"?\"+f),{protocol:n,host:u,pathname:p=p.replace(/[?#]/g,encodeURIComponent),search:f=f.replace(\"#\",\"%23\"),hash:c}}(e,a,s);return\"\"+t.protocol+t.host+t.pathname+t.search+t.hash}var n=\"http://\",p=\"w.w\",c=n+p,i=/^([a-z0-9.+-]*:\\/\\/\\/)([a-z0-9.+-]:\\/*)?/i,u=/https?|ftp|gopher|file/;function h(e,t){var o=\"string\"==typeof e?d(e):e;e=\"object\"==typeof e?r(e):e;var a=d(t),s=\"\";o.protocol&&!o.slashes&&(s=o.protocol,e=e.replace(o.protocol,\"\"),s+=\"/\"===t[0]||\"/\"===e[0]?\"/\":\"\"),s&&a.protocol&&(s=\"\",a.slashes||(s=a.protocol,t=t.replace(a.protocol,\"\")));var p=e.match(i);p&&!a.protocol&&(e=e.substr((s=p[1]+(p[2]||\"\")).length),/^\\/\\/[^/]/.test(t)&&(s=s.slice(0,-1)));var f=new URL(e,c+\"/\"),m=new URL(t,f).toString().replace(c,\"\"),v=a.protocol||o.protocol;return v+=o.slashes||a.slashes?\"//\":\"\",!s&&v?m=m.replace(n,v):s&&(m=m.replace(n,\"\")),u.test(m)||~t.indexOf(\".\")||\"/\"===e.slice(-1)||\"/\"===t.slice(-1)||\"/\"!==m.slice(-1)||(m=m.slice(0,-1)),s&&(m=s+(\"/\"===m[0]?m.substr(1):m)),m}function l(){}l.prototype.parse=d,l.prototype.format=r,l.prototype.resolve=h,l.prototype.resolveObject=h;var f=/^https?|ftp|gopher|file/,m=/^(.*?)([#?].*)/,v=/^([a-z0-9.+-]*:)(\\/{0,3})(.*)/i,_=/^([a-z0-9.+-]*:)?\\/\\/\\/*/i,b=/^([a-z0-9.+-]*:)(\\/{0,2})\\[(.*)\\]$/i;function d(e,t,o){if(void 0===t&&(t=!1),void 0===o&&(o=!1),e&&\"object\"==typeof e&&e instanceof l)return e;var s=(e=e.trim()).match(m);e=s?s[1].replace(/\\\\/g,\"/\")+s[2]:e.replace(/\\\\/g,\"/\"),b.test(e)&&\"/\"!==e.slice(-1)&&(e+=\"/\");var n=!/(^javascript)/.test(e)&&e.match(v),i=_.test(e),u=\"\";n&&(f.test(n[1])||(u=n[1].toLowerCase(),e=\"\"+n[2]+n[3]),n[2]||(i=!1,f.test(n[1])?(u=n[1],e=\"\"+n[3]):e=\"//\"+n[3]),3!==n[2].length&&1!==n[2].length||(u=n[1],e=\"/\"+n[3]));var g,y=(s?s[1]:e).match(/^https?:\\/\\/[^/]+(:[0-9]+)(?=\\/|$)/),w=y&&y[1],x=new l,C=\"\",U=\"\";try{g=new URL(e)}catch(t){C=t,u||o||!/^\\/\\//.test(e)||/^\\/\\/.+[@.]/.test(e)||(U=\"/\",e=e.substr(1));try{g=new URL(e,c)}catch(e){return x.protocol=u,x.href=u,x}}x.slashes=i&&!U,x.host=g.host===p?\"\":g.host,x.hostname=g.hostname===p?\"\":g.hostname.replace(/(\\[|\\])/g,\"\"),x.protocol=C?u||null:g.protocol,x.search=g.search.replace(/\\\\/g,\"%5C\"),x.hash=g.hash.replace(/\\\\/g,\"%5C\");var j=e.split(\"#\");!x.search&&~j[0].indexOf(\"?\")&&(x.search=\"?\"),x.hash||\"\"!==j[1]||(x.hash=\"#\"),x.query=t?a.decode(g.search.substr(1)):x.search.substr(1),x.pathname=U+(n?function(e){return e.replace(/['^|`]/g,(function(e){return\"%\"+e.charCodeAt().toString(16).toUpperCase()})).replace(/((?:%[0-9A-F]{2})+)/g,(function(e,t){try{return decodeURIComponent(t).split(\"\").map((function(e){var t=e.charCodeAt();return t>256||/^[a-z0-9]$/i.test(e)?e:\"%\"+t.toString(16).toUpperCase()})).join(\"\")}catch(e){return t}}))}(g.pathname):g.pathname),\"about:\"===x.protocol&&\"blank\"===x.pathname&&(x.protocol=\"\",x.pathname=\"\"),C&&\"/\"!==e[0]&&(x.pathname=x.pathname.substr(1)),u&&!f.test(u)&&\"/\"!==e.slice(-1)&&\"/\"===x.pathname&&(x.pathname=\"\"),x.path=x.pathname+x.search,x.auth=[g.username,g.password].map(decodeURIComponent).filter(Boolean).join(\":\"),x.port=g.port,w&&!x.host.endsWith(w)&&(x.host+=w,x.port=w.slice(1)),x.href=U?\"\"+x.pathname+x.search+x.hash:r(x);var q=/^(file)/.test(x.href)?[\"host\",\"hostname\"]:[];return Object.keys(x).forEach((function(e){~q.indexOf(e)||(x[e]=x[e]||null)})),x}e.parse=d,e.format=r,e.resolve=h,e.resolveObject=function(e,t){return d(h(e,t))},e.Url=l}();module.exports=o})();","(()=>{\"use strict\";var e={993:e=>{var t=Object.prototype.hasOwnProperty,n=\"~\";function Events(){}if(Object.create){Events.prototype=Object.create(null);if(!(new Events).__proto__)n=false}function EE(e,t,n){this.fn=e;this.context=t;this.once=n||false}function addListener(e,t,r,i,s){if(typeof r!==\"function\"){throw new TypeError(\"The listener must be a function\")}var o=new EE(r,i||e,s),u=n?n+t:t;if(!e._events[u])e._events[u]=o,e._eventsCount++;else if(!e._events[u].fn)e._events[u].push(o);else e._events[u]=[e._events[u],o];return e}function clearEvent(e,t){if(--e._eventsCount===0)e._events=new Events;else delete e._events[t]}function EventEmitter(){this._events=new Events;this._eventsCount=0}EventEmitter.prototype.eventNames=function eventNames(){var e=[],r,i;if(this._eventsCount===0)return e;for(i in r=this._events){if(t.call(r,i))e.push(n?i.slice(1):i)}if(Object.getOwnPropertySymbols){return e.concat(Object.getOwnPropertySymbols(r))}return e};EventEmitter.prototype.listeners=function listeners(e){var t=n?n+e:e,r=this._events[t];if(!r)return[];if(r.fn)return[r.fn];for(var i=0,s=r.length,o=new Array(s);i<s;i++){o[i]=r[i].fn}return o};EventEmitter.prototype.listenerCount=function listenerCount(e){var t=n?n+e:e,r=this._events[t];if(!r)return 0;if(r.fn)return 1;return r.length};EventEmitter.prototype.emit=function emit(e,t,r,i,s,o){var u=n?n+e:e;if(!this._events[u])return false;var a=this._events[u],l=arguments.length,c,h;if(a.fn){if(a.once)this.removeListener(e,a.fn,undefined,true);switch(l){case 1:return a.fn.call(a.context),true;case 2:return a.fn.call(a.context,t),true;case 3:return a.fn.call(a.context,t,r),true;case 4:return a.fn.call(a.context,t,r,i),true;case 5:return a.fn.call(a.context,t,r,i,s),true;case 6:return a.fn.call(a.context,t,r,i,s,o),true}for(h=1,c=new Array(l-1);h<l;h++){c[h-1]=arguments[h]}a.fn.apply(a.context,c)}else{var _=a.length,f;for(h=0;h<_;h++){if(a[h].once)this.removeListener(e,a[h].fn,undefined,true);switch(l){case 1:a[h].fn.call(a[h].context);break;case 2:a[h].fn.call(a[h].context,t);break;case 3:a[h].fn.call(a[h].context,t,r);break;case 4:a[h].fn.call(a[h].context,t,r,i);break;default:if(!c)for(f=1,c=new Array(l-1);f<l;f++){c[f-1]=arguments[f]}a[h].fn.apply(a[h].context,c)}}}return true};EventEmitter.prototype.on=function on(e,t,n){return addListener(this,e,t,n,false)};EventEmitter.prototype.once=function once(e,t,n){return addListener(this,e,t,n,true)};EventEmitter.prototype.removeListener=function removeListener(e,t,r,i){var s=n?n+e:e;if(!this._events[s])return this;if(!t){clearEvent(this,s);return this}var o=this._events[s];if(o.fn){if(o.fn===t&&(!i||o.once)&&(!r||o.context===r)){clearEvent(this,s)}}else{for(var u=0,a=[],l=o.length;u<l;u++){if(o[u].fn!==t||i&&!o[u].once||r&&o[u].context!==r){a.push(o[u])}}if(a.length)this._events[s]=a.length===1?a[0]:a;else clearEvent(this,s)}return this};EventEmitter.prototype.removeAllListeners=function removeAllListeners(e){var t;if(e){t=n?n+e:e;if(this._events[t])clearEvent(this,t)}else{this._events=new Events;this._eventsCount=0}return this};EventEmitter.prototype.off=EventEmitter.prototype.removeListener;EventEmitter.prototype.addListener=EventEmitter.prototype.on;EventEmitter.prefixed=n;EventEmitter.EventEmitter=EventEmitter;if(true){e.exports=EventEmitter}},213:e=>{e.exports=(e,t)=>{t=t||(()=>{});return e.then((e=>new Promise((e=>{e(t())})).then((()=>e))),(e=>new Promise((e=>{e(t())})).then((()=>{throw e}))))}},574:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});function lowerBound(e,t,n){let r=0;let i=e.length;while(i>0){const s=i/2|0;let o=r+s;if(n(e[o],t)<=0){r=++o;i-=s+1}else{i=s}}return r}t[\"default\"]=lowerBound},821:(e,t,n)=>{Object.defineProperty(t,\"__esModule\",{value:true});const r=n(574);class PriorityQueue{constructor(){this._queue=[]}enqueue(e,t){t=Object.assign({priority:0},t);const n={priority:t.priority,run:e};if(this.size&&this._queue[this.size-1].priority>=t.priority){this._queue.push(n);return}const i=r.default(this._queue,n,((e,t)=>t.priority-e.priority));this._queue.splice(i,0,n)}dequeue(){const e=this._queue.shift();return e===null||e===void 0?void 0:e.run}filter(e){return this._queue.filter((t=>t.priority===e.priority)).map((e=>e.run))}get size(){return this._queue.length}}t[\"default\"]=PriorityQueue},816:(e,t,n)=>{const r=n(213);class TimeoutError extends Error{constructor(e){super(e);this.name=\"TimeoutError\"}}const pTimeout=(e,t,n)=>new Promise(((i,s)=>{if(typeof t!==\"number\"||t<0){throw new TypeError(\"Expected `milliseconds` to be a positive number\")}if(t===Infinity){i(e);return}const o=setTimeout((()=>{if(typeof n===\"function\"){try{i(n())}catch(e){s(e)}return}const r=typeof n===\"string\"?n:`Promise timed out after ${t} milliseconds`;const o=n instanceof Error?n:new TimeoutError(r);if(typeof e.cancel===\"function\"){e.cancel()}s(o)}),t);r(e.then(i,s),(()=>{clearTimeout(o)}))}));e.exports=pTimeout;e.exports[\"default\"]=pTimeout;e.exports.TimeoutError=TimeoutError}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var i=t[n]={exports:{}};var s=true;try{e[n](i,i.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};(()=>{var e=n;Object.defineProperty(e,\"__esModule\",{value:true});const t=__nccwpck_require__(993);const r=__nccwpck_require__(816);const i=__nccwpck_require__(821);const empty=()=>{};const s=new r.TimeoutError;class PQueue extends t{constructor(e){var t,n,r,s;super();this._intervalCount=0;this._intervalEnd=0;this._pendingCount=0;this._resolveEmpty=empty;this._resolveIdle=empty;e=Object.assign({carryoverConcurrencyCount:false,intervalCap:Infinity,interval:0,concurrency:Infinity,autoStart:true,queueClass:i.default},e);if(!(typeof e.intervalCap===\"number\"&&e.intervalCap>=1)){throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(n=(t=e.intervalCap)===null||t===void 0?void 0:t.toString())!==null&&n!==void 0?n:\"\"}\\` (${typeof e.intervalCap})`)}if(e.interval===undefined||!(Number.isFinite(e.interval)&&e.interval>=0)){throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(s=(r=e.interval)===null||r===void 0?void 0:r.toString())!==null&&s!==void 0?s:\"\"}\\` (${typeof e.interval})`)}this._carryoverConcurrencyCount=e.carryoverConcurrencyCount;this._isIntervalIgnored=e.intervalCap===Infinity||e.interval===0;this._intervalCap=e.intervalCap;this._interval=e.interval;this._queue=new e.queueClass;this._queueClass=e.queueClass;this.concurrency=e.concurrency;this._timeout=e.timeout;this._throwOnTimeout=e.throwOnTimeout===true;this._isPaused=e.autoStart===false}get _doesIntervalAllowAnother(){return this._isIntervalIgnored||this._intervalCount<this._intervalCap}get _doesConcurrentAllowAnother(){return this._pendingCount<this._concurrency}_next(){this._pendingCount--;this._tryToStartAnother();this.emit(\"next\")}_resolvePromises(){this._resolveEmpty();this._resolveEmpty=empty;if(this._pendingCount===0){this._resolveIdle();this._resolveIdle=empty;this.emit(\"idle\")}}_onResumeInterval(){this._onInterval();this._initializeIntervalIfNeeded();this._timeoutId=undefined}_isIntervalPaused(){const e=Date.now();if(this._intervalId===undefined){const t=this._intervalEnd-e;if(t<0){this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0}else{if(this._timeoutId===undefined){this._timeoutId=setTimeout((()=>{this._onResumeInterval()}),t)}return true}}return false}_tryToStartAnother(){if(this._queue.size===0){if(this._intervalId){clearInterval(this._intervalId)}this._intervalId=undefined;this._resolvePromises();return false}if(!this._isPaused){const e=!this._isIntervalPaused();if(this._doesIntervalAllowAnother&&this._doesConcurrentAllowAnother){const t=this._queue.dequeue();if(!t){return false}this.emit(\"active\");t();if(e){this._initializeIntervalIfNeeded()}return true}}return false}_initializeIntervalIfNeeded(){if(this._isIntervalIgnored||this._intervalId!==undefined){return}this._intervalId=setInterval((()=>{this._onInterval()}),this._interval);this._intervalEnd=Date.now()+this._interval}_onInterval(){if(this._intervalCount===0&&this._pendingCount===0&&this._intervalId){clearInterval(this._intervalId);this._intervalId=undefined}this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0;this._processQueue()}_processQueue(){while(this._tryToStartAnother()){}}get concurrency(){return this._concurrency}set concurrency(e){if(!(typeof e===\"number\"&&e>=1)){throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${e}\\` (${typeof e})`)}this._concurrency=e;this._processQueue()}async add(e,t={}){return new Promise(((n,i)=>{const run=async()=>{this._pendingCount++;this._intervalCount++;try{const o=this._timeout===undefined&&t.timeout===undefined?e():r.default(Promise.resolve(e()),t.timeout===undefined?this._timeout:t.timeout,(()=>{if(t.throwOnTimeout===undefined?this._throwOnTimeout:t.throwOnTimeout){i(s)}return undefined}));n(await o)}catch(e){i(e)}this._next()};this._queue.enqueue(run,t);this._tryToStartAnother();this.emit(\"add\")}))}async addAll(e,t){return Promise.all(e.map((async e=>this.add(e,t))))}start(){if(!this._isPaused){return this}this._isPaused=false;this._processQueue();return this}pause(){this._isPaused=true}clear(){this._queue=new this._queueClass}async onEmpty(){if(this._queue.size===0){return}return new Promise((e=>{const t=this._resolveEmpty;this._resolveEmpty=()=>{t();e()}}))}async onIdle(){if(this._pendingCount===0&&this._queue.size===0){return}return new Promise((e=>{const t=this._resolveIdle;this._resolveIdle=()=>{t();e()}}))}get size(){return this._queue.size}sizeBy(e){return this._queue.filter(e).length}get pending(){return this._pendingCount}get isPaused(){return this._isPaused}get timeout(){return this._timeout}set timeout(e){this._timeout=e}}e[\"default\"]=PQueue})();module.exports=n})();","(function(){\"use strict\";var e={114:function(e){function assertPath(e){if(typeof e!==\"string\"){throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(e))}}function normalizeStringPosix(e,r){var t=\"\";var i=0;var n=-1;var a=0;var f;for(var l=0;l<=e.length;++l){if(l<e.length)f=e.charCodeAt(l);else if(f===47)break;else f=47;if(f===47){if(n===l-1||a===1){}else if(n!==l-1&&a===2){if(t.length<2||i!==2||t.charCodeAt(t.length-1)!==46||t.charCodeAt(t.length-2)!==46){if(t.length>2){var s=t.lastIndexOf(\"/\");if(s!==t.length-1){if(s===-1){t=\"\";i=0}else{t=t.slice(0,s);i=t.length-1-t.lastIndexOf(\"/\")}n=l;a=0;continue}}else if(t.length===2||t.length===1){t=\"\";i=0;n=l;a=0;continue}}if(r){if(t.length>0)t+=\"/..\";else t=\"..\";i=2}}else{if(t.length>0)t+=\"/\"+e.slice(n+1,l);else t=e.slice(n+1,l);i=l-n-1}n=l;a=0}else if(f===46&&a!==-1){++a}else{a=-1}}return t}function _format(e,r){var t=r.dir||r.root;var i=r.base||(r.name||\"\")+(r.ext||\"\");if(!t){return i}if(t===r.root){return t+i}return t+e+i}var r={resolve:function resolve(){var e=\"\";var r=false;var t;for(var i=arguments.length-1;i>=-1&&!r;i--){var n;if(i>=0)n=arguments[i];else{if(t===undefined)t=\"\";n=t}assertPath(n);if(n.length===0){continue}e=n+\"/\"+e;r=n.charCodeAt(0)===47}e=normalizeStringPosix(e,!r);if(r){if(e.length>0)return\"/\"+e;else return\"/\"}else if(e.length>0){return e}else{return\".\"}},normalize:function normalize(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0)===47;var t=e.charCodeAt(e.length-1)===47;e=normalizeStringPosix(e,!r);if(e.length===0&&!r)e=\".\";if(e.length>0&&t)e+=\"/\";if(r)return\"/\"+e;return e},isAbsolute:function isAbsolute(e){assertPath(e);return e.length>0&&e.charCodeAt(0)===47},join:function join(){if(arguments.length===0)return\".\";var e;for(var t=0;t<arguments.length;++t){var i=arguments[t];assertPath(i);if(i.length>0){if(e===undefined)e=i;else e+=\"/\"+i}}if(e===undefined)return\".\";return r.normalize(e)},relative:function relative(e,t){assertPath(e);assertPath(t);if(e===t)return\"\";e=r.resolve(e);t=r.resolve(t);if(e===t)return\"\";var i=1;for(;i<e.length;++i){if(e.charCodeAt(i)!==47)break}var n=e.length;var a=n-i;var f=1;for(;f<t.length;++f){if(t.charCodeAt(f)!==47)break}var l=t.length;var s=l-f;var o=a<s?a:s;var u=-1;var h=0;for(;h<=o;++h){if(h===o){if(s>o){if(t.charCodeAt(f+h)===47){return t.slice(f+h+1)}else if(h===0){return t.slice(f+h)}}else if(a>o){if(e.charCodeAt(i+h)===47){u=h}else if(h===0){u=0}}break}var c=e.charCodeAt(i+h);var v=t.charCodeAt(f+h);if(c!==v)break;else if(c===47)u=h}var g=\"\";for(h=i+u+1;h<=n;++h){if(h===n||e.charCodeAt(h)===47){if(g.length===0)g+=\"..\";else g+=\"/..\"}}if(g.length>0)return g+t.slice(f+u);else{f+=u;if(t.charCodeAt(f)===47)++f;return t.slice(f)}},_makeLong:function _makeLong(e){return e},dirname:function dirname(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0);var t=r===47;var i=-1;var n=true;for(var a=e.length-1;a>=1;--a){r=e.charCodeAt(a);if(r===47){if(!n){i=a;break}}else{n=false}}if(i===-1)return t?\"/\":\".\";if(t&&i===1)return\"//\";return e.slice(0,i)},basename:function basename(e,r){if(r!==undefined&&typeof r!==\"string\")throw new TypeError('\"ext\" argument must be a string');assertPath(e);var t=0;var i=-1;var n=true;var a;if(r!==undefined&&r.length>0&&r.length<=e.length){if(r.length===e.length&&r===e)return\"\";var f=r.length-1;var l=-1;for(a=e.length-1;a>=0;--a){var s=e.charCodeAt(a);if(s===47){if(!n){t=a+1;break}}else{if(l===-1){n=false;l=a+1}if(f>=0){if(s===r.charCodeAt(f)){if(--f===-1){i=a}}else{f=-1;i=l}}}}if(t===i)i=l;else if(i===-1)i=e.length;return e.slice(t,i)}else{for(a=e.length-1;a>=0;--a){if(e.charCodeAt(a)===47){if(!n){t=a+1;break}}else if(i===-1){n=false;i=a+1}}if(i===-1)return\"\";return e.slice(t,i)}},extname:function extname(e){assertPath(e);var r=-1;var t=0;var i=-1;var n=true;var a=0;for(var f=e.length-1;f>=0;--f){var l=e.charCodeAt(f);if(l===47){if(!n){t=f+1;break}continue}if(i===-1){n=false;i=f+1}if(l===46){if(r===-1)r=f;else if(a!==1)a=1}else if(r!==-1){a=-1}}if(r===-1||i===-1||a===0||a===1&&r===i-1&&r===t+1){return\"\"}return e.slice(r,i)},format:function format(e){if(e===null||typeof e!==\"object\"){throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof e)}return _format(\"/\",e)},parse:function parse(e){assertPath(e);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(e.length===0)return r;var t=e.charCodeAt(0);var i=t===47;var n;if(i){r.root=\"/\";n=1}else{n=0}var a=-1;var f=0;var l=-1;var s=true;var o=e.length-1;var u=0;for(;o>=n;--o){t=e.charCodeAt(o);if(t===47){if(!s){f=o+1;break}continue}if(l===-1){s=false;l=o+1}if(t===46){if(a===-1)a=o;else if(u!==1)u=1}else if(a!==-1){u=-1}}if(a===-1||l===-1||u===0||u===1&&a===l-1&&a===f+1){if(l!==-1){if(f===0&&i)r.base=r.name=e.slice(1,l);else r.base=r.name=e.slice(f,l)}}else{if(f===0&&i){r.name=e.slice(1,a);r.base=e.slice(1,l)}else{r.name=e.slice(f,a);r.base=e.slice(f,l)}r.ext=e.slice(a,l)}if(f>0)r.dir=e.slice(0,f-1);else if(i)r.dir=\"/\";return r},sep:\"/\",delimiter:\":\",win32:null,posix:null};r.posix=r;e.exports=r}};var r={};function __nccwpck_require__(t){var i=r[t];if(i!==undefined){return i.exports}var n=r[t]={exports:{}};var a=true;try{e[t](n,n.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(114);module.exports=t})();","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;Object.defineProperty(r,\"__esModule\",{value:true});function lexer(e){var r=[];var n=0;while(n<e.length){var t=e[n];if(t===\"*\"||t===\"+\"||t===\"?\"){r.push({type:\"MODIFIER\",index:n,value:e[n++]});continue}if(t===\"\\\\\"){r.push({type:\"ESCAPED_CHAR\",index:n++,value:e[n++]});continue}if(t===\"{\"){r.push({type:\"OPEN\",index:n,value:e[n++]});continue}if(t===\"}\"){r.push({type:\"CLOSE\",index:n,value:e[n++]});continue}if(t===\":\"){var i=\"\";var a=n+1;while(a<e.length){var o=e.charCodeAt(a);if(o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o===95){i+=e[a++];continue}break}if(!i)throw new TypeError(\"Missing parameter name at \"+n);r.push({type:\"NAME\",index:n,value:i});n=a;continue}if(t===\"(\"){var f=1;var u=\"\";var a=n+1;if(e[a]===\"?\"){throw new TypeError('Pattern cannot start with \"?\" at '+a)}while(a<e.length){if(e[a]===\"\\\\\"){u+=e[a++]+e[a++];continue}if(e[a]===\")\"){f--;if(f===0){a++;break}}else if(e[a]===\"(\"){f++;if(e[a+1]!==\"?\"){throw new TypeError(\"Capturing groups are not allowed at \"+a)}}u+=e[a++]}if(f)throw new TypeError(\"Unbalanced pattern at \"+n);if(!u)throw new TypeError(\"Missing pattern at \"+n);r.push({type:\"PATTERN\",index:n,value:u});n=a;continue}r.push({type:\"CHAR\",index:n,value:e[n++]})}r.push({type:\"END\",index:n,value:\"\"});return r}function parse(e,r){if(r===void 0){r={}}var n=lexer(e);var t=r.prefixes,i=t===void 0?\"./\":t;var a=\"[^\"+escapeString(r.delimiter||\"/#?\")+\"]+?\";var o=[];var f=0;var u=0;var p=\"\";var tryConsume=function(e){if(u<n.length&&n[u].type===e)return n[u++].value};var mustConsume=function(e){var r=tryConsume(e);if(r!==undefined)return r;var t=n[u],i=t.type,a=t.index;throw new TypeError(\"Unexpected \"+i+\" at \"+a+\", expected \"+e)};var consumeText=function(){var e=\"\";var r;while(r=tryConsume(\"CHAR\")||tryConsume(\"ESCAPED_CHAR\")){e+=r}return e};while(u<n.length){var v=tryConsume(\"CHAR\");var c=tryConsume(\"NAME\");var s=tryConsume(\"PATTERN\");if(c||s){var d=v||\"\";if(i.indexOf(d)===-1){p+=d;d=\"\"}if(p){o.push(p);p=\"\"}o.push({name:c||f++,prefix:d,suffix:\"\",pattern:s||a,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}var g=v||tryConsume(\"ESCAPED_CHAR\");if(g){p+=g;continue}if(p){o.push(p);p=\"\"}var x=tryConsume(\"OPEN\");if(x){var d=consumeText();var l=tryConsume(\"NAME\")||\"\";var h=tryConsume(\"PATTERN\")||\"\";var m=consumeText();mustConsume(\"CLOSE\");o.push({name:l||(h?f++:\"\"),pattern:l&&!h?a:h,prefix:d,suffix:m,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}mustConsume(\"END\")}return o}r.parse=parse;function compile(e,r){return tokensToFunction(parse(e,r),r)}r.compile=compile;function tokensToFunction(e,r){if(r===void 0){r={}}var n=flags(r);var t=r.encode,i=t===void 0?function(e){return e}:t,a=r.validate,o=a===void 0?true:a;var f=e.map((function(e){if(typeof e===\"object\"){return new RegExp(\"^(?:\"+e.pattern+\")$\",n)}}));return function(r){var n=\"\";for(var t=0;t<e.length;t++){var a=e[t];if(typeof a===\"string\"){n+=a;continue}var u=r?r[a.name]:undefined;var p=a.modifier===\"?\"||a.modifier===\"*\";var v=a.modifier===\"*\"||a.modifier===\"+\";if(Array.isArray(u)){if(!v){throw new TypeError('Expected \"'+a.name+'\" to not repeat, but got an array')}if(u.length===0){if(p)continue;throw new TypeError('Expected \"'+a.name+'\" to not be empty')}for(var c=0;c<u.length;c++){var s=i(u[c],a);if(o&&!f[t].test(s)){throw new TypeError('Expected all \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix}continue}if(typeof u===\"string\"||typeof u===\"number\"){var s=i(String(u),a);if(o&&!f[t].test(s)){throw new TypeError('Expected \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix;continue}if(p)continue;var d=v?\"an array\":\"a string\";throw new TypeError('Expected \"'+a.name+'\" to be '+d)}return n}}r.tokensToFunction=tokensToFunction;function match(e,r){var n=[];var t=pathToRegexp(e,n,r);return regexpToFunction(t,n,r)}r.match=match;function regexpToFunction(e,r,n){if(n===void 0){n={}}var t=n.decode,i=t===void 0?function(e){return e}:t;return function(n){var t=e.exec(n);if(!t)return false;var a=t[0],o=t.index;var f=Object.create(null);var _loop_1=function(e){if(t[e]===undefined)return\"continue\";var n=r[e-1];if(n.modifier===\"*\"||n.modifier===\"+\"){f[n.name]=t[e].split(n.prefix+n.suffix).map((function(e){return i(e,n)}))}else{f[n.name]=i(t[e],n)}};for(var u=1;u<t.length;u++){_loop_1(u)}return{path:a,index:o,params:f}}}r.regexpToFunction=regexpToFunction;function escapeString(e){return e.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function flags(e){return e&&e.sensitive?\"\":\"i\"}function regexpToRegexp(e,r){if(!r)return e;var n=e.source.match(/\\((?!\\?)/g);if(n){for(var t=0;t<n.length;t++){r.push({name:t,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"})}}return e}function arrayToRegexp(e,r,n){var t=e.map((function(e){return pathToRegexp(e,r,n).source}));return new RegExp(\"(?:\"+t.join(\"|\")+\")\",flags(n))}function stringToRegexp(e,r,n){return tokensToRegexp(parse(e,n),r,n)}function tokensToRegexp(e,r,n){if(n===void 0){n={}}var t=n.strict,i=t===void 0?false:t,a=n.start,o=a===void 0?true:a,f=n.end,u=f===void 0?true:f,p=n.encode,v=p===void 0?function(e){return e}:p;var c=\"[\"+escapeString(n.endsWith||\"\")+\"]|$\";var s=\"[\"+escapeString(n.delimiter||\"/#?\")+\"]\";var d=o?\"^\":\"\";for(var g=0,x=e;g<x.length;g++){var l=x[g];if(typeof l===\"string\"){d+=escapeString(v(l))}else{var h=escapeString(v(l.prefix));var m=escapeString(v(l.suffix));if(l.pattern){if(r)r.push(l);if(h||m){if(l.modifier===\"+\"||l.modifier===\"*\"){var E=l.modifier===\"*\"?\"?\":\"\";d+=\"(?:\"+h+\"((?:\"+l.pattern+\")(?:\"+m+h+\"(?:\"+l.pattern+\"))*)\"+m+\")\"+E}else{d+=\"(?:\"+h+\"(\"+l.pattern+\")\"+m+\")\"+l.modifier}}else{d+=\"(\"+l.pattern+\")\"+l.modifier}}else{d+=\"(?:\"+h+m+\")\"+l.modifier}}}if(u){if(!i)d+=s+\"?\";d+=!n.endsWith?\"$\":\"(?=\"+c+\")\"}else{var T=e[e.length-1];var y=typeof T===\"string\"?s.indexOf(T[T.length-1])>-1:T===undefined;if(!i){d+=\"(?:\"+s+\"(?=\"+c+\"))?\"}if(!y){d+=\"(?=\"+s+\"|\"+c+\")\"}}return new RegExp(d,flags(n))}r.tokensToRegexp=tokensToRegexp;function pathToRegexp(e,r,n){if(e instanceof RegExp)return regexpToRegexp(e,r);if(Array.isArray(e))return arrayToRegexp(e,r,n);return stringToRegexp(e,r,n)}r.pathToRegexp=pathToRegexp})();module.exports=e})();","(function(){\"use strict\";var e={815:function(e){function hasOwnProperty(e,r){return Object.prototype.hasOwnProperty.call(e,r)}e.exports=function(e,n,t,o){n=n||\"&\";t=t||\"=\";var a={};if(typeof e!==\"string\"||e.length===0){return a}var i=/\\+/g;e=e.split(n);var u=1e3;if(o&&typeof o.maxKeys===\"number\"){u=o.maxKeys}var c=e.length;if(u>0&&c>u){c=u}for(var p=0;p<c;++p){var f=e[p].replace(i,\"%20\"),s=f.indexOf(t),_,l,y,d;if(s>=0){_=f.substr(0,s);l=f.substr(s+1)}else{_=f;l=\"\"}y=decodeURIComponent(_);d=decodeURIComponent(l);if(!hasOwnProperty(a,y)){a[y]=d}else if(r(a[y])){a[y].push(d)}else{a[y]=[a[y],d]}}return a};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"}},577:function(e){var stringifyPrimitive=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};e.exports=function(e,t,o,a){t=t||\"&\";o=o||\"=\";if(e===null){e=undefined}if(typeof e===\"object\"){return map(n(e),(function(n){var a=encodeURIComponent(stringifyPrimitive(n))+o;if(r(e[n])){return map(e[n],(function(e){return a+encodeURIComponent(stringifyPrimitive(e))})).join(t)}else{return a+encodeURIComponent(stringifyPrimitive(e[n]))}})).join(t)}if(!a)return\"\";return encodeURIComponent(stringifyPrimitive(a))+o+encodeURIComponent(stringifyPrimitive(e))};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"};function map(e,r){if(e.map)return e.map(r);var n=[];for(var t=0;t<e.length;t++){n.push(r(e[t],t))}return n}var n=Object.keys||function(e){var r=[];for(var n in e){if(Object.prototype.hasOwnProperty.call(e,n))r.push(n)}return r}}};var r={};function __nccwpck_require__(n){var t=r[n];if(t!==undefined){return t.exports}var o=r[n]={exports:{}};var a=true;try{e[n](o,o.exports,__nccwpck_require__);a=false}finally{if(a)delete r[n]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};!function(){var e=n;e.decode=e.parse=__nccwpck_require__(815);e.encode=e.stringify=__nccwpck_require__(577)}();module.exports=n})();","/**\n * @license React\n * react-dom.react-server.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"next/dist/compiled/react\");\nfunction noop() {}\nvar Internals = {\n  d: {\n    f: noop,\n    r: function () {\n      throw Error(\n        \"Invalid form element. requestFormReset must be passed a form that was rendered by React.\"\n      );\n    },\n    D: noop,\n    C: noop,\n    L: noop,\n    m: noop,\n    X: noop,\n    S: noop,\n    M: noop\n  },\n  p: 0,\n  findDOMNode: null\n};\nif (!React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE)\n  throw Error(\n    'The \"react\" package in this environment is not configured correctly. The \"react-server\" condition must be enabled in any environment that runs React Server Components.'\n  );\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.version = \"19.0.0-rc-65e06cb7-20241218\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-dom.react-server.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.react-server.development.js');\n}\n","/**\n * @license React\n * react-server-dom-webpack-server.edge.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactDOM = require(\"react-dom\"),\n  React = require(\"react\");\nfunction handleErrorInNextTick(error) {\n  setTimeoutOrImmediate(function () {\n    throw error;\n  });\n}\nvar LocalPromise = Promise,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : function (callback) {\n          LocalPromise.resolve(null)\n            .then(callback)\n            .catch(handleErrorInNextTick);\n        },\n  currentView = null,\n  writtenBytes = 0;\nfunction writeChunkAndReturn(destination, chunk) {\n  if (0 !== chunk.byteLength)\n    if (2048 < chunk.byteLength)\n      0 < writtenBytes &&\n        (destination.enqueue(\n          new Uint8Array(currentView.buffer, 0, writtenBytes)\n        ),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0)),\n        destination.enqueue(chunk);\n    else {\n      var allowableBytes = currentView.length - writtenBytes;\n      allowableBytes < chunk.byteLength &&\n        (0 === allowableBytes\n          ? destination.enqueue(currentView)\n          : (currentView.set(chunk.subarray(0, allowableBytes), writtenBytes),\n            destination.enqueue(currentView),\n            (chunk = chunk.subarray(allowableBytes))),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0));\n      currentView.set(chunk, writtenBytes);\n      writtenBytes += chunk.byteLength;\n    }\n  return !0;\n}\nvar textEncoder = new TextEncoder();\nfunction stringToChunk(content) {\n  return textEncoder.encode(content);\n}\nfunction byteLengthOfChunk(chunk) {\n  return chunk.byteLength;\n}\nfunction closeWithError(destination, error) {\n  \"function\" === typeof destination.error\n    ? destination.error(error)\n    : destination.close();\n}\nvar CLIENT_REFERENCE_TAG$1 = Symbol.for(\"react.client.reference\"),\n  SERVER_REFERENCE_TAG = Symbol.for(\"react.server.reference\");\nfunction registerClientReferenceImpl(proxyImplementation, id, async) {\n  return Object.defineProperties(proxyImplementation, {\n    $$typeof: { value: CLIENT_REFERENCE_TAG$1 },\n    $$id: { value: id },\n    $$async: { value: async }\n  });\n}\nvar FunctionBind = Function.prototype.bind,\n  ArraySlice = Array.prototype.slice;\nfunction bind() {\n  var newFn = FunctionBind.apply(this, arguments);\n  if (this.$$typeof === SERVER_REFERENCE_TAG) {\n    var args = ArraySlice.call(arguments, 1),\n      $$typeof = { value: SERVER_REFERENCE_TAG },\n      $$id = { value: this.$$id };\n    args = { value: this.$$bound ? this.$$bound.concat(args) : args };\n    return Object.defineProperties(newFn, {\n      $$typeof: $$typeof,\n      $$id: $$id,\n      $$bound: args,\n      bind: { value: bind, configurable: !0 }\n    });\n  }\n  return newFn;\n}\nvar PROMISE_PROTOTYPE = Promise.prototype,\n  deepProxyHandlers = {\n    get: function (target, name) {\n      switch (name) {\n        case \"$$typeof\":\n          return target.$$typeof;\n        case \"$$id\":\n          return target.$$id;\n        case \"$$async\":\n          return target.$$async;\n        case \"name\":\n          return target.name;\n        case \"displayName\":\n          return;\n        case \"defaultProps\":\n          return;\n        case \"toJSON\":\n          return;\n        case Symbol.toPrimitive:\n          return Object.prototype[Symbol.toPrimitive];\n        case Symbol.toStringTag:\n          return Object.prototype[Symbol.toStringTag];\n        case \"Provider\":\n          throw Error(\n            \"Cannot render a Client Context Provider on the Server. Instead, you can export a Client Component wrapper that itself renders a Client Context Provider.\"\n          );\n        case \"then\":\n          throw Error(\n            \"Cannot await or return from a thenable. You cannot await a client module from a server component.\"\n          );\n      }\n      throw Error(\n        \"Cannot access \" +\n          (String(target.name) + \".\" + String(name)) +\n          \" on the server. You cannot dot into a client module from a server component. You can only pass the imported name through.\"\n      );\n    },\n    set: function () {\n      throw Error(\"Cannot assign to a client module from a server module.\");\n    }\n  };\nfunction getReference(target, name) {\n  switch (name) {\n    case \"$$typeof\":\n      return target.$$typeof;\n    case \"$$id\":\n      return target.$$id;\n    case \"$$async\":\n      return target.$$async;\n    case \"name\":\n      return target.name;\n    case \"defaultProps\":\n      return;\n    case \"toJSON\":\n      return;\n    case Symbol.toPrimitive:\n      return Object.prototype[Symbol.toPrimitive];\n    case Symbol.toStringTag:\n      return Object.prototype[Symbol.toStringTag];\n    case \"__esModule\":\n      var moduleId = target.$$id;\n      target.default = registerClientReferenceImpl(\n        function () {\n          throw Error(\n            \"Attempted to call the default export of \" +\n              moduleId +\n              \" from the server but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"\n          );\n        },\n        target.$$id + \"#\",\n        target.$$async\n      );\n      return !0;\n    case \"then\":\n      if (target.then) return target.then;\n      if (target.$$async) return;\n      var clientReference = registerClientReferenceImpl({}, target.$$id, !0),\n        proxy = new Proxy(clientReference, proxyHandlers$1);\n      target.status = \"fulfilled\";\n      target.value = proxy;\n      return (target.then = registerClientReferenceImpl(\n        function (resolve) {\n          return Promise.resolve(resolve(proxy));\n        },\n        target.$$id + \"#then\",\n        !1\n      ));\n  }\n  if (\"symbol\" === typeof name)\n    throw Error(\n      \"Cannot read Symbol exports. Only named exports are supported on a client module imported on the server.\"\n    );\n  clientReference = target[name];\n  clientReference ||\n    ((clientReference = registerClientReferenceImpl(\n      function () {\n        throw Error(\n          \"Attempted to call \" +\n            String(name) +\n            \"() from the server but \" +\n            String(name) +\n            \" is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"\n        );\n      },\n      target.$$id + \"#\" + name,\n      target.$$async\n    )),\n    Object.defineProperty(clientReference, \"name\", { value: name }),\n    (clientReference = target[name] =\n      new Proxy(clientReference, deepProxyHandlers)));\n  return clientReference;\n}\nvar proxyHandlers$1 = {\n    get: function (target, name) {\n      return getReference(target, name);\n    },\n    getOwnPropertyDescriptor: function (target, name) {\n      var descriptor = Object.getOwnPropertyDescriptor(target, name);\n      descriptor ||\n        ((descriptor = {\n          value: getReference(target, name),\n          writable: !1,\n          configurable: !1,\n          enumerable: !1\n        }),\n        Object.defineProperty(target, name, descriptor));\n      return descriptor;\n    },\n    getPrototypeOf: function () {\n      return PROMISE_PROTOTYPE;\n    },\n    set: function () {\n      throw Error(\"Cannot assign to a client module from a server module.\");\n    }\n  },\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: previousDispatcher.f,\n  r: previousDispatcher.r,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule$1,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nfunction prefetchDNS(href) {\n  if (\"string\" === typeof href && href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"D|\" + href;\n      hints.has(key) || (hints.add(key), emitHint(request, \"D\", href));\n    } else previousDispatcher.D(href);\n  }\n}\nfunction preconnect(href, crossOrigin) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"C|\" + (null == crossOrigin ? \"null\" : crossOrigin) + \"|\" + href;\n      hints.has(key) ||\n        (hints.add(key),\n        \"string\" === typeof crossOrigin\n          ? emitHint(request, \"C\", [href, crossOrigin])\n          : emitHint(request, \"C\", href));\n    } else previousDispatcher.C(href, crossOrigin);\n  }\n}\nfunction preload(href, as, options) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"L\";\n      if (\"image\" === as && options) {\n        var imageSrcSet = options.imageSrcSet,\n          imageSizes = options.imageSizes,\n          uniquePart = \"\";\n        \"string\" === typeof imageSrcSet && \"\" !== imageSrcSet\n          ? ((uniquePart += \"[\" + imageSrcSet + \"]\"),\n            \"string\" === typeof imageSizes &&\n              (uniquePart += \"[\" + imageSizes + \"]\"))\n          : (uniquePart += \"[][]\" + href);\n        key += \"[image]\" + uniquePart;\n      } else key += \"[\" + as + \"]\" + href;\n      hints.has(key) ||\n        (hints.add(key),\n        (options = trimOptions(options))\n          ? emitHint(request, \"L\", [href, as, options])\n          : emitHint(request, \"L\", [href, as]));\n    } else previousDispatcher.L(href, as, options);\n  }\n}\nfunction preloadModule$1(href, options) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"m|\" + href;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"m\", [href, options])\n        : emitHint(request, \"m\", href);\n    }\n    previousDispatcher.m(href, options);\n  }\n}\nfunction preinitStyle(href, precedence, options) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"S|\" + href;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"S\", [\n            href,\n            \"string\" === typeof precedence ? precedence : 0,\n            options\n          ])\n        : \"string\" === typeof precedence\n          ? emitHint(request, \"S\", [href, precedence])\n          : emitHint(request, \"S\", href);\n    }\n    previousDispatcher.S(href, precedence, options);\n  }\n}\nfunction preinitScript(src, options) {\n  if (\"string\" === typeof src) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"X|\" + src;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"X\", [src, options])\n        : emitHint(request, \"X\", src);\n    }\n    previousDispatcher.X(src, options);\n  }\n}\nfunction preinitModuleScript(src, options) {\n  if (\"string\" === typeof src) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"M|\" + src;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"M\", [src, options])\n        : emitHint(request, \"M\", src);\n    }\n    previousDispatcher.M(src, options);\n  }\n}\nfunction trimOptions(options) {\n  if (null == options) return null;\n  var hasProperties = !1,\n    trimmed = {},\n    key;\n  for (key in options)\n    null != options[key] &&\n      ((hasProperties = !0), (trimmed[key] = options[key]));\n  return hasProperties ? trimmed : null;\n}\nvar supportsRequestStorage = \"function\" === typeof AsyncLocalStorage,\n  requestStorage = supportsRequestStorage ? new AsyncLocalStorage() : null;\n\"object\" === typeof async_hooks\n  ? async_hooks.createHook\n  : function () {\n      return { enable: function () {}, disable: function () {} };\n    };\n\"object\" === typeof async_hooks ? async_hooks.executionAsyncId : null;\nvar TEMPORARY_REFERENCE_TAG = Symbol.for(\"react.temporary.reference\"),\n  proxyHandlers = {\n    get: function (target, name) {\n      switch (name) {\n        case \"$$typeof\":\n          return target.$$typeof;\n        case \"name\":\n          return;\n        case \"displayName\":\n          return;\n        case \"defaultProps\":\n          return;\n        case \"toJSON\":\n          return;\n        case Symbol.toPrimitive:\n          return Object.prototype[Symbol.toPrimitive];\n        case Symbol.toStringTag:\n          return Object.prototype[Symbol.toStringTag];\n        case \"Provider\":\n          throw Error(\n            \"Cannot render a Client Context Provider on the Server. Instead, you can export a Client Component wrapper that itself renders a Client Context Provider.\"\n          );\n      }\n      throw Error(\n        \"Cannot access \" +\n          String(name) +\n          \" on the server. You cannot dot into a temporary client reference from a server component. You can only pass the value through to the client.\"\n      );\n    },\n    set: function () {\n      throw Error(\n        \"Cannot assign to a temporary client reference from a server module.\"\n      );\n    }\n  };\nfunction createTemporaryReference(temporaryReferences, id) {\n  var reference = Object.defineProperties(\n    function () {\n      throw Error(\n        \"Attempted to call a temporary Client Reference from the server but it is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"\n      );\n    },\n    { $$typeof: { value: TEMPORARY_REFERENCE_TAG } }\n  );\n  reference = new Proxy(reference, proxyHandlers);\n  temporaryReferences.set(reference, id);\n  return reference;\n}\nvar REACT_LEGACY_ELEMENT_TYPE = Symbol.for(\"react.element\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\");\nSymbol.for(\"react.postpone\");\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ASYNC_ITERATOR = Symbol.asyncIterator,\n  SuspenseException = Error(\n    \"Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`.\"\n  );\nfunction noop$1() {}\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop$1, noop$1), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      \"string\" === typeof thenable.status\n        ? thenable.then(noop$1, noop$1)\n        : ((thenableState = thenable),\n          (thenableState.status = \"pending\"),\n          thenableState.then(\n            function (fulfilledValue) {\n              if (\"pending\" === thenable.status) {\n                var fulfilledThenable = thenable;\n                fulfilledThenable.status = \"fulfilled\";\n                fulfilledThenable.value = fulfilledValue;\n              }\n            },\n            function (error) {\n              if (\"pending\" === thenable.status) {\n                var rejectedThenable = thenable;\n                rejectedThenable.status = \"rejected\";\n                rejectedThenable.reason = error;\n              }\n            }\n          ));\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable)\n    throw Error(\n      \"Expected a suspended thenable. This is a bug in React. Please file an issue.\"\n    );\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nvar currentRequest$1 = null,\n  thenableIndexCounter = 0,\n  thenableState = null;\nfunction getThenableStateAfterSuspending() {\n  var state = thenableState || [];\n  thenableState = null;\n  return state;\n}\nvar HooksDispatcher = {\n  useMemo: function (nextCreate) {\n    return nextCreate();\n  },\n  useCallback: function (callback) {\n    return callback;\n  },\n  useDebugValue: function () {},\n  useDeferredValue: unsupportedHook,\n  useTransition: unsupportedHook,\n  readContext: unsupportedContext,\n  useContext: unsupportedContext,\n  useReducer: unsupportedHook,\n  useRef: unsupportedHook,\n  useState: unsupportedHook,\n  useInsertionEffect: unsupportedHook,\n  useLayoutEffect: unsupportedHook,\n  useImperativeHandle: unsupportedHook,\n  useEffect: unsupportedHook,\n  useId: useId,\n  useSyncExternalStore: unsupportedHook,\n  useCacheRefresh: function () {\n    return unsupportedRefresh;\n  },\n  useMemoCache: function (size) {\n    for (var data = Array(size), i = 0; i < size; i++)\n      data[i] = REACT_MEMO_CACHE_SENTINEL;\n    return data;\n  },\n  use: use\n};\nfunction unsupportedHook() {\n  throw Error(\"This Hook is not supported in Server Components.\");\n}\nfunction unsupportedRefresh() {\n  throw Error(\"Refreshing the cache is not supported in Server Components.\");\n}\nfunction unsupportedContext() {\n  throw Error(\"Cannot read a Client Context from a Server Component.\");\n}\nfunction useId() {\n  if (null === currentRequest$1)\n    throw Error(\"useId can only be used while React is rendering\");\n  var id = currentRequest$1.identifierCount++;\n  return \":\" + currentRequest$1.identifierPrefix + \"S\" + id.toString(32) + \":\";\n}\nfunction use(usable) {\n  if (\n    (null !== usable && \"object\" === typeof usable) ||\n    \"function\" === typeof usable\n  ) {\n    if (\"function\" === typeof usable.then) {\n      var index = thenableIndexCounter;\n      thenableIndexCounter += 1;\n      null === thenableState && (thenableState = []);\n      return trackUsedThenable(thenableState, usable, index);\n    }\n    usable.$$typeof === REACT_CONTEXT_TYPE && unsupportedContext();\n  }\n  if (usable.$$typeof === CLIENT_REFERENCE_TAG$1) {\n    if (null != usable.value && usable.value.$$typeof === REACT_CONTEXT_TYPE)\n      throw Error(\"Cannot read a Client Context from a Server Component.\");\n    throw Error(\"Cannot use() an already resolved Client Reference.\");\n  }\n  throw Error(\"An unsupported type was passed to use(): \" + String(usable));\n}\nvar DefaultAsyncDispatcher = {\n    getCacheForType: function (resourceType) {\n      var JSCompiler_inline_result = (JSCompiler_inline_result =\n        resolveRequest())\n        ? JSCompiler_inline_result.cache\n        : new Map();\n      var entry = JSCompiler_inline_result.get(resourceType);\n      void 0 === entry &&\n        ((entry = resourceType()),\n        JSCompiler_inline_result.set(resourceType, entry));\n      return entry;\n    }\n  },\n  ReactSharedInternalsServer =\n    React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nif (!ReactSharedInternalsServer)\n  throw Error(\n    'The \"react\" package in this environment is not configured correctly. The \"react-server\" condition must be enabled in any environment that runs React Server Components.'\n  );\nvar isArrayImpl = Array.isArray,\n  getPrototypeOf = Object.getPrototypeOf;\nfunction objectName(object) {\n  return Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object (.*)\\]$/, function (m, p0) {\n      return p0;\n    });\n}\nfunction describeValueForErrorMessage(value) {\n  switch (typeof value) {\n    case \"string\":\n      return JSON.stringify(\n        10 >= value.length ? value : value.slice(0, 10) + \"...\"\n      );\n    case \"object\":\n      if (isArrayImpl(value)) return \"[...]\";\n      if (null !== value && value.$$typeof === CLIENT_REFERENCE_TAG)\n        return \"client\";\n      value = objectName(value);\n      return \"Object\" === value ? \"{...}\" : value;\n    case \"function\":\n      return value.$$typeof === CLIENT_REFERENCE_TAG\n        ? \"client\"\n        : (value = value.displayName || value.name)\n          ? \"function \" + value\n          : \"function\";\n    default:\n      return String(value);\n  }\n}\nfunction describeElementType(type) {\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeElementType(type.render);\n      case REACT_MEMO_TYPE:\n        return describeElementType(type.type);\n      case REACT_LAZY_TYPE:\n        var payload = type._payload;\n        type = type._init;\n        try {\n          return describeElementType(type(payload));\n        } catch (x) {}\n    }\n  return \"\";\n}\nvar CLIENT_REFERENCE_TAG = Symbol.for(\"react.client.reference\");\nfunction describeObjectForErrorMessage(objectOrArray, expandedName) {\n  var objKind = objectName(objectOrArray);\n  if (\"Object\" !== objKind && \"Array\" !== objKind) return objKind;\n  objKind = -1;\n  var length = 0;\n  if (isArrayImpl(objectOrArray)) {\n    var str = \"[\";\n    for (var i = 0; i < objectOrArray.length; i++) {\n      0 < i && (str += \", \");\n      var value = objectOrArray[i];\n      value =\n        \"object\" === typeof value && null !== value\n          ? describeObjectForErrorMessage(value)\n          : describeValueForErrorMessage(value);\n      \"\" + i === expandedName\n        ? ((objKind = str.length), (length = value.length), (str += value))\n        : (str =\n            10 > value.length && 40 > str.length + value.length\n              ? str + value\n              : str + \"...\");\n    }\n    str += \"]\";\n  } else if (objectOrArray.$$typeof === REACT_ELEMENT_TYPE)\n    str = \"<\" + describeElementType(objectOrArray.type) + \"/>\";\n  else {\n    if (objectOrArray.$$typeof === CLIENT_REFERENCE_TAG) return \"client\";\n    str = \"{\";\n    i = Object.keys(objectOrArray);\n    for (value = 0; value < i.length; value++) {\n      0 < value && (str += \", \");\n      var name = i[value],\n        encodedKey = JSON.stringify(name);\n      str += ('\"' + name + '\"' === encodedKey ? name : encodedKey) + \": \";\n      encodedKey = objectOrArray[name];\n      encodedKey =\n        \"object\" === typeof encodedKey && null !== encodedKey\n          ? describeObjectForErrorMessage(encodedKey)\n          : describeValueForErrorMessage(encodedKey);\n      name === expandedName\n        ? ((objKind = str.length),\n          (length = encodedKey.length),\n          (str += encodedKey))\n        : (str =\n            10 > encodedKey.length && 40 > str.length + encodedKey.length\n              ? str + encodedKey\n              : str + \"...\");\n    }\n    str += \"}\";\n  }\n  return void 0 === expandedName\n    ? str\n    : -1 < objKind && 0 < length\n      ? ((objectOrArray = \" \".repeat(objKind) + \"^\".repeat(length)),\n        \"\\n  \" + str + \"\\n  \" + objectOrArray)\n      : \"\\n  \" + str;\n}\nvar ObjectPrototype = Object.prototype,\n  stringify = JSON.stringify;\nfunction defaultErrorHandler(error) {\n  console.error(error);\n}\nfunction defaultPostponeHandler() {}\nfunction RequestInstance(\n  type,\n  model,\n  bundlerConfig,\n  onError,\n  identifierPrefix,\n  onPostpone,\n  temporaryReferences,\n  environmentName,\n  filterStackFrame,\n  onAllReady,\n  onFatalError\n) {\n  if (\n    null !== ReactSharedInternalsServer.A &&\n    ReactSharedInternalsServer.A !== DefaultAsyncDispatcher\n  )\n    throw Error(\"Currently React only supports one RSC renderer at a time.\");\n  ReactSharedInternalsServer.A = DefaultAsyncDispatcher;\n  filterStackFrame = new Set();\n  environmentName = [];\n  var hints = new Set();\n  this.type = type;\n  this.status = 10;\n  this.flushScheduled = !1;\n  this.destination = this.fatalError = null;\n  this.bundlerConfig = bundlerConfig;\n  this.cache = new Map();\n  this.pendingChunks = this.nextChunkId = 0;\n  this.hints = hints;\n  this.abortListeners = new Set();\n  this.abortableTasks = filterStackFrame;\n  this.pingedTasks = environmentName;\n  this.completedImportChunks = [];\n  this.completedHintChunks = [];\n  this.completedRegularChunks = [];\n  this.completedErrorChunks = [];\n  this.writtenSymbols = new Map();\n  this.writtenClientReferences = new Map();\n  this.writtenServerReferences = new Map();\n  this.writtenObjects = new WeakMap();\n  this.temporaryReferences = temporaryReferences;\n  this.identifierPrefix = identifierPrefix || \"\";\n  this.identifierCount = 1;\n  this.taintCleanupQueue = [];\n  this.onError = void 0 === onError ? defaultErrorHandler : onError;\n  this.onPostpone = void 0 === onPostpone ? defaultPostponeHandler : onPostpone;\n  this.onAllReady = onAllReady;\n  this.onFatalError = onFatalError;\n  type = createTask(this, model, null, !1, filterStackFrame);\n  environmentName.push(type);\n}\nfunction noop() {}\nvar currentRequest = null;\nfunction resolveRequest() {\n  if (currentRequest) return currentRequest;\n  if (supportsRequestStorage) {\n    var store = requestStorage.getStore();\n    if (store) return store;\n  }\n  return null;\n}\nfunction serializeThenable(request, task, thenable) {\n  var newTask = createTask(\n    request,\n    null,\n    task.keyPath,\n    task.implicitSlot,\n    request.abortableTasks\n  );\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return (\n        (newTask.model = thenable.value), pingTask(request, newTask), newTask.id\n      );\n    case \"rejected\":\n      return (\n        (task = logRecoverableError(request, thenable.reason, null)),\n        emitErrorChunk(request, newTask.id, task),\n        (newTask.status = 4),\n        request.abortableTasks.delete(newTask),\n        newTask.id\n      );\n    default:\n      if (12 === request.status)\n        return (\n          request.abortableTasks.delete(newTask),\n          (newTask.status = 3),\n          (task = stringify(serializeByValueID(request.fatalError))),\n          emitModelChunk(request, newTask.id, task),\n          newTask.id\n        );\n      \"string\" !== typeof thenable.status &&\n        ((thenable.status = \"pending\"),\n        thenable.then(\n          function (fulfilledValue) {\n            \"pending\" === thenable.status &&\n              ((thenable.status = \"fulfilled\"),\n              (thenable.value = fulfilledValue));\n          },\n          function (error) {\n            \"pending\" === thenable.status &&\n              ((thenable.status = \"rejected\"), (thenable.reason = error));\n          }\n        ));\n  }\n  thenable.then(\n    function (value) {\n      newTask.model = value;\n      pingTask(request, newTask);\n    },\n    function (reason) {\n      0 === newTask.status &&\n        ((reason = logRecoverableError(request, reason, newTask)),\n        emitErrorChunk(request, newTask.id, reason),\n        (newTask.status = 4),\n        request.abortableTasks.delete(newTask),\n        enqueueFlush(request));\n    }\n  );\n  return newTask.id;\n}\nfunction serializeReadableStream(request, task, stream) {\n  function progress(entry) {\n    if (!aborted)\n      if (entry.done)\n        request.abortListeners.delete(abortStream),\n          (entry = streamTask.id.toString(16) + \":C\\n\"),\n          request.completedRegularChunks.push(stringToChunk(entry)),\n          enqueueFlush(request),\n          (aborted = !0);\n      else\n        try {\n          (streamTask.model = entry.value),\n            request.pendingChunks++,\n            emitChunk(request, streamTask, streamTask.model),\n            enqueueFlush(request),\n            reader.read().then(progress, error);\n        } catch (x$8) {\n          error(x$8);\n        }\n  }\n  function error(reason) {\n    if (!aborted) {\n      aborted = !0;\n      request.abortListeners.delete(abortStream);\n      var digest = logRecoverableError(request, reason, streamTask);\n      emitErrorChunk(request, streamTask.id, digest);\n      enqueueFlush(request);\n      reader.cancel(reason).then(error, error);\n    }\n  }\n  function abortStream(reason) {\n    if (!aborted) {\n      aborted = !0;\n      request.abortListeners.delete(abortStream);\n      var digest = logRecoverableError(request, reason, streamTask);\n      emitErrorChunk(request, streamTask.id, digest);\n      enqueueFlush(request);\n      reader.cancel(reason).then(error, error);\n    }\n  }\n  var supportsBYOB = stream.supportsBYOB;\n  if (void 0 === supportsBYOB)\n    try {\n      stream.getReader({ mode: \"byob\" }).releaseLock(), (supportsBYOB = !0);\n    } catch (x) {\n      supportsBYOB = !1;\n    }\n  var reader = stream.getReader(),\n    streamTask = createTask(\n      request,\n      task.model,\n      task.keyPath,\n      task.implicitSlot,\n      request.abortableTasks\n    );\n  request.abortableTasks.delete(streamTask);\n  request.pendingChunks++;\n  task = streamTask.id.toString(16) + \":\" + (supportsBYOB ? \"r\" : \"R\") + \"\\n\";\n  request.completedRegularChunks.push(stringToChunk(task));\n  var aborted = !1;\n  request.abortListeners.add(abortStream);\n  reader.read().then(progress, error);\n  return serializeByValueID(streamTask.id);\n}\nfunction serializeAsyncIterable(request, task, iterable, iterator) {\n  function progress(entry) {\n    if (!aborted)\n      if (entry.done) {\n        request.abortListeners.delete(abortIterable);\n        if (void 0 === entry.value)\n          var endStreamRow = streamTask.id.toString(16) + \":C\\n\";\n        else\n          try {\n            var chunkId = outlineModel(request, entry.value);\n            endStreamRow =\n              streamTask.id.toString(16) +\n              \":C\" +\n              stringify(serializeByValueID(chunkId)) +\n              \"\\n\";\n          } catch (x) {\n            error(x);\n            return;\n          }\n        request.completedRegularChunks.push(stringToChunk(endStreamRow));\n        enqueueFlush(request);\n        aborted = !0;\n      } else\n        try {\n          (streamTask.model = entry.value),\n            request.pendingChunks++,\n            emitChunk(request, streamTask, streamTask.model),\n            enqueueFlush(request),\n            iterator.next().then(progress, error);\n        } catch (x$9) {\n          error(x$9);\n        }\n  }\n  function error(reason) {\n    if (!aborted) {\n      aborted = !0;\n      request.abortListeners.delete(abortIterable);\n      var digest = logRecoverableError(request, reason, streamTask);\n      emitErrorChunk(request, streamTask.id, digest);\n      enqueueFlush(request);\n      \"function\" === typeof iterator.throw &&\n        iterator.throw(reason).then(error, error);\n    }\n  }\n  function abortIterable(reason) {\n    if (!aborted) {\n      aborted = !0;\n      request.abortListeners.delete(abortIterable);\n      var digest = logRecoverableError(request, reason, streamTask);\n      emitErrorChunk(request, streamTask.id, digest);\n      enqueueFlush(request);\n      \"function\" === typeof iterator.throw &&\n        iterator.throw(reason).then(error, error);\n    }\n  }\n  iterable = iterable === iterator;\n  var streamTask = createTask(\n    request,\n    task.model,\n    task.keyPath,\n    task.implicitSlot,\n    request.abortableTasks\n  );\n  request.abortableTasks.delete(streamTask);\n  request.pendingChunks++;\n  task = streamTask.id.toString(16) + \":\" + (iterable ? \"x\" : \"X\") + \"\\n\";\n  request.completedRegularChunks.push(stringToChunk(task));\n  var aborted = !1;\n  request.abortListeners.add(abortIterable);\n  iterator.next().then(progress, error);\n  return serializeByValueID(streamTask.id);\n}\nfunction emitHint(request, code, model) {\n  model = stringify(model);\n  code = stringToChunk(\":H\" + code + model + \"\\n\");\n  request.completedHintChunks.push(code);\n  enqueueFlush(request);\n}\nfunction readThenable(thenable) {\n  if (\"fulfilled\" === thenable.status) return thenable.value;\n  if (\"rejected\" === thenable.status) throw thenable.reason;\n  throw thenable;\n}\nfunction createLazyWrapperAroundWakeable(wakeable) {\n  switch (wakeable.status) {\n    case \"fulfilled\":\n    case \"rejected\":\n      break;\n    default:\n      \"string\" !== typeof wakeable.status &&\n        ((wakeable.status = \"pending\"),\n        wakeable.then(\n          function (fulfilledValue) {\n            \"pending\" === wakeable.status &&\n              ((wakeable.status = \"fulfilled\"),\n              (wakeable.value = fulfilledValue));\n          },\n          function (error) {\n            \"pending\" === wakeable.status &&\n              ((wakeable.status = \"rejected\"), (wakeable.reason = error));\n          }\n        ));\n  }\n  return { $$typeof: REACT_LAZY_TYPE, _payload: wakeable, _init: readThenable };\n}\nfunction voidHandler() {}\nfunction renderFunctionComponent(request, task, key, Component, props) {\n  var prevThenableState = task.thenableState;\n  task.thenableState = null;\n  thenableIndexCounter = 0;\n  thenableState = prevThenableState;\n  Component = Component(props, void 0);\n  if (12 === request.status)\n    throw (\n      (\"object\" === typeof Component &&\n        null !== Component &&\n        \"function\" === typeof Component.then &&\n        Component.$$typeof !== CLIENT_REFERENCE_TAG$1 &&\n        Component.then(voidHandler, voidHandler),\n      null)\n    );\n  if (\n    \"object\" === typeof Component &&\n    null !== Component &&\n    Component.$$typeof !== CLIENT_REFERENCE_TAG$1\n  ) {\n    if (\"function\" === typeof Component.then) {\n      props = Component;\n      if (\"fulfilled\" === props.status) return props.value;\n      Component = createLazyWrapperAroundWakeable(Component);\n    }\n    var iteratorFn = getIteratorFn(Component);\n    if (iteratorFn) {\n      var iterableChild = Component;\n      Component = {};\n      Component =\n        ((Component[Symbol.iterator] = function () {\n          return iteratorFn.call(iterableChild);\n        }),\n        Component);\n    } else if (\n      !(\n        \"function\" !== typeof Component[ASYNC_ITERATOR] ||\n        (\"function\" === typeof ReadableStream &&\n          Component instanceof ReadableStream)\n      )\n    ) {\n      var iterableChild$10 = Component;\n      Component = {};\n      Component =\n        ((Component[ASYNC_ITERATOR] = function () {\n          return iterableChild$10[ASYNC_ITERATOR]();\n        }),\n        Component);\n    }\n  }\n  props = task.keyPath;\n  prevThenableState = task.implicitSlot;\n  null !== key\n    ? (task.keyPath = null === props ? key : props + \",\" + key)\n    : null === props && (task.implicitSlot = !0);\n  request = renderModelDestructive(request, task, emptyRoot, \"\", Component);\n  task.keyPath = props;\n  task.implicitSlot = prevThenableState;\n  return request;\n}\nfunction renderFragment(request, task, children) {\n  return null !== task.keyPath\n    ? ((request = [\n        REACT_ELEMENT_TYPE,\n        REACT_FRAGMENT_TYPE,\n        task.keyPath,\n        { children: children }\n      ]),\n      task.implicitSlot ? [request] : request)\n    : children;\n}\nfunction renderElement(request, task, type, key, ref, props) {\n  if (null !== ref && void 0 !== ref)\n    throw Error(\n      \"Refs cannot be used in Server Components, nor passed to Client Components.\"\n    );\n  if (\n    \"function\" === typeof type &&\n    type.$$typeof !== CLIENT_REFERENCE_TAG$1 &&\n    type.$$typeof !== TEMPORARY_REFERENCE_TAG\n  )\n    return renderFunctionComponent(request, task, key, type, props);\n  if (type === REACT_FRAGMENT_TYPE && null === key)\n    return (\n      (type = task.implicitSlot),\n      null === task.keyPath && (task.implicitSlot = !0),\n      (props = renderModelDestructive(\n        request,\n        task,\n        emptyRoot,\n        \"\",\n        props.children\n      )),\n      (task.implicitSlot = type),\n      props\n    );\n  if (\n    null != type &&\n    \"object\" === typeof type &&\n    type.$$typeof !== CLIENT_REFERENCE_TAG$1\n  )\n    switch (type.$$typeof) {\n      case REACT_LAZY_TYPE:\n        var init = type._init;\n        type = init(type._payload);\n        if (12 === request.status) throw null;\n        return renderElement(request, task, type, key, ref, props);\n      case REACT_FORWARD_REF_TYPE:\n        return renderFunctionComponent(request, task, key, type.render, props);\n      case REACT_MEMO_TYPE:\n        return renderElement(request, task, type.type, key, ref, props);\n    }\n  request = key;\n  key = task.keyPath;\n  null === request\n    ? (request = key)\n    : null !== key && (request = key + \",\" + request);\n  props = [REACT_ELEMENT_TYPE, type, request, props];\n  task = task.implicitSlot && null !== request ? [props] : props;\n  return task;\n}\nfunction pingTask(request, task) {\n  var pingedTasks = request.pingedTasks;\n  pingedTasks.push(task);\n  1 === pingedTasks.length &&\n    ((request.flushScheduled = null !== request.destination),\n    21 === request.type || 10 === request.status\n      ? scheduleMicrotask(function () {\n          return performWork(request);\n        })\n      : setTimeoutOrImmediate(function () {\n          return performWork(request);\n        }, 0));\n}\nfunction createTask(request, model, keyPath, implicitSlot, abortSet) {\n  request.pendingChunks++;\n  var id = request.nextChunkId++;\n  \"object\" !== typeof model ||\n    null === model ||\n    null !== keyPath ||\n    implicitSlot ||\n    request.writtenObjects.set(model, serializeByValueID(id));\n  var task = {\n    id: id,\n    status: 0,\n    model: model,\n    keyPath: keyPath,\n    implicitSlot: implicitSlot,\n    ping: function () {\n      return pingTask(request, task);\n    },\n    toJSON: function (parentPropertyName, value) {\n      var prevKeyPath = task.keyPath,\n        prevImplicitSlot = task.implicitSlot;\n      try {\n        var JSCompiler_inline_result = renderModelDestructive(\n          request,\n          task,\n          this,\n          parentPropertyName,\n          value\n        );\n      } catch (thrownValue) {\n        if (\n          ((parentPropertyName = task.model),\n          (parentPropertyName =\n            \"object\" === typeof parentPropertyName &&\n            null !== parentPropertyName &&\n            (parentPropertyName.$$typeof === REACT_ELEMENT_TYPE ||\n              parentPropertyName.$$typeof === REACT_LAZY_TYPE)),\n          12 === request.status)\n        )\n          (task.status = 3),\n            (prevKeyPath = request.fatalError),\n            (JSCompiler_inline_result = parentPropertyName\n              ? \"$L\" + prevKeyPath.toString(16)\n              : serializeByValueID(prevKeyPath));\n        else if (\n          ((value =\n            thrownValue === SuspenseException\n              ? getSuspendedThenable()\n              : thrownValue),\n          \"object\" === typeof value &&\n            null !== value &&\n            \"function\" === typeof value.then)\n        ) {\n          JSCompiler_inline_result = createTask(\n            request,\n            task.model,\n            task.keyPath,\n            task.implicitSlot,\n            request.abortableTasks\n          );\n          var ping = JSCompiler_inline_result.ping;\n          value.then(ping, ping);\n          JSCompiler_inline_result.thenableState =\n            getThenableStateAfterSuspending();\n          task.keyPath = prevKeyPath;\n          task.implicitSlot = prevImplicitSlot;\n          JSCompiler_inline_result = parentPropertyName\n            ? \"$L\" + JSCompiler_inline_result.id.toString(16)\n            : serializeByValueID(JSCompiler_inline_result.id);\n        } else\n          (task.keyPath = prevKeyPath),\n            (task.implicitSlot = prevImplicitSlot),\n            request.pendingChunks++,\n            (prevKeyPath = request.nextChunkId++),\n            (prevImplicitSlot = logRecoverableError(request, value, task)),\n            emitErrorChunk(request, prevKeyPath, prevImplicitSlot),\n            (JSCompiler_inline_result = parentPropertyName\n              ? \"$L\" + prevKeyPath.toString(16)\n              : serializeByValueID(prevKeyPath));\n      }\n      return JSCompiler_inline_result;\n    },\n    thenableState: null\n  };\n  abortSet.add(task);\n  return task;\n}\nfunction serializeByValueID(id) {\n  return \"$\" + id.toString(16);\n}\nfunction encodeReferenceChunk(request, id, reference) {\n  request = stringify(reference);\n  id = id.toString(16) + \":\" + request + \"\\n\";\n  return stringToChunk(id);\n}\nfunction serializeClientReference(\n  request,\n  parent,\n  parentPropertyName,\n  clientReference\n) {\n  var clientReferenceKey = clientReference.$$async\n      ? clientReference.$$id + \"#async\"\n      : clientReference.$$id,\n    writtenClientReferences = request.writtenClientReferences,\n    existingId = writtenClientReferences.get(clientReferenceKey);\n  if (void 0 !== existingId)\n    return parent[0] === REACT_ELEMENT_TYPE && \"1\" === parentPropertyName\n      ? \"$L\" + existingId.toString(16)\n      : serializeByValueID(existingId);\n  try {\n    var config = request.bundlerConfig,\n      modulePath = clientReference.$$id;\n    existingId = \"\";\n    var resolvedModuleData = config[modulePath];\n    if (resolvedModuleData) existingId = resolvedModuleData.name;\n    else {\n      var idx = modulePath.lastIndexOf(\"#\");\n      -1 !== idx &&\n        ((existingId = modulePath.slice(idx + 1)),\n        (resolvedModuleData = config[modulePath.slice(0, idx)]));\n      if (!resolvedModuleData)\n        throw Error(\n          'Could not find the module \"' +\n            modulePath +\n            '\" in the React Client Manifest. This is probably a bug in the React Server Components bundler.'\n        );\n    }\n    if (!0 === resolvedModuleData.async && !0 === clientReference.$$async)\n      throw Error(\n        'The module \"' +\n          modulePath +\n          '\" is marked as an async ESM module but was loaded as a CJS proxy. This is probably a bug in the React Server Components bundler.'\n      );\n    var JSCompiler_inline_result =\n      !0 === resolvedModuleData.async || !0 === clientReference.$$async\n        ? [resolvedModuleData.id, resolvedModuleData.chunks, existingId, 1]\n        : [resolvedModuleData.id, resolvedModuleData.chunks, existingId];\n    request.pendingChunks++;\n    var importId = request.nextChunkId++,\n      json = stringify(JSCompiler_inline_result),\n      row = importId.toString(16) + \":I\" + json + \"\\n\",\n      processedChunk = stringToChunk(row);\n    request.completedImportChunks.push(processedChunk);\n    writtenClientReferences.set(clientReferenceKey, importId);\n    return parent[0] === REACT_ELEMENT_TYPE && \"1\" === parentPropertyName\n      ? \"$L\" + importId.toString(16)\n      : serializeByValueID(importId);\n  } catch (x) {\n    return (\n      request.pendingChunks++,\n      (parent = request.nextChunkId++),\n      (parentPropertyName = logRecoverableError(request, x, null)),\n      emitErrorChunk(request, parent, parentPropertyName),\n      serializeByValueID(parent)\n    );\n  }\n}\nfunction outlineModel(request, value) {\n  value = createTask(request, value, null, !1, request.abortableTasks);\n  retryTask(request, value);\n  return value.id;\n}\nfunction serializeTypedArray(request, tag, typedArray) {\n  request.pendingChunks++;\n  var bufferId = request.nextChunkId++;\n  emitTypedArrayChunk(request, bufferId, tag, typedArray);\n  return serializeByValueID(bufferId);\n}\nfunction serializeBlob(request, blob) {\n  function progress(entry) {\n    if (!aborted)\n      if (entry.done)\n        request.abortListeners.delete(abortBlob),\n          (aborted = !0),\n          pingTask(request, newTask);\n      else\n        return (\n          model.push(entry.value), reader.read().then(progress).catch(error)\n        );\n  }\n  function error(reason) {\n    if (!aborted) {\n      aborted = !0;\n      request.abortListeners.delete(abortBlob);\n      var digest = logRecoverableError(request, reason, newTask);\n      emitErrorChunk(request, newTask.id, digest);\n      enqueueFlush(request);\n      reader.cancel(reason).then(error, error);\n    }\n  }\n  function abortBlob(reason) {\n    if (!aborted) {\n      aborted = !0;\n      request.abortListeners.delete(abortBlob);\n      var digest = logRecoverableError(request, reason, newTask);\n      emitErrorChunk(request, newTask.id, digest);\n      enqueueFlush(request);\n      reader.cancel(reason).then(error, error);\n    }\n  }\n  var model = [blob.type],\n    newTask = createTask(request, model, null, !1, request.abortableTasks),\n    reader = blob.stream().getReader(),\n    aborted = !1;\n  request.abortListeners.add(abortBlob);\n  reader.read().then(progress).catch(error);\n  return \"$B\" + newTask.id.toString(16);\n}\nvar modelRoot = !1;\nfunction renderModelDestructive(\n  request,\n  task,\n  parent,\n  parentPropertyName,\n  value\n) {\n  task.model = value;\n  if (value === REACT_ELEMENT_TYPE) return \"$\";\n  if (null === value) return null;\n  if (\"object\" === typeof value) {\n    switch (value.$$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var elementReference = null,\n          writtenObjects = request.writtenObjects;\n        if (null === task.keyPath && !task.implicitSlot) {\n          var existingReference = writtenObjects.get(value);\n          if (void 0 !== existingReference)\n            if (modelRoot === value) modelRoot = null;\n            else return existingReference;\n          else\n            -1 === parentPropertyName.indexOf(\":\") &&\n              ((parent = writtenObjects.get(parent)),\n              void 0 !== parent &&\n                ((elementReference = parent + \":\" + parentPropertyName),\n                writtenObjects.set(value, elementReference)));\n        }\n        parentPropertyName = value.props;\n        parent = parentPropertyName.ref;\n        request = renderElement(\n          request,\n          task,\n          value.type,\n          value.key,\n          void 0 !== parent ? parent : null,\n          parentPropertyName\n        );\n        \"object\" === typeof request &&\n          null !== request &&\n          null !== elementReference &&\n          (writtenObjects.has(request) ||\n            writtenObjects.set(request, elementReference));\n        return request;\n      case REACT_LAZY_TYPE:\n        task.thenableState = null;\n        parentPropertyName = value._init;\n        value = parentPropertyName(value._payload);\n        if (12 === request.status) throw null;\n        return renderModelDestructive(request, task, emptyRoot, \"\", value);\n      case REACT_LEGACY_ELEMENT_TYPE:\n        throw Error(\n          'A React Element from an older version of React was rendered. This is not supported. It can happen if:\\n- Multiple copies of the \"react\" package is used.\\n- A library pre-bundled an old copy of \"react\" or \"react/jsx-runtime\".\\n- A compiler tries to \"inline\" JSX instead of using the runtime.'\n        );\n    }\n    if (value.$$typeof === CLIENT_REFERENCE_TAG$1)\n      return serializeClientReference(\n        request,\n        parent,\n        parentPropertyName,\n        value\n      );\n    if (\n      void 0 !== request.temporaryReferences &&\n      ((elementReference = request.temporaryReferences.get(value)),\n      void 0 !== elementReference)\n    )\n      return \"$T\" + elementReference;\n    elementReference = request.writtenObjects;\n    writtenObjects = elementReference.get(value);\n    if (\"function\" === typeof value.then) {\n      if (void 0 !== writtenObjects) {\n        if (null !== task.keyPath || task.implicitSlot)\n          return \"$@\" + serializeThenable(request, task, value).toString(16);\n        if (modelRoot === value) modelRoot = null;\n        else return writtenObjects;\n      }\n      request = \"$@\" + serializeThenable(request, task, value).toString(16);\n      elementReference.set(value, request);\n      return request;\n    }\n    if (void 0 !== writtenObjects)\n      if (modelRoot === value) modelRoot = null;\n      else return writtenObjects;\n    else if (\n      -1 === parentPropertyName.indexOf(\":\") &&\n      ((writtenObjects = elementReference.get(parent)),\n      void 0 !== writtenObjects)\n    ) {\n      existingReference = parentPropertyName;\n      if (isArrayImpl(parent) && parent[0] === REACT_ELEMENT_TYPE)\n        switch (parentPropertyName) {\n          case \"1\":\n            existingReference = \"type\";\n            break;\n          case \"2\":\n            existingReference = \"key\";\n            break;\n          case \"3\":\n            existingReference = \"props\";\n            break;\n          case \"4\":\n            existingReference = \"_owner\";\n        }\n      elementReference.set(value, writtenObjects + \":\" + existingReference);\n    }\n    if (isArrayImpl(value)) return renderFragment(request, task, value);\n    if (value instanceof Map)\n      return (\n        (value = Array.from(value)),\n        \"$Q\" + outlineModel(request, value).toString(16)\n      );\n    if (value instanceof Set)\n      return (\n        (value = Array.from(value)),\n        \"$W\" + outlineModel(request, value).toString(16)\n      );\n    if (\"function\" === typeof FormData && value instanceof FormData)\n      return (\n        (value = Array.from(value.entries())),\n        \"$K\" + outlineModel(request, value).toString(16)\n      );\n    if (value instanceof Error) return \"$Z\";\n    if (value instanceof ArrayBuffer)\n      return serializeTypedArray(request, \"A\", new Uint8Array(value));\n    if (value instanceof Int8Array)\n      return serializeTypedArray(request, \"O\", value);\n    if (value instanceof Uint8Array)\n      return serializeTypedArray(request, \"o\", value);\n    if (value instanceof Uint8ClampedArray)\n      return serializeTypedArray(request, \"U\", value);\n    if (value instanceof Int16Array)\n      return serializeTypedArray(request, \"S\", value);\n    if (value instanceof Uint16Array)\n      return serializeTypedArray(request, \"s\", value);\n    if (value instanceof Int32Array)\n      return serializeTypedArray(request, \"L\", value);\n    if (value instanceof Uint32Array)\n      return serializeTypedArray(request, \"l\", value);\n    if (value instanceof Float32Array)\n      return serializeTypedArray(request, \"G\", value);\n    if (value instanceof Float64Array)\n      return serializeTypedArray(request, \"g\", value);\n    if (value instanceof BigInt64Array)\n      return serializeTypedArray(request, \"M\", value);\n    if (value instanceof BigUint64Array)\n      return serializeTypedArray(request, \"m\", value);\n    if (value instanceof DataView)\n      return serializeTypedArray(request, \"V\", value);\n    if (\"function\" === typeof Blob && value instanceof Blob)\n      return serializeBlob(request, value);\n    if ((elementReference = getIteratorFn(value)))\n      return (\n        (parentPropertyName = elementReference.call(value)),\n        parentPropertyName === value\n          ? \"$i\" +\n            outlineModel(request, Array.from(parentPropertyName)).toString(16)\n          : renderFragment(request, task, Array.from(parentPropertyName))\n      );\n    if (\"function\" === typeof ReadableStream && value instanceof ReadableStream)\n      return serializeReadableStream(request, task, value);\n    elementReference = value[ASYNC_ITERATOR];\n    if (\"function\" === typeof elementReference)\n      return (\n        null !== task.keyPath\n          ? ((request = [\n              REACT_ELEMENT_TYPE,\n              REACT_FRAGMENT_TYPE,\n              task.keyPath,\n              { children: value }\n            ]),\n            (request = task.implicitSlot ? [request] : request))\n          : ((parentPropertyName = elementReference.call(value)),\n            (request = serializeAsyncIterable(\n              request,\n              task,\n              value,\n              parentPropertyName\n            ))),\n        request\n      );\n    if (value instanceof Date) return \"$D\" + value.toJSON();\n    request = getPrototypeOf(value);\n    if (\n      request !== ObjectPrototype &&\n      (null === request || null !== getPrototypeOf(request))\n    )\n      throw Error(\n        \"Only plain objects, and a few built-ins, can be passed to Client Components from Server Components. Classes or null prototypes are not supported.\" +\n          describeObjectForErrorMessage(parent, parentPropertyName)\n      );\n    return value;\n  }\n  if (\"string\" === typeof value) {\n    if (\n      \"Z\" === value[value.length - 1] &&\n      parent[parentPropertyName] instanceof Date\n    )\n      return \"$D\" + value;\n    if (1024 <= value.length && null !== byteLengthOfChunk)\n      return (\n        request.pendingChunks++,\n        (task = request.nextChunkId++),\n        emitTextChunk(request, task, value),\n        serializeByValueID(task)\n      );\n    request = \"$\" === value[0] ? \"$\" + value : value;\n    return request;\n  }\n  if (\"boolean\" === typeof value) return value;\n  if (\"number\" === typeof value)\n    return Number.isFinite(value)\n      ? 0 === value && -Infinity === 1 / value\n        ? \"$-0\"\n        : value\n      : Infinity === value\n        ? \"$Infinity\"\n        : -Infinity === value\n          ? \"$-Infinity\"\n          : \"$NaN\";\n  if (\"undefined\" === typeof value) return \"$undefined\";\n  if (\"function\" === typeof value) {\n    if (value.$$typeof === CLIENT_REFERENCE_TAG$1)\n      return serializeClientReference(\n        request,\n        parent,\n        parentPropertyName,\n        value\n      );\n    if (value.$$typeof === SERVER_REFERENCE_TAG)\n      return (\n        (task = request.writtenServerReferences),\n        (parentPropertyName = task.get(value)),\n        void 0 !== parentPropertyName\n          ? (request = \"$F\" + parentPropertyName.toString(16))\n          : ((parentPropertyName = value.$$bound),\n            (parentPropertyName =\n              null === parentPropertyName\n                ? null\n                : Promise.resolve(parentPropertyName)),\n            (request = outlineModel(request, {\n              id: value.$$id,\n              bound: parentPropertyName\n            })),\n            task.set(value, request),\n            (request = \"$F\" + request.toString(16))),\n        request\n      );\n    if (\n      void 0 !== request.temporaryReferences &&\n      ((request = request.temporaryReferences.get(value)), void 0 !== request)\n    )\n      return \"$T\" + request;\n    if (value.$$typeof === TEMPORARY_REFERENCE_TAG)\n      throw Error(\n        \"Could not reference an opaque temporary reference. This is likely due to misconfiguring the temporaryReferences options on the server.\"\n      );\n    if (/^on[A-Z]/.test(parentPropertyName))\n      throw Error(\n        \"Event handlers cannot be passed to Client Component props.\" +\n          describeObjectForErrorMessage(parent, parentPropertyName) +\n          \"\\nIf you need interactivity, consider converting part of this to a Client Component.\"\n      );\n    throw Error(\n      'Functions cannot be passed directly to Client Components unless you explicitly expose it by marking it with \"use server\". Or maybe you meant to call this function rather than return it.' +\n        describeObjectForErrorMessage(parent, parentPropertyName)\n    );\n  }\n  if (\"symbol\" === typeof value) {\n    task = request.writtenSymbols;\n    elementReference = task.get(value);\n    if (void 0 !== elementReference)\n      return serializeByValueID(elementReference);\n    elementReference = value.description;\n    if (Symbol.for(elementReference) !== value)\n      throw Error(\n        \"Only global symbols received from Symbol.for(...) can be passed to Client Components. The symbol Symbol.for(\" +\n          (value.description + \") cannot be found among global symbols.\") +\n          describeObjectForErrorMessage(parent, parentPropertyName)\n      );\n    request.pendingChunks++;\n    parentPropertyName = request.nextChunkId++;\n    parent = encodeReferenceChunk(\n      request,\n      parentPropertyName,\n      \"$S\" + elementReference\n    );\n    request.completedImportChunks.push(parent);\n    task.set(value, parentPropertyName);\n    return serializeByValueID(parentPropertyName);\n  }\n  if (\"bigint\" === typeof value) return \"$n\" + value.toString(10);\n  throw Error(\n    \"Type \" +\n      typeof value +\n      \" is not supported in Client Component props.\" +\n      describeObjectForErrorMessage(parent, parentPropertyName)\n  );\n}\nfunction logRecoverableError(request, error) {\n  var prevRequest = currentRequest;\n  currentRequest = null;\n  try {\n    var onError = request.onError;\n    var errorDigest = supportsRequestStorage\n      ? requestStorage.run(void 0, onError, error)\n      : onError(error);\n  } finally {\n    currentRequest = prevRequest;\n  }\n  if (null != errorDigest && \"string\" !== typeof errorDigest)\n    throw Error(\n      'onError returned something with a type other than \"string\". onError should return a string and may return null or undefined but must not return anything else. It received something of type \"' +\n        typeof errorDigest +\n        '\" instead'\n    );\n  return errorDigest || \"\";\n}\nfunction fatalError(request, error) {\n  var onFatalError = request.onFatalError;\n  onFatalError(error);\n  null !== request.destination\n    ? ((request.status = 14), closeWithError(request.destination, error))\n    : ((request.status = 13), (request.fatalError = error));\n}\nfunction emitErrorChunk(request, id, digest) {\n  digest = { digest: digest };\n  id = id.toString(16) + \":E\" + stringify(digest) + \"\\n\";\n  id = stringToChunk(id);\n  request.completedErrorChunks.push(id);\n}\nfunction emitModelChunk(request, id, json) {\n  id = id.toString(16) + \":\" + json + \"\\n\";\n  id = stringToChunk(id);\n  request.completedRegularChunks.push(id);\n}\nfunction emitTypedArrayChunk(request, id, tag, typedArray) {\n  request.pendingChunks++;\n  var buffer = new Uint8Array(\n    typedArray.buffer,\n    typedArray.byteOffset,\n    typedArray.byteLength\n  );\n  typedArray = 2048 < typedArray.byteLength ? buffer.slice() : buffer;\n  buffer = typedArray.byteLength;\n  id = id.toString(16) + \":\" + tag + buffer.toString(16) + \",\";\n  id = stringToChunk(id);\n  request.completedRegularChunks.push(id, typedArray);\n}\nfunction emitTextChunk(request, id, text) {\n  if (null === byteLengthOfChunk)\n    throw Error(\n      \"Existence of byteLengthOfChunk should have already been checked. This is a bug in React.\"\n    );\n  request.pendingChunks++;\n  text = stringToChunk(text);\n  var binaryLength = text.byteLength;\n  id = id.toString(16) + \":T\" + binaryLength.toString(16) + \",\";\n  id = stringToChunk(id);\n  request.completedRegularChunks.push(id, text);\n}\nfunction emitChunk(request, task, value) {\n  var id = task.id;\n  \"string\" === typeof value && null !== byteLengthOfChunk\n    ? emitTextChunk(request, id, value)\n    : value instanceof ArrayBuffer\n      ? emitTypedArrayChunk(request, id, \"A\", new Uint8Array(value))\n      : value instanceof Int8Array\n        ? emitTypedArrayChunk(request, id, \"O\", value)\n        : value instanceof Uint8Array\n          ? emitTypedArrayChunk(request, id, \"o\", value)\n          : value instanceof Uint8ClampedArray\n            ? emitTypedArrayChunk(request, id, \"U\", value)\n            : value instanceof Int16Array\n              ? emitTypedArrayChunk(request, id, \"S\", value)\n              : value instanceof Uint16Array\n                ? emitTypedArrayChunk(request, id, \"s\", value)\n                : value instanceof Int32Array\n                  ? emitTypedArrayChunk(request, id, \"L\", value)\n                  : value instanceof Uint32Array\n                    ? emitTypedArrayChunk(request, id, \"l\", value)\n                    : value instanceof Float32Array\n                      ? emitTypedArrayChunk(request, id, \"G\", value)\n                      : value instanceof Float64Array\n                        ? emitTypedArrayChunk(request, id, \"g\", value)\n                        : value instanceof BigInt64Array\n                          ? emitTypedArrayChunk(request, id, \"M\", value)\n                          : value instanceof BigUint64Array\n                            ? emitTypedArrayChunk(request, id, \"m\", value)\n                            : value instanceof DataView\n                              ? emitTypedArrayChunk(request, id, \"V\", value)\n                              : ((value = stringify(value, task.toJSON)),\n                                emitModelChunk(request, task.id, value));\n}\nvar emptyRoot = {};\nfunction retryTask(request, task) {\n  if (0 === task.status) {\n    task.status = 5;\n    try {\n      modelRoot = task.model;\n      var resolvedModel = renderModelDestructive(\n        request,\n        task,\n        emptyRoot,\n        \"\",\n        task.model\n      );\n      modelRoot = resolvedModel;\n      task.keyPath = null;\n      task.implicitSlot = !1;\n      if (\"object\" === typeof resolvedModel && null !== resolvedModel)\n        request.writtenObjects.set(resolvedModel, serializeByValueID(task.id)),\n          emitChunk(request, task, resolvedModel);\n      else {\n        var json = stringify(resolvedModel);\n        emitModelChunk(request, task.id, json);\n      }\n      request.abortableTasks.delete(task);\n      task.status = 1;\n    } catch (thrownValue) {\n      if (12 === request.status) {\n        request.abortableTasks.delete(task);\n        task.status = 3;\n        var model = stringify(serializeByValueID(request.fatalError));\n        emitModelChunk(request, task.id, model);\n      } else {\n        var x =\n          thrownValue === SuspenseException\n            ? getSuspendedThenable()\n            : thrownValue;\n        if (\n          \"object\" === typeof x &&\n          null !== x &&\n          \"function\" === typeof x.then\n        ) {\n          task.status = 0;\n          task.thenableState = getThenableStateAfterSuspending();\n          var ping = task.ping;\n          x.then(ping, ping);\n        } else {\n          request.abortableTasks.delete(task);\n          task.status = 4;\n          var digest = logRecoverableError(request, x, task);\n          emitErrorChunk(request, task.id, digest);\n        }\n      }\n    } finally {\n    }\n  }\n}\nfunction performWork(request) {\n  var prevDispatcher = ReactSharedInternalsServer.H;\n  ReactSharedInternalsServer.H = HooksDispatcher;\n  var prevRequest = currentRequest;\n  currentRequest$1 = currentRequest = request;\n  var hadAbortableTasks = 0 < request.abortableTasks.size;\n  try {\n    var pingedTasks = request.pingedTasks;\n    request.pingedTasks = [];\n    for (var i = 0; i < pingedTasks.length; i++)\n      retryTask(request, pingedTasks[i]);\n    null !== request.destination &&\n      flushCompletedChunks(request, request.destination);\n    if (hadAbortableTasks && 0 === request.abortableTasks.size) {\n      var onAllReady = request.onAllReady;\n      onAllReady();\n    }\n  } catch (error) {\n    logRecoverableError(request, error, null), fatalError(request, error);\n  } finally {\n    (ReactSharedInternalsServer.H = prevDispatcher),\n      (currentRequest$1 = null),\n      (currentRequest = prevRequest);\n  }\n}\nfunction flushCompletedChunks(request, destination) {\n  currentView = new Uint8Array(2048);\n  writtenBytes = 0;\n  try {\n    for (\n      var importsChunks = request.completedImportChunks, i = 0;\n      i < importsChunks.length;\n      i++\n    )\n      request.pendingChunks--,\n        writeChunkAndReturn(destination, importsChunks[i]);\n    importsChunks.splice(0, i);\n    var hintChunks = request.completedHintChunks;\n    for (i = 0; i < hintChunks.length; i++)\n      writeChunkAndReturn(destination, hintChunks[i]);\n    hintChunks.splice(0, i);\n    var regularChunks = request.completedRegularChunks;\n    for (i = 0; i < regularChunks.length; i++)\n      request.pendingChunks--,\n        writeChunkAndReturn(destination, regularChunks[i]);\n    regularChunks.splice(0, i);\n    var errorChunks = request.completedErrorChunks;\n    for (i = 0; i < errorChunks.length; i++)\n      request.pendingChunks--, writeChunkAndReturn(destination, errorChunks[i]);\n    errorChunks.splice(0, i);\n  } finally {\n    (request.flushScheduled = !1),\n      currentView &&\n        0 < writtenBytes &&\n        (destination.enqueue(\n          new Uint8Array(currentView.buffer, 0, writtenBytes)\n        ),\n        (currentView = null),\n        (writtenBytes = 0));\n  }\n  0 === request.pendingChunks &&\n    ((request.status = 14), destination.close(), (request.destination = null));\n}\nfunction startWork(request) {\n  request.flushScheduled = null !== request.destination;\n  supportsRequestStorage\n    ? scheduleMicrotask(function () {\n        requestStorage.run(request, performWork, request);\n      })\n    : scheduleMicrotask(function () {\n        return performWork(request);\n      });\n  setTimeoutOrImmediate(function () {\n    10 === request.status && (request.status = 11);\n  }, 0);\n}\nfunction enqueueFlush(request) {\n  !1 === request.flushScheduled &&\n    0 === request.pingedTasks.length &&\n    null !== request.destination &&\n    ((request.flushScheduled = !0),\n    setTimeoutOrImmediate(function () {\n      request.flushScheduled = !1;\n      var destination = request.destination;\n      destination && flushCompletedChunks(request, destination);\n    }, 0));\n}\nfunction abort(request, reason) {\n  try {\n    11 >= request.status && (request.status = 12);\n    var abortableTasks = request.abortableTasks;\n    if (0 < abortableTasks.size) {\n      var error =\n          void 0 === reason\n            ? Error(\"The render was aborted by the server without a reason.\")\n            : \"object\" === typeof reason &&\n                null !== reason &&\n                \"function\" === typeof reason.then\n              ? Error(\"The render was aborted by the server with a promise.\")\n              : reason,\n        digest = logRecoverableError(request, error, null),\n        errorId = request.nextChunkId++;\n      request.fatalError = errorId;\n      request.pendingChunks++;\n      emitErrorChunk(request, errorId, digest, error);\n      abortableTasks.forEach(function (task) {\n        if (5 !== task.status) {\n          task.status = 3;\n          var ref = serializeByValueID(errorId);\n          task = encodeReferenceChunk(request, task.id, ref);\n          request.completedErrorChunks.push(task);\n        }\n      });\n      abortableTasks.clear();\n      var onAllReady = request.onAllReady;\n      onAllReady();\n    }\n    var abortListeners = request.abortListeners;\n    if (0 < abortListeners.size) {\n      var error$23 =\n        void 0 === reason\n          ? Error(\"The render was aborted by the server without a reason.\")\n          : \"object\" === typeof reason &&\n              null !== reason &&\n              \"function\" === typeof reason.then\n            ? Error(\"The render was aborted by the server with a promise.\")\n            : reason;\n      abortListeners.forEach(function (callback) {\n        return callback(error$23);\n      });\n      abortListeners.clear();\n    }\n    null !== request.destination &&\n      flushCompletedChunks(request, request.destination);\n  } catch (error$24) {\n    logRecoverableError(request, error$24, null), fatalError(request, error$24);\n  }\n}\nfunction resolveServerReference(bundlerConfig, id) {\n  var name = \"\",\n    resolvedModuleData = bundlerConfig[id];\n  if (resolvedModuleData) name = resolvedModuleData.name;\n  else {\n    var idx = id.lastIndexOf(\"#\");\n    -1 !== idx &&\n      ((name = id.slice(idx + 1)),\n      (resolvedModuleData = bundlerConfig[id.slice(0, idx)]));\n    if (!resolvedModuleData)\n      throw Error(\n        'Could not find the module \"' +\n          id +\n          '\" in the React Server Manifest. This is probably a bug in the React Server Components bundler.'\n      );\n  }\n  return resolvedModuleData.async\n    ? [resolvedModuleData.id, resolvedModuleData.chunks, name, 1]\n    : [resolvedModuleData.id, resolvedModuleData.chunks, name];\n}\nvar chunkCache = new Map();\nfunction requireAsyncModule(id) {\n  var promise = globalThis.__next_require__(id);\n  if (\"function\" !== typeof promise.then || \"fulfilled\" === promise.status)\n    return null;\n  promise.then(\n    function (value) {\n      promise.status = \"fulfilled\";\n      promise.value = value;\n    },\n    function (reason) {\n      promise.status = \"rejected\";\n      promise.reason = reason;\n    }\n  );\n  return promise;\n}\nfunction ignoreReject() {}\nfunction preloadModule(metadata) {\n  for (var chunks = metadata[1], promises = [], i = 0; i < chunks.length; ) {\n    var chunkId = chunks[i++];\n    chunks[i++];\n    var entry = chunkCache.get(chunkId);\n    if (void 0 === entry) {\n      entry = __webpack_chunk_load__(chunkId);\n      promises.push(entry);\n      var resolve = chunkCache.set.bind(chunkCache, chunkId, null);\n      entry.then(resolve, ignoreReject);\n      chunkCache.set(chunkId, entry);\n    } else null !== entry && promises.push(entry);\n  }\n  return 4 === metadata.length\n    ? 0 === promises.length\n      ? requireAsyncModule(metadata[0])\n      : Promise.all(promises).then(function () {\n          return requireAsyncModule(metadata[0]);\n        })\n    : 0 < promises.length\n      ? Promise.all(promises)\n      : null;\n}\nfunction requireModule(metadata) {\n  var moduleExports = globalThis.__next_require__(metadata[0]);\n  if (4 === metadata.length && \"function\" === typeof moduleExports.then)\n    if (\"fulfilled\" === moduleExports.status)\n      moduleExports = moduleExports.value;\n    else throw moduleExports.reason;\n  return \"*\" === metadata[2]\n    ? moduleExports\n    : \"\" === metadata[2]\n      ? moduleExports.__esModule\n        ? moduleExports.default\n        : moduleExports\n      : moduleExports[metadata[2]];\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction Chunk(status, value, reason, response) {\n  this.status = status;\n  this.value = value;\n  this.reason = reason;\n  this._response = response;\n}\nChunk.prototype = Object.create(Promise.prototype);\nChunk.prototype.then = function (resolve, reject) {\n  switch (this.status) {\n    case \"resolved_model\":\n      initializeModelChunk(this);\n  }\n  switch (this.status) {\n    case \"fulfilled\":\n      resolve(this.value);\n      break;\n    case \"pending\":\n    case \"blocked\":\n    case \"cyclic\":\n      resolve &&\n        (null === this.value && (this.value = []), this.value.push(resolve));\n      reject &&\n        (null === this.reason && (this.reason = []), this.reason.push(reject));\n      break;\n    default:\n      reject(this.reason);\n  }\n};\nfunction createPendingChunk(response) {\n  return new Chunk(\"pending\", null, null, response);\n}\nfunction wakeChunk(listeners, value) {\n  for (var i = 0; i < listeners.length; i++) (0, listeners[i])(value);\n}\nfunction triggerErrorOnChunk(chunk, error) {\n  if (\"pending\" !== chunk.status && \"blocked\" !== chunk.status)\n    chunk.reason.error(error);\n  else {\n    var listeners = chunk.reason;\n    chunk.status = \"rejected\";\n    chunk.reason = error;\n    null !== listeners && wakeChunk(listeners, error);\n  }\n}\nfunction resolveModelChunk(chunk, value, id) {\n  if (\"pending\" !== chunk.status)\n    (chunk = chunk.reason),\n      \"C\" === value[0]\n        ? chunk.close(\"C\" === value ? '\"$undefined\"' : value.slice(1))\n        : chunk.enqueueModel(value);\n  else {\n    var resolveListeners = chunk.value,\n      rejectListeners = chunk.reason;\n    chunk.status = \"resolved_model\";\n    chunk.value = value;\n    chunk.reason = id;\n    if (null !== resolveListeners)\n      switch ((initializeModelChunk(chunk), chunk.status)) {\n        case \"fulfilled\":\n          wakeChunk(resolveListeners, chunk.value);\n          break;\n        case \"pending\":\n        case \"blocked\":\n        case \"cyclic\":\n          if (chunk.value)\n            for (value = 0; value < resolveListeners.length; value++)\n              chunk.value.push(resolveListeners[value]);\n          else chunk.value = resolveListeners;\n          if (chunk.reason) {\n            if (rejectListeners)\n              for (value = 0; value < rejectListeners.length; value++)\n                chunk.reason.push(rejectListeners[value]);\n          } else chunk.reason = rejectListeners;\n          break;\n        case \"rejected\":\n          rejectListeners && wakeChunk(rejectListeners, chunk.reason);\n      }\n  }\n}\nfunction createResolvedIteratorResultChunk(response, value, done) {\n  return new Chunk(\n    \"resolved_model\",\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\",\n    -1,\n    response\n  );\n}\nfunction resolveIteratorResultChunk(chunk, value, done) {\n  resolveModelChunk(\n    chunk,\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\",\n    -1\n  );\n}\nfunction loadServerReference$1(\n  response,\n  id,\n  bound,\n  parentChunk,\n  parentObject,\n  key\n) {\n  var serverReference = resolveServerReference(response._bundlerConfig, id);\n  id = preloadModule(serverReference);\n  if (bound)\n    bound = Promise.all([bound, id]).then(function (_ref) {\n      _ref = _ref[0];\n      var fn = requireModule(serverReference);\n      return fn.bind.apply(fn, [null].concat(_ref));\n    });\n  else if (id)\n    bound = Promise.resolve(id).then(function () {\n      return requireModule(serverReference);\n    });\n  else return requireModule(serverReference);\n  bound.then(\n    createModelResolver(\n      parentChunk,\n      parentObject,\n      key,\n      !1,\n      response,\n      createModel,\n      []\n    ),\n    createModelReject(parentChunk)\n  );\n  return null;\n}\nfunction reviveModel(response, parentObj, parentKey, value, reference) {\n  if (\"string\" === typeof value)\n    return parseModelString(response, parentObj, parentKey, value, reference);\n  if (\"object\" === typeof value && null !== value)\n    if (\n      (void 0 !== reference &&\n        void 0 !== response._temporaryReferences &&\n        response._temporaryReferences.set(value, reference),\n      Array.isArray(value))\n    )\n      for (var i = 0; i < value.length; i++)\n        value[i] = reviveModel(\n          response,\n          value,\n          \"\" + i,\n          value[i],\n          void 0 !== reference ? reference + \":\" + i : void 0\n        );\n    else\n      for (i in value)\n        hasOwnProperty.call(value, i) &&\n          ((parentObj =\n            void 0 !== reference && -1 === i.indexOf(\":\")\n              ? reference + \":\" + i\n              : void 0),\n          (parentObj = reviveModel(response, value, i, value[i], parentObj)),\n          void 0 !== parentObj ? (value[i] = parentObj) : delete value[i]);\n  return value;\n}\nvar initializingChunk = null,\n  initializingChunkBlockedModel = null;\nfunction initializeModelChunk(chunk) {\n  var prevChunk = initializingChunk,\n    prevBlocked = initializingChunkBlockedModel;\n  initializingChunk = chunk;\n  initializingChunkBlockedModel = null;\n  var rootReference = -1 === chunk.reason ? void 0 : chunk.reason.toString(16),\n    resolvedModel = chunk.value;\n  chunk.status = \"cyclic\";\n  chunk.value = null;\n  chunk.reason = null;\n  try {\n    var rawModel = JSON.parse(resolvedModel),\n      value = reviveModel(\n        chunk._response,\n        { \"\": rawModel },\n        \"\",\n        rawModel,\n        rootReference\n      );\n    if (\n      null !== initializingChunkBlockedModel &&\n      0 < initializingChunkBlockedModel.deps\n    )\n      (initializingChunkBlockedModel.value = value), (chunk.status = \"blocked\");\n    else {\n      var resolveListeners = chunk.value;\n      chunk.status = \"fulfilled\";\n      chunk.value = value;\n      null !== resolveListeners && wakeChunk(resolveListeners, value);\n    }\n  } catch (error) {\n    (chunk.status = \"rejected\"), (chunk.reason = error);\n  } finally {\n    (initializingChunk = prevChunk),\n      (initializingChunkBlockedModel = prevBlocked);\n  }\n}\nfunction reportGlobalError(response, error) {\n  response._closed = !0;\n  response._closedReason = error;\n  response._chunks.forEach(function (chunk) {\n    \"pending\" === chunk.status && triggerErrorOnChunk(chunk, error);\n  });\n}\nfunction getChunk(response, id) {\n  var chunks = response._chunks,\n    chunk = chunks.get(id);\n  chunk ||\n    ((chunk = response._formData.get(response._prefix + id)),\n    (chunk =\n      null != chunk\n        ? new Chunk(\"resolved_model\", chunk, id, response)\n        : response._closed\n          ? new Chunk(\"rejected\", null, response._closedReason, response)\n          : createPendingChunk(response)),\n    chunks.set(id, chunk));\n  return chunk;\n}\nfunction createModelResolver(\n  chunk,\n  parentObject,\n  key,\n  cyclic,\n  response,\n  map,\n  path\n) {\n  if (initializingChunkBlockedModel) {\n    var blocked = initializingChunkBlockedModel;\n    cyclic || blocked.deps++;\n  } else\n    blocked = initializingChunkBlockedModel = {\n      deps: cyclic ? 0 : 1,\n      value: null\n    };\n  return function (value) {\n    for (var i = 1; i < path.length; i++) value = value[path[i]];\n    parentObject[key] = map(response, value);\n    \"\" === key && null === blocked.value && (blocked.value = parentObject[key]);\n    blocked.deps--;\n    0 === blocked.deps &&\n      \"blocked\" === chunk.status &&\n      ((value = chunk.value),\n      (chunk.status = \"fulfilled\"),\n      (chunk.value = blocked.value),\n      null !== value && wakeChunk(value, blocked.value));\n  };\n}\nfunction createModelReject(chunk) {\n  return function (error) {\n    return triggerErrorOnChunk(chunk, error);\n  };\n}\nfunction getOutlinedModel(response, reference, parentObject, key, map) {\n  reference = reference.split(\":\");\n  var id = parseInt(reference[0], 16);\n  id = getChunk(response, id);\n  switch (id.status) {\n    case \"resolved_model\":\n      initializeModelChunk(id);\n  }\n  switch (id.status) {\n    case \"fulfilled\":\n      parentObject = id.value;\n      for (key = 1; key < reference.length; key++)\n        parentObject = parentObject[reference[key]];\n      return map(response, parentObject);\n    case \"pending\":\n    case \"blocked\":\n    case \"cyclic\":\n      var parentChunk = initializingChunk;\n      id.then(\n        createModelResolver(\n          parentChunk,\n          parentObject,\n          key,\n          \"cyclic\" === id.status,\n          response,\n          map,\n          reference\n        ),\n        createModelReject(parentChunk)\n      );\n      return null;\n    default:\n      throw id.reason;\n  }\n}\nfunction createMap(response, model) {\n  return new Map(model);\n}\nfunction createSet(response, model) {\n  return new Set(model);\n}\nfunction extractIterator(response, model) {\n  return model[Symbol.iterator]();\n}\nfunction createModel(response, model) {\n  return model;\n}\nfunction parseTypedArray(\n  response,\n  reference,\n  constructor,\n  bytesPerElement,\n  parentObject,\n  parentKey\n) {\n  reference = parseInt(reference.slice(2), 16);\n  reference = response._formData.get(response._prefix + reference);\n  reference =\n    constructor === ArrayBuffer\n      ? reference.arrayBuffer()\n      : reference.arrayBuffer().then(function (buffer) {\n          return new constructor(buffer);\n        });\n  bytesPerElement = initializingChunk;\n  reference.then(\n    createModelResolver(\n      bytesPerElement,\n      parentObject,\n      parentKey,\n      !1,\n      response,\n      createModel,\n      []\n    ),\n    createModelReject(bytesPerElement)\n  );\n  return null;\n}\nfunction resolveStream(response, id, stream, controller) {\n  var chunks = response._chunks;\n  stream = new Chunk(\"fulfilled\", stream, controller, response);\n  chunks.set(id, stream);\n  response = response._formData.getAll(response._prefix + id);\n  for (id = 0; id < response.length; id++)\n    (chunks = response[id]),\n      \"C\" === chunks[0]\n        ? controller.close(\"C\" === chunks ? '\"$undefined\"' : chunks.slice(1))\n        : controller.enqueueModel(chunks);\n}\nfunction parseReadableStream(response, reference, type) {\n  reference = parseInt(reference.slice(2), 16);\n  var controller = null;\n  type = new ReadableStream({\n    type: type,\n    start: function (c) {\n      controller = c;\n    }\n  });\n  var previousBlockedChunk = null;\n  resolveStream(response, reference, type, {\n    enqueueModel: function (json) {\n      if (null === previousBlockedChunk) {\n        var chunk = new Chunk(\"resolved_model\", json, -1, response);\n        initializeModelChunk(chunk);\n        \"fulfilled\" === chunk.status\n          ? controller.enqueue(chunk.value)\n          : (chunk.then(\n              function (v) {\n                return controller.enqueue(v);\n              },\n              function (e) {\n                return controller.error(e);\n              }\n            ),\n            (previousBlockedChunk = chunk));\n      } else {\n        chunk = previousBlockedChunk;\n        var chunk$27 = createPendingChunk(response);\n        chunk$27.then(\n          function (v) {\n            return controller.enqueue(v);\n          },\n          function (e) {\n            return controller.error(e);\n          }\n        );\n        previousBlockedChunk = chunk$27;\n        chunk.then(function () {\n          previousBlockedChunk === chunk$27 && (previousBlockedChunk = null);\n          resolveModelChunk(chunk$27, json, -1);\n        });\n      }\n    },\n    close: function () {\n      if (null === previousBlockedChunk) controller.close();\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.close();\n        });\n      }\n    },\n    error: function (error) {\n      if (null === previousBlockedChunk) controller.error(error);\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.error(error);\n        });\n      }\n    }\n  });\n  return type;\n}\nfunction asyncIterator() {\n  return this;\n}\nfunction createIterator(next) {\n  next = { next: next };\n  next[ASYNC_ITERATOR] = asyncIterator;\n  return next;\n}\nfunction parseAsyncIterable(response, reference, iterator) {\n  reference = parseInt(reference.slice(2), 16);\n  var buffer = [],\n    closed = !1,\n    nextWriteIndex = 0,\n    $jscomp$compprop2 = {};\n  $jscomp$compprop2 =\n    (($jscomp$compprop2[ASYNC_ITERATOR] = function () {\n      var nextReadIndex = 0;\n      return createIterator(function (arg) {\n        if (void 0 !== arg)\n          throw Error(\n            \"Values cannot be passed to next() of AsyncIterables passed to Client Components.\"\n          );\n        if (nextReadIndex === buffer.length) {\n          if (closed)\n            return new Chunk(\n              \"fulfilled\",\n              { done: !0, value: void 0 },\n              null,\n              response\n            );\n          buffer[nextReadIndex] = createPendingChunk(response);\n        }\n        return buffer[nextReadIndex++];\n      });\n    }),\n    $jscomp$compprop2);\n  iterator = iterator ? $jscomp$compprop2[ASYNC_ITERATOR]() : $jscomp$compprop2;\n  resolveStream(response, reference, iterator, {\n    enqueueModel: function (value) {\n      nextWriteIndex === buffer.length\n        ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n            response,\n            value,\n            !1\n          ))\n        : resolveIteratorResultChunk(buffer[nextWriteIndex], value, !1);\n      nextWriteIndex++;\n    },\n    close: function (value) {\n      closed = !0;\n      nextWriteIndex === buffer.length\n        ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n            response,\n            value,\n            !0\n          ))\n        : resolveIteratorResultChunk(buffer[nextWriteIndex], value, !0);\n      for (nextWriteIndex++; nextWriteIndex < buffer.length; )\n        resolveIteratorResultChunk(\n          buffer[nextWriteIndex++],\n          '\"$undefined\"',\n          !0\n        );\n    },\n    error: function (error) {\n      closed = !0;\n      for (\n        nextWriteIndex === buffer.length &&\n        (buffer[nextWriteIndex] = createPendingChunk(response));\n        nextWriteIndex < buffer.length;\n\n      )\n        triggerErrorOnChunk(buffer[nextWriteIndex++], error);\n    }\n  });\n  return iterator;\n}\nfunction parseModelString(response, obj, key, value, reference) {\n  if (\"$\" === value[0]) {\n    switch (value[1]) {\n      case \"$\":\n        return value.slice(1);\n      case \"@\":\n        return (obj = parseInt(value.slice(2), 16)), getChunk(response, obj);\n      case \"F\":\n        return (\n          (value = value.slice(2)),\n          (value = getOutlinedModel(response, value, obj, key, createModel)),\n          loadServerReference$1(\n            response,\n            value.id,\n            value.bound,\n            initializingChunk,\n            obj,\n            key\n          )\n        );\n      case \"T\":\n        if (void 0 === reference || void 0 === response._temporaryReferences)\n          throw Error(\n            \"Could not reference an opaque temporary reference. This is likely due to misconfiguring the temporaryReferences options on the server.\"\n          );\n        return createTemporaryReference(\n          response._temporaryReferences,\n          reference\n        );\n      case \"Q\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, obj, key, createMap)\n        );\n      case \"W\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, obj, key, createSet)\n        );\n      case \"K\":\n        obj = value.slice(2);\n        var formPrefix = response._prefix + obj + \"_\",\n          data = new FormData();\n        response._formData.forEach(function (entry, entryKey) {\n          entryKey.startsWith(formPrefix) &&\n            data.append(entryKey.slice(formPrefix.length), entry);\n        });\n        return data;\n      case \"i\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, obj, key, extractIterator)\n        );\n      case \"I\":\n        return Infinity;\n      case \"-\":\n        return \"$-0\" === value ? -0 : -Infinity;\n      case \"N\":\n        return NaN;\n      case \"u\":\n        return;\n      case \"D\":\n        return new Date(Date.parse(value.slice(2)));\n      case \"n\":\n        return BigInt(value.slice(2));\n    }\n    switch (value[1]) {\n      case \"A\":\n        return parseTypedArray(response, value, ArrayBuffer, 1, obj, key);\n      case \"O\":\n        return parseTypedArray(response, value, Int8Array, 1, obj, key);\n      case \"o\":\n        return parseTypedArray(response, value, Uint8Array, 1, obj, key);\n      case \"U\":\n        return parseTypedArray(response, value, Uint8ClampedArray, 1, obj, key);\n      case \"S\":\n        return parseTypedArray(response, value, Int16Array, 2, obj, key);\n      case \"s\":\n        return parseTypedArray(response, value, Uint16Array, 2, obj, key);\n      case \"L\":\n        return parseTypedArray(response, value, Int32Array, 4, obj, key);\n      case \"l\":\n        return parseTypedArray(response, value, Uint32Array, 4, obj, key);\n      case \"G\":\n        return parseTypedArray(response, value, Float32Array, 4, obj, key);\n      case \"g\":\n        return parseTypedArray(response, value, Float64Array, 8, obj, key);\n      case \"M\":\n        return parseTypedArray(response, value, BigInt64Array, 8, obj, key);\n      case \"m\":\n        return parseTypedArray(response, value, BigUint64Array, 8, obj, key);\n      case \"V\":\n        return parseTypedArray(response, value, DataView, 1, obj, key);\n      case \"B\":\n        return (\n          (obj = parseInt(value.slice(2), 16)),\n          response._formData.get(response._prefix + obj)\n        );\n    }\n    switch (value[1]) {\n      case \"R\":\n        return parseReadableStream(response, value, void 0);\n      case \"r\":\n        return parseReadableStream(response, value, \"bytes\");\n      case \"X\":\n        return parseAsyncIterable(response, value, !1);\n      case \"x\":\n        return parseAsyncIterable(response, value, !0);\n    }\n    value = value.slice(1);\n    return getOutlinedModel(response, value, obj, key, createModel);\n  }\n  return value;\n}\nfunction createResponse(bundlerConfig, formFieldPrefix, temporaryReferences) {\n  var backingFormData =\n      3 < arguments.length && void 0 !== arguments[3]\n        ? arguments[3]\n        : new FormData(),\n    chunks = new Map();\n  return {\n    _bundlerConfig: bundlerConfig,\n    _prefix: formFieldPrefix,\n    _formData: backingFormData,\n    _chunks: chunks,\n    _closed: !1,\n    _closedReason: null,\n    _temporaryReferences: temporaryReferences\n  };\n}\nfunction close(response) {\n  reportGlobalError(response, Error(\"Connection closed.\"));\n}\nfunction loadServerReference(bundlerConfig, id, bound) {\n  var serverReference = resolveServerReference(bundlerConfig, id);\n  bundlerConfig = preloadModule(serverReference);\n  return bound\n    ? Promise.all([bound, bundlerConfig]).then(function (_ref) {\n        _ref = _ref[0];\n        var fn = requireModule(serverReference);\n        return fn.bind.apply(fn, [null].concat(_ref));\n      })\n    : bundlerConfig\n      ? Promise.resolve(bundlerConfig).then(function () {\n          return requireModule(serverReference);\n        })\n      : Promise.resolve(requireModule(serverReference));\n}\nfunction decodeBoundActionMetaData(body, serverManifest, formFieldPrefix) {\n  body = createResponse(serverManifest, formFieldPrefix, void 0, body);\n  close(body);\n  body = getChunk(body, 0);\n  body.then(function () {});\n  if (\"fulfilled\" !== body.status) throw body.reason;\n  return body.value;\n}\nexports.createClientModuleProxy = function (moduleId) {\n  moduleId = registerClientReferenceImpl({}, moduleId, !1);\n  return new Proxy(moduleId, proxyHandlers$1);\n};\nexports.createTemporaryReferenceSet = function () {\n  return new WeakMap();\n};\nexports.decodeAction = function (body, serverManifest) {\n  var formData = new FormData(),\n    action = null;\n  body.forEach(function (value, key) {\n    key.startsWith(\"$ACTION_\")\n      ? key.startsWith(\"$ACTION_REF_\")\n        ? ((value = \"$ACTION_\" + key.slice(12) + \":\"),\n          (value = decodeBoundActionMetaData(body, serverManifest, value)),\n          (action = loadServerReference(serverManifest, value.id, value.bound)))\n        : key.startsWith(\"$ACTION_ID_\") &&\n          ((value = key.slice(11)),\n          (action = loadServerReference(serverManifest, value, null)))\n      : formData.append(key, value);\n  });\n  return null === action\n    ? null\n    : action.then(function (fn) {\n        return fn.bind(null, formData);\n      });\n};\nexports.decodeFormState = function (actionResult, body, serverManifest) {\n  var keyPath = body.get(\"$ACTION_KEY\");\n  if (\"string\" !== typeof keyPath) return Promise.resolve(null);\n  var metaData = null;\n  body.forEach(function (value, key) {\n    key.startsWith(\"$ACTION_REF_\") &&\n      ((value = \"$ACTION_\" + key.slice(12) + \":\"),\n      (metaData = decodeBoundActionMetaData(body, serverManifest, value)));\n  });\n  if (null === metaData) return Promise.resolve(null);\n  var referenceId = metaData.id;\n  return Promise.resolve(metaData.bound).then(function (bound) {\n    return null === bound\n      ? null\n      : [actionResult, keyPath, referenceId, bound.length - 1];\n  });\n};\nexports.decodeReply = function (body, webpackMap, options) {\n  if (\"string\" === typeof body) {\n    var form = new FormData();\n    form.append(\"0\", body);\n    body = form;\n  }\n  body = createResponse(\n    webpackMap,\n    \"\",\n    options ? options.temporaryReferences : void 0,\n    body\n  );\n  webpackMap = getChunk(body, 0);\n  close(body);\n  return webpackMap;\n};\nexports.registerClientReference = function (\n  proxyImplementation,\n  id,\n  exportName\n) {\n  return registerClientReferenceImpl(\n    proxyImplementation,\n    id + \"#\" + exportName,\n    !1\n  );\n};\nexports.registerServerReference = function (reference, id, exportName) {\n  return Object.defineProperties(reference, {\n    $$typeof: { value: SERVER_REFERENCE_TAG },\n    $$id: {\n      value: null === exportName ? id : id + \"#\" + exportName,\n      configurable: !0\n    },\n    $$bound: { value: null, configurable: !0 },\n    bind: { value: bind, configurable: !0 }\n  });\n};\n\n// This is a patch added by Next.js\nconst setTimeoutOrImmediate =\n  typeof globalThis['set' + 'Immediate'] === 'function' &&\n  // edge runtime sandbox defines a stub for setImmediate\n  // (see 'addStub' in packages/next/src/server/web/sandbox/context.ts)\n  // but it's made non-enumerable, so we can detect it\n  globalThis.propertyIsEnumerable('setImmediate')\n    ? globalThis['set' + 'Immediate']\n    : setTimeout;\n\nexports.renderToReadableStream = function (model, webpackMap, options) {\n  var request = new RequestInstance(\n    20,\n    model,\n    webpackMap,\n    options ? options.onError : void 0,\n    options ? options.identifierPrefix : void 0,\n    options ? options.onPostpone : void 0,\n    options ? options.temporaryReferences : void 0,\n    void 0,\n    void 0,\n    noop,\n    noop\n  );\n  if (options && options.signal) {\n    var signal = options.signal;\n    if (signal.aborted) abort(request, signal.reason);\n    else {\n      var listener = function () {\n        abort(request, signal.reason);\n        signal.removeEventListener(\"abort\", listener);\n      };\n      signal.addEventListener(\"abort\", listener);\n    }\n  }\n  return new ReadableStream(\n    {\n      type: \"bytes\",\n      start: function () {\n        startWork(request);\n      },\n      pull: function (controller) {\n        if (13 === request.status)\n          (request.status = 14), closeWithError(controller, request.fatalError);\n        else if (14 !== request.status && null === request.destination) {\n          request.destination = controller;\n          try {\n            flushCompletedChunks(request, controller);\n          } catch (error) {\n            logRecoverableError(request, error, null),\n              fatalError(request, error);\n          }\n        }\n      },\n      cancel: function (reason) {\n        request.destination = null;\n        abort(request, reason);\n      }\n    },\n    { highWaterMark: 0 }\n  );\n};\n","'use strict';\n\nvar s;\nif (process.env.NODE_ENV === 'production') {\n  s = require('./cjs/react-server-dom-webpack-server.edge.production.js');\n} else {\n  s = require('./cjs/react-server-dom-webpack-server.edge.development.js');\n}\n\nexports.renderToReadableStream = s.renderToReadableStream;\nexports.decodeReply = s.decodeReply;\nexports.decodeAction = s.decodeAction;\nexports.decodeFormState = s.decodeFormState;\nexports.registerServerReference = s.registerServerReference;\nexports.registerClientReference = s.registerClientReference;\nexports.createClientModuleProxy = s.createClientModuleProxy;\nexports.createTemporaryReferenceSet = s.createTemporaryReferenceSet;\n","/**\n * @license React\n * react.react-server.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactSharedInternals = { H: null, A: null };\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nvar isArrayImpl = Array.isArray,\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty,\n  assign = Object.assign;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop, noop)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      formatProdErrorMessage(\n        31,\n        \"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array\n      )\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nfunction createCacheRoot() {\n  return new WeakMap();\n}\nfunction createCacheNode() {\n  return { s: 0, v: void 0, o: null, p: null };\n}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children)) throw Error(formatProdErrorMessage(143));\n    return children;\n  }\n};\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.cache = function (fn) {\n  return function () {\n    var dispatcher = ReactSharedInternals.A;\n    if (!dispatcher) return fn.apply(null, arguments);\n    var fnMap = dispatcher.getCacheForType(createCacheRoot);\n    dispatcher = fnMap.get(fn);\n    void 0 === dispatcher &&\n      ((dispatcher = createCacheNode()), fnMap.set(fn, dispatcher));\n    fnMap = 0;\n    for (var l = arguments.length; fnMap < l; fnMap++) {\n      var arg = arguments[fnMap];\n      if (\n        \"function\" === typeof arg ||\n        (\"object\" === typeof arg && null !== arg)\n      ) {\n        var objectCache = dispatcher.o;\n        null === objectCache && (dispatcher.o = objectCache = new WeakMap());\n        dispatcher = objectCache.get(arg);\n        void 0 === dispatcher &&\n          ((dispatcher = createCacheNode()), objectCache.set(arg, dispatcher));\n      } else\n        (objectCache = dispatcher.p),\n          null === objectCache && (dispatcher.p = objectCache = new Map()),\n          (dispatcher = objectCache.get(arg)),\n          void 0 === dispatcher &&\n            ((dispatcher = createCacheNode()),\n            objectCache.set(arg, dispatcher));\n    }\n    if (1 === dispatcher.s) return dispatcher.v;\n    if (2 === dispatcher.s) throw dispatcher.v;\n    try {\n      var result = fn.apply(null, arguments);\n      fnMap = dispatcher;\n      fnMap.s = 1;\n      return (fnMap.v = result);\n    } catch (error) {\n      throw ((result = dispatcher), (result.s = 2), (result.v = error), error);\n    }\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(formatProdErrorMessage(267, element));\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useDebugValue = function () {};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.version = \"19.0.0-rc-65e06cb7-20241218\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.react-server.production.js');\n} else {\n  module.exports = require('./cjs/react.react-server.development.js');\n}\n","(()=>{\"use strict\";var e={328:e=>{function hash(e){var r=5381,_=e.length;while(_){r=r*33^e.charCodeAt(--_)}return r>>>0}e.exports=hash}};var r={};function __nccwpck_require__(_){var a=r[_];if(a!==undefined){return a.exports}var t=r[_]={exports:{}};var i=true;try{e[_](t,t.exports,__nccwpck_require__);i=false}finally{if(i)delete r[_]}return t.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var _=__nccwpck_require__(328);module.exports=_})();","export const RSC_HEADER = 'RSC' as const\nexport const ACTION_HEADER = 'Next-Action' as const\n// TODO: Instead of sending the full router state, we only need to send the\n// segment path. Saves bytes. Then we could also use this field for segment\n// prefetches, which also need to specify a particular segment.\nexport const NEXT_ROUTER_STATE_TREE_HEADER = 'Next-Router-State-Tree' as const\nexport const NEXT_ROUTER_PREFETCH_HEADER = 'Next-Router-Prefetch' as const\n// This contains the path to the segment being prefetched.\n// TODO: If we change Next-Router-State-Tree to be a segment path, we can use\n// that instead. Then Next-Router-Prefetch and Next-Router-Segment-Prefetch can\n// be merged into a single enum.\nexport const NEXT_ROUTER_SEGMENT_PREFETCH_HEADER =\n  'Next-Router-Segment-Prefetch' as const\nexport const NEXT_HMR_REFRESH_HEADER = 'Next-HMR-Refresh' as const\nexport const NEXT_URL = 'Next-Url' as const\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component' as const\n\nexport const FLIGHT_HEADERS = [\n  RSC_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n] as const\n\nexport const NEXT_RSC_UNION_QUERY = '_rsc' as const\n\nexport const NEXT_ROUTER_STALE_TIME_HEADER = 'x-nextjs-stale-time' as const\nexport const NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed' as const\nexport const NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender' as const\n","const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n","const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n","export const NEXT_QUERY_PARAM_PREFIX = 'nxtP';\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI';\nexport const MATCHED_PATH_HEADER = 'x-matched-path';\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate';\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = 'x-prerender-revalidate-if-generated';\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc';\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments';\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc';\nexport const RSC_SUFFIX = '.rsc';\nexport const ACTION_SUFFIX = '.action';\nexport const NEXT_DATA_SUFFIX = '.json';\nexport const NEXT_META_SUFFIX = '.meta';\nexport const NEXT_BODY_SUFFIX = '.body';\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags';\nexport const NEXT_CACHE_SOFT_TAGS_HEADER = 'x-next-cache-soft-tags';\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags';\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = 'x-next-revalidate-tag-token';\nexport const NEXT_RESUME_HEADER = 'next-resume';\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128;\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256;\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_';\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000;\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe;\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware';\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation';\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages';\nexport const DOT_NEXT_ALIAS = 'private-dot-next';\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir';\nexport const APP_DIR_ALIAS = 'private-next-app-dir';\nexport const RSC_MOD_REF_PROXY_ALIAS = 'next/dist/build/webpack/loaders/next-flight-loader/module-proxy';\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate';\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference';\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper';\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption';\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS = 'private-next-rsc-action-client-wrapper';\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nexport const GSP_NO_RETURNED_VALUE = 'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?';\nexport const GSSP_NO_RETURNED_VALUE = 'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?';\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR = 'The `unstable_revalidate` property is available for general use.\\n' + 'Please use `revalidate` instead.';\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nexport const ESLINT_DEFAULT_DIRS = [\n    'app',\n    'pages',\n    'components',\n    'lib',\n    'src'\n];\nexport const SERVER_RUNTIME = {\n    edge: 'edge',\n    experimentalEdge: 'experimental-edge',\n    nodejs: 'nodejs'\n};\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */ const WEBPACK_LAYERS_NAMES = {\n    /**\n   * The layer for the shared code between the client and server bundles.\n   */ shared: 'shared',\n    /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */ reactServerComponents: 'rsc',\n    /**\n   * Server Side Rendering layer for app (ssr).\n   */ serverSideRendering: 'ssr',\n    /**\n   * The browser client bundle layer for actions.\n   */ actionBrowser: 'action-browser',\n    /**\n   * The layer for the API routes.\n   */ api: 'api',\n    /**\n   * The layer for the middleware code.\n   */ middleware: 'middleware',\n    /**\n   * The layer for the instrumentation hooks.\n   */ instrument: 'instrument',\n    /**\n   * The layer for assets on the edge.\n   */ edgeAsset: 'edge-asset',\n    /**\n   * The browser client bundle layer for App directory.\n   */ appPagesBrowser: 'app-pages-browser'\n};\nconst WEBPACK_LAYERS = {\n    ...WEBPACK_LAYERS_NAMES,\n    GROUP: {\n        builtinReact: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ],\n        serverOnly: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.instrument,\n            WEBPACK_LAYERS_NAMES.middleware\n        ],\n        neutralTarget: [\n            // pages api\n            WEBPACK_LAYERS_NAMES.api\n        ],\n        clientOnly: [\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser\n        ],\n        bundled: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.shared,\n            WEBPACK_LAYERS_NAMES.instrument\n        ],\n        appPages: [\n            // app router pages and layouts\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ]\n    }\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: '__next_edge_ssr_entry__',\n    metadata: '__next_metadata__',\n    metadataRoute: '__next_metadata_route__',\n    metadataImageMeta: '__next_metadata_image_meta__'\n};\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES };\n\n//# sourceMappingURL=constants.js.map","/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */ export const scheduleOnNextTick = (cb)=>{\n    // We use Promise.resolve().then() here so that the operation is scheduled at\n    // the end of the promise job queue, we then add it to the next process tick\n    // to ensure it's evaluated afterwards.\n    //\n    // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n    //\n    Promise.resolve().then(()=>{\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            setTimeout(cb, 0);\n        } else {\n            process.nextTick(cb);\n        }\n    });\n};\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */ export const scheduleImmediate = (cb)=>{\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        setTimeout(cb, 0);\n    } else {\n        setImmediate(cb);\n    }\n};\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */ export function atLeastOneTask() {\n    return new Promise((resolve)=>scheduleImmediate(resolve));\n}\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */ export function waitAtLeastOneReactRenderTask() {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        return new Promise((r)=>setTimeout(r, 0));\n    } else {\n        return new Promise((r)=>setImmediate(r));\n    }\n}\n\n//# sourceMappingURL=scheduler.js.map","import { createAsyncLocalStorage } from './async-local-storage';\nexport const afterTaskAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=after-task-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { afterTaskAsyncStorageInstance as afterTaskAsyncStorage } from './after-task-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { afterTaskAsyncStorage };\n\n//# sourceMappingURL=after-task-async-storage.external.js.map","const sharedAsyncLocalStorageNotAvailableError = new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available');\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nexport function createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nexport function bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nexport function createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__';\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__';\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__';\n\n//# sourceMappingURL=metadata-constants.js.map","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */ // Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react';\nimport { DynamicServerError } from '../../client/components/hooks-server-context';\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { METADATA_BOUNDARY_NAME, VIEWPORT_BOUNDARY_NAME, OUTLET_BOUNDARY_NAME } from '../../lib/metadata/metadata-constants';\nconst hasPostpone = typeof React.unstable_postpone === 'function';\nexport function createDynamicTrackingState(isDebugDynamicAccesses) {\n    return {\n        isDebugDynamicAccesses,\n        dynamicAccesses: [],\n        syncDynamicExpression: undefined,\n        syncDynamicErrorWithStack: null\n    };\n}\nexport function createDynamicValidationState() {\n    return {\n        hasSuspendedDynamic: false,\n        hasDynamicMetadata: false,\n        hasDynamicViewport: false,\n        hasSyncDynamicErrors: false,\n        dynamicErrors: []\n    };\n}\nexport function getFirstDynamicReason(trackingState) {\n    var _trackingState_dynamicAccesses_;\n    return (_trackingState_dynamicAccesses_ = trackingState.dynamicAccesses[0]) == null ? void 0 : _trackingState_dynamicAccesses_.expression;\n}\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */ export function markCurrentScopeAsDynamic(store, workUnitStore, expression) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n    }\n    // If we're forcing dynamic rendering or we're forcing static rendering, we\n    // don't need to do anything here because the entire page is already dynamic\n    // or it's static and it should not throw or postpone here.\n    if (store.forceDynamic || store.forceStatic) return;\n    if (store.dynamicShouldError) {\n        throw new StaticGenBailoutError(`Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`);\n    }\n    if (workUnitStore) {\n        if (workUnitStore.type === 'prerender-ppr') {\n            postponeWithTracking(store.route, expression, workUnitStore.dynamicTracking);\n        } else if (workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n            // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n            const err = new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`);\n            store.dynamicUsageDescription = expression;\n            store.dynamicUsageStack = err.stack;\n            throw err;\n        } else if (process.env.NODE_ENV === 'development' && workUnitStore && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n/**\n * This function communicates that some dynamic path parameter was read. This\n * differs from the more general `trackDynamicDataAccessed` in that it is will\n * not error when `dynamic = \"error\"` is set.\n *\n * @param store The static generation store\n * @param expression The expression that was accessed dynamically\n */ export function trackFallbackParamAccessed(store, expression) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (!prerenderStore || prerenderStore.type !== 'prerender-ppr') return;\n    postponeWithTracking(store.route, expression, prerenderStore.dynamicTracking);\n}\n/**\n * This function is meant to be used when prerendering without dynamicIO or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */ export function throwToInterruptStaticGeneration(expression, store, prerenderStore) {\n    // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n    const err = new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`);\n    prerenderStore.revalidate = 0;\n    store.dynamicUsageDescription = expression;\n    store.dynamicUsageStack = err.stack;\n    throw err;\n}\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */ export function trackDynamicDataInDynamicRender(_store, workUnitStore) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n        if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n        }\n        if (process.env.NODE_ENV === 'development' && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n// Despite it's name we don't actually abort unless we have a controller to call abort on\n// There are times when we let a prerender run long to discover caches where we want the semantics\n// of tracking dynamic access without terminating the prerender early\nfunction abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore) {\n    const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`;\n    const error = createPrerenderInterruptedError(reason);\n    prerenderStore.controller.abort(error);\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function abortOnSynchronousPlatformIOAccess(route, expression, errorWithStack, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        if (dynamicTracking.syncDynamicErrorWithStack === null) {\n            dynamicTracking.syncDynamicExpression = expression;\n            dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n        }\n    }\n    return abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n}\nexport function trackSynchronousPlatformIOAccessInDev(requestStore) {\n    // We don't actually have a controller to abort but we do the semantic equivalent by\n    // advancing the request store out of prerender mode\n    requestStore.prerenderPhase = false;\n}\n/**\n * use this function when prerendering with dynamicIO. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in dynamicIO mode.\n *\n * @internal\n */ export function abortAndThrowOnSynchronousRequestDataAccess(route, expression, errorWithStack, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        if (dynamicTracking.syncDynamicErrorWithStack === null) {\n            dynamicTracking.syncDynamicExpression = expression;\n            dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n            if (prerenderStore.validating === true) {\n                // We always log Request Access in dev at the point of calling the function\n                // So we mark the dynamic validation as not requiring it to be printed\n                dynamicTracking.syncDynamicLogged = true;\n            }\n        }\n    }\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n    throw createPrerenderInterruptedError(`Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`);\n}\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev = trackSynchronousPlatformIOAccessInDev;\nexport function Postpone({ reason, route }) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    const dynamicTracking = prerenderStore && prerenderStore.type === 'prerender-ppr' ? prerenderStore.dynamicTracking : null;\n    postponeWithTracking(route, reason, dynamicTracking);\n}\nexport function postponeWithTracking(route, expression, dynamicTracking) {\n    assertPostpone();\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n    React.unstable_postpone(createPostponeReason(route, expression));\n}\nfunction createPostponeReason(route, expression) {\n    return `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` + `React throws this special object to indicate where. It should not be caught by ` + `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`;\n}\nexport function isDynamicPostpone(err) {\n    if (typeof err === 'object' && err !== null && typeof err.message === 'string') {\n        return isDynamicPostponeReason(err.message);\n    }\n    return false;\n}\nfunction isDynamicPostponeReason(reason) {\n    return reason.includes('needs to bail out of prerendering at this point because it used') && reason.includes('Learn more: https://nextjs.org/docs/messages/ppr-caught-error');\n}\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n    throw new Error('Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js');\n}\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED';\nfunction createPrerenderInterruptedError(message) {\n    const error = new Error(message);\n    error.digest = NEXT_PRERENDER_INTERRUPTED;\n    return error;\n}\nexport function isPrerenderInterruptedError(error) {\n    return typeof error === 'object' && error !== null && error.digest === NEXT_PRERENDER_INTERRUPTED && 'name' in error && 'message' in error && error instanceof Error;\n}\nexport function accessedDynamicData(dynamicAccesses) {\n    return dynamicAccesses.length > 0;\n}\nexport function consumeDynamicAccess(serverDynamic, clientDynamic) {\n    // We mutate because we only call this once we are no longer writing\n    // to the dynamicTrackingState and it's more efficient than creating a new\n    // array.\n    serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses);\n    return serverDynamic.dynamicAccesses;\n}\nexport function formatDynamicAPIAccesses(dynamicAccesses) {\n    return dynamicAccesses.filter((access)=>typeof access.stack === 'string' && access.stack.length > 0).map(({ expression, stack })=>{\n        stack = stack.split('\\n')// Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4).filter((line)=>{\n            // Exclude Next.js internals from the stack trace.\n            if (line.includes('node_modules/next/')) {\n                return false;\n            }\n            // Exclude anonymous functions from the stack trace.\n            if (line.includes(' (<anonymous>)')) {\n                return false;\n            }\n            // Exclude Node.js internals from the stack trace.\n            if (line.includes(' (node:')) {\n                return false;\n            }\n            return true;\n        }).join('\\n');\n        return `Dynamic API Usage Debug - ${expression}:\\n${stack}`;\n    });\n}\nfunction assertPostpone() {\n    if (!hasPostpone) {\n        throw new Error(`Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`);\n    }\n}\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */ export function createPostponedAbortSignal(reason) {\n    assertPostpone();\n    const controller = new AbortController();\n    // We get our hands on a postpone instance by calling postpone and catching the throw\n    try {\n        React.unstable_postpone(reason);\n    } catch (x) {\n        controller.abort(x);\n    }\n    return controller.signal;\n}\nexport function annotateDynamicAccess(expression, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function useDynamicRouteParams(expression) {\n    if (typeof window === 'undefined') {\n        const workStore = workAsyncStorage.getStore();\n        if (workStore && workStore.isStaticGeneration && workStore.fallbackRouteParams && workStore.fallbackRouteParams.size > 0) {\n            // There are fallback route params, we should track these as dynamic\n            // accesses.\n            const workUnitStore = workUnitAsyncStorage.getStore();\n            if (workUnitStore) {\n                // We're prerendering with dynamicIO or PPR or both\n                if (workUnitStore.type === 'prerender') {\n                    // We are in a prerender with dynamicIO semantics\n                    // We are going to hang here and never resolve. This will cause the currently\n                    // rendering component to effectively be a dynamic hole\n                    React.use(makeHangingPromise(workUnitStore.renderSignal, expression));\n                } else if (workUnitStore.type === 'prerender-ppr') {\n                    // We're prerendering with PPR\n                    postponeWithTracking(workStore.route, expression, workUnitStore.dynamicTracking);\n                } else if (workUnitStore.type === 'prerender-legacy') {\n                    throwToInterruptStaticGeneration(expression, workStore, workUnitStore);\n                }\n            }\n        }\n    }\n}\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/;\nconst hasMetadataRegex = new RegExp(`\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasViewportRegex = new RegExp(`\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`);\nexport function trackAllowedDynamicAccess(route, componentStack, dynamicValidation, serverDynamic, clientDynamic) {\n    if (hasOutletRegex.test(componentStack)) {\n        // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n        return;\n    } else if (hasMetadataRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicMetadata = true;\n        return;\n    } else if (hasViewportRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicViewport = true;\n        return;\n    } else if (hasSuspenseRegex.test(componentStack)) {\n        dynamicValidation.hasSuspendedDynamic = true;\n        return;\n    } else if (serverDynamic.syncDynamicErrorWithStack || clientDynamic.syncDynamicErrorWithStack) {\n        dynamicValidation.hasSyncDynamicErrors = true;\n        return;\n    } else {\n        const message = `Route \"${route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. We don't have the exact line number added to error messages yet but you can see which component in the stack below. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`;\n        const error = createErrorWithComponentStack(message, componentStack);\n        dynamicValidation.dynamicErrors.push(error);\n        return;\n    }\n}\nfunction createErrorWithComponentStack(message, componentStack) {\n    const error = new Error(message);\n    error.stack = 'Error: ' + message + componentStack;\n    return error;\n}\nexport function throwIfDisallowedDynamic(route, dynamicValidation, serverDynamic, clientDynamic) {\n    let syncError;\n    let syncExpression;\n    let syncLogged;\n    if (serverDynamic.syncDynamicErrorWithStack) {\n        syncError = serverDynamic.syncDynamicErrorWithStack;\n        syncExpression = serverDynamic.syncDynamicExpression;\n        syncLogged = serverDynamic.syncDynamicLogged === true;\n    } else if (clientDynamic.syncDynamicErrorWithStack) {\n        syncError = clientDynamic.syncDynamicErrorWithStack;\n        syncExpression = clientDynamic.syncDynamicExpression;\n        syncLogged = clientDynamic.syncDynamicLogged === true;\n    } else {\n        syncError = null;\n        syncExpression = undefined;\n        syncLogged = false;\n    }\n    if (dynamicValidation.hasSyncDynamicErrors && syncError) {\n        if (!syncLogged) {\n            // In dev we already log errors about sync dynamic access. But during builds we need to ensure\n            // the offending sync error is logged before we exit the build\n            console.error(syncError);\n        }\n        // The actual error should have been logged when the sync access ocurred\n        throw new StaticGenBailoutError();\n    }\n    const dynamicErrors = dynamicValidation.dynamicErrors;\n    if (dynamicErrors.length) {\n        for(let i = 0; i < dynamicErrors.length; i++){\n            console.error(dynamicErrors[i]);\n        }\n        throw new StaticGenBailoutError();\n    }\n    if (!dynamicValidation.hasSuspendedDynamic) {\n        if (dynamicValidation.hasDynamicMetadata) {\n            if (syncError) {\n                console.error(syncError);\n                throw new StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`);\n            }\n            throw new StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateMetadata\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`);\n        } else if (dynamicValidation.hasDynamicViewport) {\n            if (syncError) {\n                console.error(syncError);\n                throw new StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`);\n            }\n            throw new StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateViewport\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`);\n        }\n    }\n}\n\n//# sourceMappingURL=dynamic-rendering.js.map","import { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { PRERENDER_REVALIDATE_HEADER, PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER } from '../../lib/constants';\nimport { getTracer } from '../lib/trace/tracer';\nimport { NodeSpan } from '../lib/trace/constants';\nexport function wrapApiHandler(page, handler) {\n    return (...args)=>{\n        getTracer().setRootSpanAttribute('next.route', page);\n        // Call API route method\n        return getTracer().trace(NodeSpan.runHandler, {\n            spanName: `executing api route (pages) ${page}`\n        }, ()=>handler(...args));\n    };\n}\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */ export function sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */ export function redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === 'string') {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n        throw new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`);\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nexport function checkIsOnDemandRevalidate(req, previewProps) {\n    const headers = HeadersAdapter.from(req.headers);\n    const previewModeId = headers.get(PRERENDER_REVALIDATE_HEADER);\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n    const revalidateOnlyGenerated = headers.has(PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n    return {\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n    };\n}\nexport const COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nexport const COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nexport const RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nexport const SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nexport function clearPreviewData(res, options = {}) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize } = require('next/dist/compiled/cookie');\n    const previous = res.getHeader('Set-Cookie');\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === 'string' ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        })\n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\n/**\n * Custom error class\n */ export class ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */ export function sendError(res, statusCode, message) {\n    res.statusCode = statusCode;\n    res.statusMessage = message;\n    res.end(message);\n}\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */ export function setLazyProp({ req }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n}\n\n//# sourceMappingURL=index.js.map","import { COOKIE_NAME_PRERENDER_BYPASS, checkIsOnDemandRevalidate } from '../api-utils';\nexport class DraftModeProvider {\n    constructor(previewProps, req, cookies, mutableCookies){\n        var _cookies_get;\n        // The logic for draftMode() is very similar to tryGetPreviewData()\n        // but Draft Mode does not have any data associated with it.\n        const isOnDemandRevalidate = previewProps && checkIsOnDemandRevalidate(req, previewProps).isOnDemandRevalidate;\n        const cookieValue = (_cookies_get = cookies.get(COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n        this.isEnabled = Boolean(!isOnDemandRevalidate && cookieValue && previewProps && (cookieValue === previewProps.previewModeId || // In dev mode, the cookie can be actual hash value preview id but the preview props can still be `development-id`.\n        process.env.NODE_ENV !== 'production' && previewProps.previewModeId === 'development-id'));\n        this._previewModeId = previewProps == null ? void 0 : previewProps.previewModeId;\n        this._mutableCookies = mutableCookies;\n    }\n    enable() {\n        if (!this._previewModeId) {\n            throw new Error('Invariant: previewProps missing previewModeId this should never happen');\n        }\n        this._mutableCookies.set({\n            name: COOKIE_NAME_PRERENDER_BYPASS,\n            value: this._previewModeId,\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/'\n        });\n    }\n    disable() {\n        // To delete a cookie, set `expires` to a date in the past:\n        // https://tools.ietf.org/html/rfc6265#section-4.1.1\n        // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n        this._mutableCookies.set({\n            name: COOKIE_NAME_PRERENDER_BYPASS,\n            value: '',\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            expires: new Date(0)\n        });\n    }\n}\n\n//# sourceMappingURL=draft-mode-provider.js.map","import { FLIGHT_HEADERS } from '../../client/components/app-router-headers';\nimport { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { MutableRequestCookiesAdapter, RequestCookiesAdapter, responseCookiesToRequestCookies, wrapWithMutableAccessCheck } from '../web/spec-extension/adapters/request-cookies';\nimport { ResponseCookies, RequestCookies } from '../web/spec-extension/cookies';\nimport { DraftModeProvider } from './draft-mode-provider';\nimport { splitCookiesString } from '../web/utils';\nfunction getHeaders(headers) {\n    const cleaned = HeadersAdapter.from(headers);\n    for (const header of FLIGHT_HEADERS){\n        cleaned.delete(header.toLowerCase());\n    }\n    return HeadersAdapter.seal(cleaned);\n}\nfunction getMutableCookies(headers, onUpdateCookies) {\n    const cookies = new RequestCookies(HeadersAdapter.from(headers));\n    return MutableRequestCookiesAdapter.wrap(cookies, onUpdateCookies);\n}\n/**\n * If middleware set cookies in this request (indicated by `x-middleware-set-cookie`),\n * then merge those into the existing cookie object, so that when `cookies()` is accessed\n * it's able to read the newly set cookies.\n */ function mergeMiddlewareCookies(req, existingCookies) {\n    if ('x-middleware-set-cookie' in req.headers && typeof req.headers['x-middleware-set-cookie'] === 'string') {\n        const setCookieValue = req.headers['x-middleware-set-cookie'];\n        const responseHeaders = new Headers();\n        for (const cookie of splitCookiesString(setCookieValue)){\n            responseHeaders.append('set-cookie', cookie);\n        }\n        const responseCookies = new ResponseCookies(responseHeaders);\n        // Transfer cookies from ResponseCookies to RequestCookies\n        for (const cookie of responseCookies.getAll()){\n            existingCookies.set(cookie);\n        }\n    }\n}\nexport function createRequestStoreForRender(req, res, url, implicitTags, onUpdateCookies, previewProps, isHmrRefresh, serverComponentsHmrCache, renderResumeDataCache) {\n    return createRequestStoreImpl(// Pages start in render phase by default\n    'render', req, res, url, implicitTags, onUpdateCookies, renderResumeDataCache, previewProps, isHmrRefresh, serverComponentsHmrCache);\n}\nexport function createRequestStoreForAPI(req, url, implicitTags, onUpdateCookies, previewProps) {\n    return createRequestStoreImpl(// API routes start in action phase by default\n    'action', req, undefined, url, implicitTags, onUpdateCookies, undefined, previewProps, false, undefined);\n}\nfunction createRequestStoreImpl(phase, req, res, url, implicitTags, onUpdateCookies, renderResumeDataCache, previewProps, isHmrRefresh, serverComponentsHmrCache) {\n    function defaultOnUpdateCookies(cookies) {\n        if (res) {\n            res.setHeader('Set-Cookie', cookies);\n        }\n    }\n    const cache = {};\n    return {\n        type: 'request',\n        phase,\n        implicitTags: implicitTags ?? [],\n        // Rather than just using the whole `url` here, we pull the parts we want\n        // to ensure we don't use parts of the URL that we shouldn't. This also\n        // lets us avoid requiring an empty string for `search` in the type.\n        url: {\n            pathname: url.pathname,\n            search: url.search ?? ''\n        },\n        get headers () {\n            if (!cache.headers) {\n                // Seal the headers object that'll freeze out any methods that could\n                // mutate the underlying data.\n                cache.headers = getHeaders(req.headers);\n            }\n            return cache.headers;\n        },\n        get cookies () {\n            if (!cache.cookies) {\n                // if middleware is setting cookie(s), then include those in\n                // the initial cached cookies so they can be read in render\n                const requestCookies = new RequestCookies(HeadersAdapter.from(req.headers));\n                mergeMiddlewareCookies(req, requestCookies);\n                // Seal the cookies object that'll freeze out any methods that could\n                // mutate the underlying data.\n                cache.cookies = RequestCookiesAdapter.seal(requestCookies);\n            }\n            return cache.cookies;\n        },\n        set cookies (value){\n            cache.cookies = value;\n        },\n        get mutableCookies () {\n            if (!cache.mutableCookies) {\n                const mutableCookies = getMutableCookies(req.headers, onUpdateCookies || (res ? defaultOnUpdateCookies : undefined));\n                mergeMiddlewareCookies(req, mutableCookies);\n                cache.mutableCookies = mutableCookies;\n            }\n            return cache.mutableCookies;\n        },\n        get userspaceMutableCookies () {\n            if (!cache.userspaceMutableCookies) {\n                const userspaceMutableCookies = wrapWithMutableAccessCheck(this.mutableCookies);\n                cache.userspaceMutableCookies = userspaceMutableCookies;\n            }\n            return cache.userspaceMutableCookies;\n        },\n        get draftMode () {\n            if (!cache.draftMode) {\n                cache.draftMode = new DraftModeProvider(previewProps, req, this.cookies, this.mutableCookies);\n            }\n            return cache.draftMode;\n        },\n        renderResumeDataCache: renderResumeDataCache ?? null,\n        isHmrRefresh,\n        serverComponentsHmrCache: serverComponentsHmrCache || globalThis.__serverComponentsHmrCache\n    };\n}\nexport function synchronizeMutableCookies(store) {\n    // TODO: does this need to update headers as well?\n    store.cookies = RequestCookiesAdapter.seal(responseCookiesToRequestCookies(store.mutableCookies));\n}\n\n//# sourceMappingURL=request-store.js.map","/** Run a callback, and execute any *new* revalidations added during its runtime. */ export async function withExecuteRevalidates(store, callback) {\n    if (!store) {\n        return callback();\n    }\n    // If we executed any revalidates during the request, then we don't want to execute them again.\n    // save the state so we can check if anything changed after we're done running callbacks.\n    const savedRevalidationState = cloneRevalidationState(store);\n    try {\n        return await callback();\n    } finally{\n        // Check if we have any new revalidates, and if so, wait until they are all resolved.\n        const newRevalidates = diffRevalidationState(savedRevalidationState, cloneRevalidationState(store));\n        await executeRevalidates(store, newRevalidates);\n    }\n}\nfunction cloneRevalidationState(store) {\n    return {\n        revalidatedTags: store.revalidatedTags ? [\n            ...store.revalidatedTags\n        ] : [],\n        pendingRevalidates: {\n            ...store.pendingRevalidates\n        },\n        pendingRevalidateWrites: store.pendingRevalidateWrites ? [\n            ...store.pendingRevalidateWrites\n        ] : []\n    };\n}\nfunction diffRevalidationState(prev, curr) {\n    const prevTags = new Set(prev.revalidatedTags);\n    const prevRevalidateWrites = new Set(prev.pendingRevalidateWrites);\n    return {\n        revalidatedTags: curr.revalidatedTags.filter((tag)=>!prevTags.has(tag)),\n        pendingRevalidates: Object.fromEntries(Object.entries(curr.pendingRevalidates).filter(([key])=>!(key in prev.pendingRevalidates))),\n        pendingRevalidateWrites: curr.pendingRevalidateWrites.filter((promise)=>!prevRevalidateWrites.has(promise))\n    };\n}\nasync function executeRevalidates(workStore, { revalidatedTags, pendingRevalidates, pendingRevalidateWrites }) {\n    var _workStore_incrementalCache;\n    return Promise.all([\n        (_workStore_incrementalCache = workStore.incrementalCache) == null ? void 0 : _workStore_incrementalCache.revalidateTag(revalidatedTags),\n        ...Object.values(pendingRevalidates),\n        ...pendingRevalidateWrites\n    ]);\n}\n\n//# sourceMappingURL=revalidation-utils.js.map","import PromiseQueue from 'next/dist/compiled/p-queue';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { isThenable } from '../../shared/lib/is-thenable';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { withExecuteRevalidates } from './revalidation-utils';\nimport { bindSnapshot } from '../app-render/async-local-storage';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { afterTaskAsyncStorage } from '../app-render/after-task-async-storage.external';\nexport class AfterContext {\n    constructor({ waitUntil, onClose, onTaskError }){\n        this.workUnitStores = new Set();\n        this.waitUntil = waitUntil;\n        this.onClose = onClose;\n        this.onTaskError = onTaskError;\n        this.callbackQueue = new PromiseQueue();\n        this.callbackQueue.pause();\n    }\n    after(task) {\n        if (isThenable(task)) {\n            if (!this.waitUntil) {\n                errorWaitUntilNotAvailable();\n            }\n            this.waitUntil(task.catch((error)=>this.reportTaskError('promise', error)));\n        } else if (typeof task === 'function') {\n            // TODO(after): implement tracing\n            this.addCallback(task);\n        } else {\n            throw new Error('`after()`: Argument must be a promise or a function');\n        }\n    }\n    addCallback(callback) {\n        // if something is wrong, throw synchronously, bubbling up to the `after` callsite.\n        if (!this.waitUntil) {\n            errorWaitUntilNotAvailable();\n        }\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        if (workUnitStore) {\n            this.workUnitStores.add(workUnitStore);\n        }\n        const afterTaskStore = afterTaskAsyncStorage.getStore();\n        // This is used for checking if request APIs can be called inside `after`.\n        // Note that we need to check the phase in which the *topmost* `after` was called (which should be \"action\"),\n        // not the current phase (which might be \"after\" if we're in a nested after).\n        // Otherwise, we might allow `after(() => headers())`, but not `after(() => after(() => headers()))`.\n        const rootTaskSpawnPhase = afterTaskStore ? afterTaskStore.rootTaskSpawnPhase // nested after\n         : workUnitStore == null ? void 0 : workUnitStore.phase // topmost after\n        ;\n        // this should only happen once.\n        if (!this.runCallbacksOnClosePromise) {\n            this.runCallbacksOnClosePromise = this.runCallbacksOnClose();\n            this.waitUntil(this.runCallbacksOnClosePromise);\n        }\n        // Bind the callback to the current execution context (i.e. preserve all currently available ALS-es).\n        // We do this because we want all of these to be equivalent in every regard except timing:\n        //   after(() => x())\n        //   after(x())\n        //   await x()\n        const wrappedCallback = bindSnapshot(async ()=>{\n            try {\n                await afterTaskAsyncStorage.run({\n                    rootTaskSpawnPhase\n                }, ()=>callback());\n            } catch (error) {\n                this.reportTaskError('function', error);\n            }\n        });\n        this.callbackQueue.add(wrappedCallback);\n    }\n    async runCallbacksOnClose() {\n        await new Promise((resolve)=>this.onClose(resolve));\n        return this.runCallbacks();\n    }\n    async runCallbacks() {\n        if (this.callbackQueue.size === 0) return;\n        for (const workUnitStore of this.workUnitStores){\n            workUnitStore.phase = 'after';\n        }\n        const workStore = workAsyncStorage.getStore();\n        if (!workStore) {\n            throw new InvariantError('Missing workStore in AfterContext.runCallbacks');\n        }\n        return withExecuteRevalidates(workStore, ()=>{\n            this.callbackQueue.start();\n            return this.callbackQueue.onIdle();\n        });\n    }\n    reportTaskError(taskKind, error) {\n        // TODO(after): this is fine for now, but will need better intergration with our error reporting.\n        // TODO(after): should we log this if we have a onTaskError callback?\n        console.error(taskKind === 'promise' ? `A promise passed to \\`after()\\` rejected:` : `An error occurred in a function passed to \\`after()\\`:`, error);\n        if (this.onTaskError) {\n            // this is very defensive, but we really don't want anything to blow up in an error handler\n            try {\n                this.onTaskError == null ? void 0 : this.onTaskError.call(this, error);\n            } catch (handlerError) {\n                console.error(new InvariantError('`onTaskError` threw while handling an error thrown from an `after` task', {\n                    cause: handlerError\n                }));\n            }\n        }\n    }\n}\nfunction errorWaitUntilNotAvailable() {\n    throw new Error('`after()` will not work correctly, because `waitUntil` is not available in the current environment.');\n}\n\n//# sourceMappingURL=after-context.js.map","import { AfterContext } from '../after/after-context';\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nexport function createWorkStore({ page, fallbackRouteParams, renderOpts, requestEndedState, isPrefetchRequest }) {\n    /**\n   * Rules of Static & Dynamic HTML:\n   *\n   *    1.) We must generate static HTML unless the caller explicitly opts\n   *        in to dynamic HTML support.\n   *\n   *    2.) If dynamic HTML support is requested, we must honor that request\n   *        or throw an error. It is the sole responsibility of the caller to\n   *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n   *\n   *    3.) If the request is in draft mode, we must generate dynamic HTML.\n   *\n   *    4.) If the request is a server action, we must generate dynamic HTML.\n   *\n   * These rules help ensure that other existing features like request caching,\n   * coalescing, and ISR continue working as intended.\n   */ const isStaticGeneration = !renderOpts.supportsDynamicResponse && !renderOpts.isDraftMode && !renderOpts.isServerAction;\n    const store = {\n        isStaticGeneration,\n        page,\n        fallbackRouteParams,\n        route: normalizeAppPath(page),\n        incrementalCache: // we fallback to a global incremental cache for edge-runtime locally\n        // so that it can access the fs cache without mocks\n        renderOpts.incrementalCache || globalThis.__incrementalCache,\n        cacheLifeProfiles: renderOpts.cacheLifeProfiles,\n        isRevalidate: renderOpts.isRevalidate,\n        isPrerendering: renderOpts.nextExport,\n        fetchCache: renderOpts.fetchCache,\n        isOnDemandRevalidate: renderOpts.isOnDemandRevalidate,\n        isDraftMode: renderOpts.isDraftMode,\n        requestEndedState,\n        isPrefetchRequest,\n        buildId: renderOpts.buildId,\n        reactLoadableManifest: (renderOpts == null ? void 0 : renderOpts.reactLoadableManifest) || {},\n        assetPrefix: (renderOpts == null ? void 0 : renderOpts.assetPrefix) || '',\n        afterContext: createAfterContext(renderOpts)\n    };\n    // TODO: remove this when we resolve accessing the store outside the execution context\n    renderOpts.store = store;\n    return store;\n}\nfunction createAfterContext(renderOpts) {\n    const { waitUntil, onClose, onAfterTaskError } = renderOpts;\n    return new AfterContext({\n        waitUntil,\n        onClose,\n        onTaskError: onAfterTaskError\n    });\n}\n\n//# sourceMappingURL=work-store.js.map","/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for dynamicIO where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */ export function makeHangingPromise(signal, expression) {\n    const hangingPromise = new Promise((_, reject)=>{\n        signal.addEventListener('abort', ()=>{\n            reject(new Error(`During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context.`));\n        }, {\n            once: true\n        });\n    });\n    // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n    // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n    // your own promise out of it you'll need to ensure you handle the error when it rejects.\n    hangingPromise.catch(ignoreReject);\n    return hangingPromise;\n}\nfunction ignoreReject() {}\n\n//# sourceMappingURL=dynamic-rendering-utils.js.map","export class LRUCache {\n    constructor(maxSize, calculateSize){\n        this.cache = new Map();\n        this.sizes = new Map();\n        this.totalSize = 0;\n        this.maxSize = maxSize;\n        this.calculateSize = calculateSize || (()=>1);\n    }\n    set(key, value) {\n        if (!key || !value) return;\n        const size = this.calculateSize(value);\n        if (size > this.maxSize) {\n            console.warn('Single item size exceeds maxSize');\n            return;\n        }\n        if (this.cache.has(key)) {\n            this.totalSize -= this.sizes.get(key) || 0;\n        }\n        this.cache.set(key, value);\n        this.sizes.set(key, size);\n        this.totalSize += size;\n        this.touch(key);\n    }\n    has(key) {\n        if (!key) return false;\n        this.touch(key);\n        return Boolean(this.cache.get(key));\n    }\n    get(key) {\n        if (!key) return;\n        const value = this.cache.get(key);\n        if (value === undefined) {\n            return undefined;\n        }\n        this.touch(key);\n        return value;\n    }\n    touch(key) {\n        const value = this.cache.get(key);\n        if (value !== undefined) {\n            this.cache.delete(key);\n            this.cache.set(key, value);\n            this.evictIfNecessary();\n        }\n    }\n    evictIfNecessary() {\n        while(this.totalSize > this.maxSize && this.cache.size > 0){\n            this.evictLeastRecentlyUsed();\n        }\n    }\n    evictLeastRecentlyUsed() {\n        const lruKey = this.cache.keys().next().value;\n        if (lruKey !== undefined) {\n            const lruSize = this.sizes.get(lruKey) || 0;\n            this.totalSize -= lruSize;\n            this.cache.delete(lruKey);\n            this.sizes.delete(lruKey);\n        }\n    }\n    reset() {\n        this.cache.clear();\n        this.sizes.clear();\n        this.totalSize = 0;\n    }\n    keys() {\n        return [\n            ...this.cache.keys()\n        ];\n    }\n    remove(key) {\n        if (this.cache.has(key)) {\n            this.totalSize -= this.sizes.get(key) || 0;\n            this.cache.delete(key);\n            this.sizes.delete(key);\n        }\n    }\n    clear() {\n        this.cache.clear();\n        this.sizes.clear();\n        this.totalSize = 0;\n    }\n    get size() {\n        return this.cache.size;\n    }\n    get currentSize() {\n        return this.totalSize;\n    }\n}\n\n//# sourceMappingURL=lru-cache.js.map","/**\n * Clones a response by teeing the body so we can return two independent\n * ReadableStreams from it. This avoids the bug in the undici library around\n * response cloning.\n *\n * After cloning, the original response's body will be consumed and closed.\n *\n * @see https://github.com/vercel/next.js/pull/73274\n *\n * @param original - The original response to clone.\n * @returns A tuple containing two independent clones of the original response.\n */ export function cloneResponse(original) {\n    // If the response has no body, then we can just return the original response\n    // twice because it's immutable.\n    if (!original.body) {\n        return [\n            original,\n            original\n        ];\n    }\n    const [body1, body2] = original.body.tee();\n    const cloned1 = new Response(body1, {\n        status: original.status,\n        statusText: original.statusText,\n        headers: original.headers\n    });\n    Object.defineProperty(cloned1, 'url', {\n        value: original.url\n    });\n    const cloned2 = new Response(body2, {\n        status: original.status,\n        statusText: original.statusText,\n        headers: original.headers\n    });\n    Object.defineProperty(cloned2, 'url', {\n        value: original.url\n    });\n    return [\n        cloned1,\n        cloned2\n    ];\n}\n\n//# sourceMappingURL=clone-response.js.map","/**\n * Based on https://github.com/facebook/react/blob/d4e78c42a94be027b4dc7ed2659a5fddfbf9bd4e/packages/react/src/ReactFetch.js\n */ import * as React from 'react';\nimport { cloneResponse } from './clone-response';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nconst simpleCacheKey = '[\"GET\",[],null,\"follow\",null,null,null,null]' // generateCacheKey(new Request('https://blank'));\n;\nfunction generateCacheKey(request) {\n    // We pick the fields that goes into the key used to dedupe requests.\n    // We don't include the `cache` field, because we end up using whatever\n    // caching resulted from the first request.\n    // Notably we currently don't consider non-standard (or future) options.\n    // This might not be safe. TODO: warn for non-standard extensions differing.\n    // IF YOU CHANGE THIS UPDATE THE simpleCacheKey ABOVE.\n    return JSON.stringify([\n        request.method,\n        Array.from(request.headers.entries()),\n        request.mode,\n        request.redirect,\n        request.credentials,\n        request.referrer,\n        request.referrerPolicy,\n        request.integrity\n    ]);\n}\nexport function createDedupeFetch(originalFetch) {\n    const getCacheEntries = React.cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- url is the cache key\n    (url)=>[]);\n    return function dedupeFetch(resource, options) {\n        if (options && options.signal) {\n            // If we're passed a signal, then we assume that\n            // someone else controls the lifetime of this object and opts out of\n            // caching. It's effectively the opt-out mechanism.\n            // Ideally we should be able to check this on the Request but\n            // it always gets initialized with its own signal so we don't\n            // know if it's supposed to override - unless we also override the\n            // Request constructor.\n            return originalFetch(resource, options);\n        }\n        // Normalize the Request\n        let url;\n        let cacheKey;\n        if (typeof resource === 'string' && !options) {\n            // Fast path.\n            cacheKey = simpleCacheKey;\n            url = resource;\n        } else {\n            // Normalize the request.\n            // if resource is not a string or a URL (its an instance of Request)\n            // then do not instantiate a new Request but instead\n            // reuse the request as to not disturb the body in the event it's a ReadableStream.\n            const request = typeof resource === 'string' || resource instanceof URL ? new Request(resource, options) : resource;\n            if (request.method !== 'GET' && request.method !== 'HEAD' || request.keepalive) {\n                // We currently don't dedupe requests that might have side-effects. Those\n                // have to be explicitly cached. We assume that the request doesn't have a\n                // body if it's GET or HEAD.\n                // keepalive gets treated the same as if you passed a custom cache signal.\n                return originalFetch(resource, options);\n            }\n            cacheKey = generateCacheKey(request);\n            url = request.url;\n        }\n        const cacheEntries = getCacheEntries(url);\n        for(let i = 0, j = cacheEntries.length; i < j; i += 1){\n            const [key, promise] = cacheEntries[i];\n            if (key === cacheKey) {\n                return promise.then(()=>{\n                    const response = cacheEntries[i][2];\n                    if (!response) throw new InvariantError('No cached response');\n                    // We're cloning the response using this utility because there exists\n                    // a bug in the undici library around response cloning. See the\n                    // following pull request for more details:\n                    // https://github.com/vercel/next.js/pull/73274\n                    const [cloned1, cloned2] = cloneResponse(response);\n                    cacheEntries[i][2] = cloned2;\n                    return cloned1;\n                });\n            }\n        }\n        // We pass the original arguments here in case normalizing the Request\n        // doesn't include all the options in this environment.\n        const promise = originalFetch(resource, options);\n        const entry = [\n            cacheKey,\n            promise,\n            null\n        ];\n        cacheEntries.push(entry);\n        return promise.then((response)=>{\n            // We're cloning the response using this utility because there exists\n            // a bug in the undici library around response cloning. See the\n            // following pull request for more details:\n            // https://github.com/vercel/next.js/pull/73274\n            const [cloned1, cloned2] = cloneResponse(response);\n            entry[2] = cloned2;\n            return cloned1;\n        });\n    };\n}\n\n//# sourceMappingURL=dedupe-fetch.js.map","import { AppRenderSpan, NextNodeServerSpan } from './trace/constants';\nimport { getTracer, SpanKind } from './trace/tracer';\nimport { CACHE_ONE_YEAR, INFINITE_CACHE, NEXT_CACHE_TAG_MAX_ITEMS, NEXT_CACHE_TAG_MAX_LENGTH } from '../../lib/constants';\nimport { markCurrentScopeAsDynamic } from '../app-render/dynamic-rendering';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupeFetch } from './dedupe-fetch';\nimport { CachedRouteKind, IncrementalCacheKind } from '../response-cache';\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler';\nimport { cloneResponse } from './clone-response';\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge';\nexport const NEXT_PATCH_SYMBOL = Symbol.for('next-patch');\nfunction isFetchPatched() {\n    return globalThis[NEXT_PATCH_SYMBOL] === true;\n}\nexport function validateRevalidate(revalidateVal, route) {\n    try {\n        let normalizedRevalidate = undefined;\n        if (revalidateVal === false) {\n            normalizedRevalidate = INFINITE_CACHE;\n        } else if (typeof revalidateVal === 'number' && !isNaN(revalidateVal) && revalidateVal > -1) {\n            normalizedRevalidate = revalidateVal;\n        } else if (typeof revalidateVal !== 'undefined') {\n            throw new Error(`Invalid revalidate value \"${revalidateVal}\" on \"${route}\", must be a non-negative number or false`);\n        }\n        return normalizedRevalidate;\n    } catch (err) {\n        // handle client component error from attempting to check revalidate value\n        if (err instanceof Error && err.message.includes('Invalid revalidate')) {\n            throw err;\n        }\n        return undefined;\n    }\n}\nexport function validateTags(tags, description) {\n    const validTags = [];\n    const invalidTags = [];\n    for(let i = 0; i < tags.length; i++){\n        const tag = tags[i];\n        if (typeof tag !== 'string') {\n            invalidTags.push({\n                tag,\n                reason: 'invalid type, must be a string'\n            });\n        } else if (tag.length > NEXT_CACHE_TAG_MAX_LENGTH) {\n            invalidTags.push({\n                tag,\n                reason: `exceeded max length of ${NEXT_CACHE_TAG_MAX_LENGTH}`\n            });\n        } else {\n            validTags.push(tag);\n        }\n        if (validTags.length > NEXT_CACHE_TAG_MAX_ITEMS) {\n            console.warn(`Warning: exceeded max tag count for ${description}, dropped tags:`, tags.slice(i).join(', '));\n            break;\n        }\n    }\n    if (invalidTags.length > 0) {\n        console.warn(`Warning: invalid tags passed to ${description}: `);\n        for (const { tag, reason } of invalidTags){\n            console.log(`tag: \"${tag}\" ${reason}`);\n        }\n    }\n    return validTags;\n}\nfunction trackFetchMetric(workStore, ctx) {\n    var _workStore_requestEndedState;\n    // If the static generation store is not available, we can't track the fetch\n    if (!workStore) return;\n    if ((_workStore_requestEndedState = workStore.requestEndedState) == null ? void 0 : _workStore_requestEndedState.ended) return;\n    const isDebugBuild = (!!process.env.NEXT_DEBUG_BUILD || process.env.NEXT_SSG_FETCH_METRICS === '1') && workStore.isStaticGeneration;\n    const isDevelopment = process.env.NODE_ENV === 'development';\n    if (// The only time we want to track fetch metrics outside of development is when\n    // we are performing a static generation & we are in debug mode.\n    !isDebugBuild && !isDevelopment) {\n        return;\n    }\n    workStore.fetchMetrics ??= [];\n    workStore.fetchMetrics.push({\n        ...ctx,\n        end: performance.timeOrigin + performance.now(),\n        idx: workStore.nextFetchId || 0\n    });\n}\nexport function createPatchedFetcher(originFetch, { workAsyncStorage, workUnitAsyncStorage }) {\n    // Create the patched fetch function. We don't set the type here, as it's\n    // verified as the return value of this function.\n    const patched = async (input, init)=>{\n        var _init_method, _init_next;\n        let url;\n        try {\n            url = new URL(input instanceof Request ? input.url : input);\n            url.username = '';\n            url.password = '';\n        } catch  {\n            // Error caused by malformed URL should be handled by native fetch\n            url = undefined;\n        }\n        const fetchUrl = (url == null ? void 0 : url.href) ?? '';\n        const method = (init == null ? void 0 : (_init_method = init.method) == null ? void 0 : _init_method.toUpperCase()) || 'GET';\n        // Do create a new span trace for internal fetches in the\n        // non-verbose mode.\n        const isInternal = (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) === true;\n        const hideSpan = process.env.NEXT_OTEL_FETCH_DISABLED === '1';\n        // We don't track fetch metrics for internal fetches\n        // so it's not critical that we have a start time, as it won't be recorded.\n        // This is to workaround a flaky issue where performance APIs might\n        // not be available and will require follow-up investigation.\n        const fetchStart = isInternal ? undefined : performance.timeOrigin + performance.now();\n        const workStore = workAsyncStorage.getStore();\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        // During static generation we track cache reads so we can reason about when they fill\n        let cacheSignal = workUnitStore && workUnitStore.type === 'prerender' ? workUnitStore.cacheSignal : null;\n        if (cacheSignal) {\n            cacheSignal.beginRead();\n        }\n        const result = getTracer().trace(isInternal ? NextNodeServerSpan.internalFetch : AppRenderSpan.fetch, {\n            hideSpan,\n            kind: SpanKind.CLIENT,\n            spanName: [\n                'fetch',\n                method,\n                fetchUrl\n            ].filter(Boolean).join(' '),\n            attributes: {\n                'http.url': fetchUrl,\n                'http.method': method,\n                'net.peer.name': url == null ? void 0 : url.hostname,\n                'net.peer.port': (url == null ? void 0 : url.port) || undefined\n            }\n        }, async ()=>{\n            var _getRequestMeta;\n            // If this is an internal fetch, we should not do any special treatment.\n            if (isInternal) {\n                return originFetch(input, init);\n            }\n            // If the workStore is not available, we can't do any\n            // special treatment of fetch, therefore fallback to the original\n            // fetch implementation.\n            if (!workStore) {\n                return originFetch(input, init);\n            }\n            // We should also fallback to the original fetch implementation if we\n            // are in draft mode, it does not constitute a static generation.\n            if (workStore.isDraftMode) {\n                return originFetch(input, init);\n            }\n            const isRequestInput = input && typeof input === 'object' && typeof input.method === 'string';\n            const getRequestMeta = (field)=>{\n                // If request input is present but init is not, retrieve from input first.\n                const value = init == null ? void 0 : init[field];\n                return value || (isRequestInput ? input[field] : null);\n            };\n            let finalRevalidate = undefined;\n            const getNextField = (field)=>{\n                var _init_next, _init_next1, _input_next;\n                return typeof (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next[field]) !== 'undefined' ? init == null ? void 0 : (_init_next1 = init.next) == null ? void 0 : _init_next1[field] : isRequestInput ? (_input_next = input.next) == null ? void 0 : _input_next[field] : undefined;\n            };\n            // RequestInit doesn't keep extra fields e.g. next so it's\n            // only available if init is used separate\n            let currentFetchRevalidate = getNextField('revalidate');\n            const tags = validateTags(getNextField('tags') || [], `fetch ${input.toString()}`);\n            const revalidateStore = workUnitStore && (workUnitStore.type === 'cache' || workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-ppr' || workUnitStore.type === 'prerender-legacy') ? workUnitStore : undefined;\n            if (revalidateStore) {\n                if (Array.isArray(tags)) {\n                    // Collect tags onto parent caches or parent prerenders.\n                    const collectedTags = revalidateStore.tags ?? (revalidateStore.tags = []);\n                    for (const tag of tags){\n                        if (!collectedTags.includes(tag)) {\n                            collectedTags.push(tag);\n                        }\n                    }\n                }\n            }\n            const implicitTags = !workUnitStore || workUnitStore.type === 'unstable-cache' ? [] : workUnitStore.implicitTags;\n            // Inside unstable-cache we treat it the same as force-no-store on the\n            // page.\n            const pageFetchCacheMode = workUnitStore && workUnitStore.type === 'unstable-cache' ? 'force-no-store' : workStore.fetchCache;\n            const isUsingNoStore = !!workStore.isUnstableNoStore;\n            let currentFetchCacheConfig = getRequestMeta('cache');\n            let cacheReason = '';\n            let cacheWarning;\n            if (typeof currentFetchCacheConfig === 'string' && typeof currentFetchRevalidate !== 'undefined') {\n                // If the revalidate value conflicts with the cache value, we should warn the user and unset the conflicting values.\n                const isConflictingRevalidate = // revalidate: 0 and cache: force-cache\n                currentFetchCacheConfig === 'force-cache' && currentFetchRevalidate === 0 || // revalidate: >0 or revalidate: false and cache: no-store\n                currentFetchCacheConfig === 'no-store' && (currentFetchRevalidate > 0 || currentFetchRevalidate === false);\n                if (isConflictingRevalidate) {\n                    cacheWarning = `Specified \"cache: ${currentFetchCacheConfig}\" and \"revalidate: ${currentFetchRevalidate}\", only one should be specified.`;\n                    currentFetchCacheConfig = undefined;\n                    currentFetchRevalidate = undefined;\n                }\n            }\n            const hasExplicitFetchCacheOptOut = // fetch config itself signals not to cache\n            currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store' || // the fetch isn't explicitly caching and the segment level cache config signals not to cache\n            // note: `pageFetchCacheMode` is also set by being in an unstable_cache context.\n            pageFetchCacheMode === 'force-no-store' || pageFetchCacheMode === 'only-no-store';\n            // If no explicit fetch cache mode is set, but dynamic = `force-dynamic` is set,\n            // we shouldn't consider caching the fetch. This is because the `dynamic` cache\n            // is considered a \"top-level\" cache mode, whereas something like `fetchCache` is more\n            // fine-grained. Top-level modes are responsible for setting reasonable defaults for the\n            // other configurations.\n            const noFetchConfigAndForceDynamic = !pageFetchCacheMode && !currentFetchCacheConfig && !currentFetchRevalidate && workStore.forceDynamic;\n            if (// force-cache was specified without a revalidate value. We set the revalidate value to false\n            // which will signal the cache to not revalidate\n            currentFetchCacheConfig === 'force-cache' && typeof currentFetchRevalidate === 'undefined') {\n                currentFetchRevalidate = false;\n            } else if (// if we are inside of \"use cache\"/\"unstable_cache\"\n            // we shouldn't set the revalidate to 0 as it's overridden\n            // by the cache context\n            (workUnitStore == null ? void 0 : workUnitStore.type) !== 'cache' && (hasExplicitFetchCacheOptOut || noFetchConfigAndForceDynamic)) {\n                currentFetchRevalidate = 0;\n            }\n            if (currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store') {\n                cacheReason = `cache: ${currentFetchCacheConfig}`;\n            }\n            finalRevalidate = validateRevalidate(currentFetchRevalidate, workStore.route);\n            const _headers = getRequestMeta('headers');\n            const initHeaders = typeof (_headers == null ? void 0 : _headers.get) === 'function' ? _headers : new Headers(_headers || {});\n            const hasUnCacheableHeader = initHeaders.get('authorization') || initHeaders.get('cookie');\n            const isUnCacheableMethod = ![\n                'get',\n                'head'\n            ].includes(((_getRequestMeta = getRequestMeta('method')) == null ? void 0 : _getRequestMeta.toLowerCase()) || 'get');\n            /**\n         * We automatically disable fetch caching under the following conditions:\n         * - Fetch cache configs are not set. Specifically:\n         *    - A page fetch cache mode is not set (export const fetchCache=...)\n         *    - A fetch cache mode is not set in the fetch call (fetch(url, { cache: ... }))\n         *      or the fetch cache mode is set to 'default'\n         *    - A fetch revalidate value is not set in the fetch call (fetch(url, { revalidate: ... }))\n         * - OR the fetch comes after a configuration that triggered dynamic rendering (e.g., reading cookies())\n         *   and the fetch was considered uncacheable (e.g., POST method or has authorization headers)\n         */ const hasNoExplicitCacheConfig = // eslint-disable-next-line eqeqeq\n            pageFetchCacheMode == undefined && // eslint-disable-next-line eqeqeq\n            (currentFetchCacheConfig == undefined || // when considering whether to opt into the default \"no-cache\" fetch semantics,\n            // a \"default\" cache config should be treated the same as no cache config\n            currentFetchCacheConfig === 'default') && // eslint-disable-next-line eqeqeq\n            currentFetchRevalidate == undefined;\n            const autoNoCache = // this condition is hit for null/undefined\n            // eslint-disable-next-line eqeqeq\n            hasNoExplicitCacheConfig && // we disable automatic no caching behavior during build time SSG so that we can still\n            // leverage the fetch cache between SSG workers\n            !workStore.isPrerendering || (hasUnCacheableHeader || isUnCacheableMethod) && revalidateStore && revalidateStore.revalidate === 0;\n            if (hasNoExplicitCacheConfig && workUnitStore !== undefined && workUnitStore.type === 'prerender') {\n                // If we have no cache config, and we're in Dynamic I/O prerendering, it'll be a dynamic call.\n                // We don't have to issue that dynamic call.\n                if (cacheSignal) {\n                    cacheSignal.endRead();\n                    cacheSignal = null;\n                }\n                return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n            }\n            switch(pageFetchCacheMode){\n                case 'force-no-store':\n                    {\n                        cacheReason = 'fetchCache = force-no-store';\n                        break;\n                    }\n                case 'only-no-store':\n                    {\n                        if (currentFetchCacheConfig === 'force-cache' || typeof finalRevalidate !== 'undefined' && finalRevalidate > 0) {\n                            throw new Error(`cache: 'force-cache' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-no-store'`);\n                        }\n                        cacheReason = 'fetchCache = only-no-store';\n                        break;\n                    }\n                case 'only-cache':\n                    {\n                        if (currentFetchCacheConfig === 'no-store') {\n                            throw new Error(`cache: 'no-store' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-cache'`);\n                        }\n                        break;\n                    }\n                case 'force-cache':\n                    {\n                        if (typeof currentFetchRevalidate === 'undefined' || currentFetchRevalidate === 0) {\n                            cacheReason = 'fetchCache = force-cache';\n                            finalRevalidate = INFINITE_CACHE;\n                        }\n                        break;\n                    }\n                default:\n            }\n            if (typeof finalRevalidate === 'undefined') {\n                if (pageFetchCacheMode === 'default-cache' && !isUsingNoStore) {\n                    finalRevalidate = INFINITE_CACHE;\n                    cacheReason = 'fetchCache = default-cache';\n                } else if (pageFetchCacheMode === 'default-no-store') {\n                    finalRevalidate = 0;\n                    cacheReason = 'fetchCache = default-no-store';\n                } else if (isUsingNoStore) {\n                    finalRevalidate = 0;\n                    cacheReason = 'noStore call';\n                } else if (autoNoCache) {\n                    finalRevalidate = 0;\n                    cacheReason = 'auto no cache';\n                } else {\n                    // TODO: should we consider this case an invariant?\n                    cacheReason = 'auto cache';\n                    finalRevalidate = revalidateStore ? revalidateStore.revalidate : INFINITE_CACHE;\n                }\n            } else if (!cacheReason) {\n                cacheReason = `revalidate: ${finalRevalidate}`;\n            }\n            if (// when force static is configured we don't bail from\n            // `revalidate: 0` values\n            !(workStore.forceStatic && finalRevalidate === 0) && // we don't consider autoNoCache to switch to dynamic for ISR\n            !autoNoCache && // If the revalidate value isn't currently set or the value is less\n            // than the current revalidate value, we should update the revalidate\n            // value.\n            revalidateStore && finalRevalidate < revalidateStore.revalidate) {\n                // If we were setting the revalidate value to 0, we should try to\n                // postpone instead first.\n                if (finalRevalidate === 0) {\n                    if (workUnitStore && workUnitStore.type === 'prerender') {\n                        if (cacheSignal) {\n                            cacheSignal.endRead();\n                            cacheSignal = null;\n                        }\n                        return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                    } else {\n                        markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                    }\n                }\n                // We only want to set the revalidate store's revalidate time if it\n                // was explicitly set for the fetch call, i.e. currentFetchRevalidate.\n                if (revalidateStore && currentFetchRevalidate === finalRevalidate) {\n                    revalidateStore.revalidate = finalRevalidate;\n                }\n            }\n            const isCacheableRevalidate = typeof finalRevalidate === 'number' && finalRevalidate > 0;\n            let cacheKey;\n            const { incrementalCache } = workStore;\n            const requestStore = workUnitStore !== undefined && workUnitStore.type === 'request' ? workUnitStore : undefined;\n            if (incrementalCache && (isCacheableRevalidate || (requestStore == null ? void 0 : requestStore.serverComponentsHmrCache))) {\n                try {\n                    cacheKey = await incrementalCache.generateCacheKey(fetchUrl, isRequestInput ? input : init);\n                } catch (err) {\n                    console.error(`Failed to generate cache key for`, input);\n                }\n            }\n            const fetchIdx = workStore.nextFetchId ?? 1;\n            workStore.nextFetchId = fetchIdx + 1;\n            let handleUnlock = ()=>Promise.resolve();\n            const doOriginalFetch = async (isStale, cacheReasonOverride)=>{\n                const requestInputFields = [\n                    'cache',\n                    'credentials',\n                    'headers',\n                    'integrity',\n                    'keepalive',\n                    'method',\n                    'mode',\n                    'redirect',\n                    'referrer',\n                    'referrerPolicy',\n                    'window',\n                    'duplex',\n                    // don't pass through signal when revalidating\n                    ...isStale ? [] : [\n                        'signal'\n                    ]\n                ];\n                if (isRequestInput) {\n                    const reqInput = input;\n                    const reqOptions = {\n                        body: reqInput._ogBody || reqInput.body\n                    };\n                    for (const field of requestInputFields){\n                        // @ts-expect-error custom fields\n                        reqOptions[field] = reqInput[field];\n                    }\n                    input = new Request(reqInput.url, reqOptions);\n                } else if (init) {\n                    const { _ogBody, body, signal, ...otherInput } = init;\n                    init = {\n                        ...otherInput,\n                        body: _ogBody || body,\n                        signal: isStale ? undefined : signal\n                    };\n                }\n                // add metadata to init without editing the original\n                const clonedInit = {\n                    ...init,\n                    next: {\n                        ...init == null ? void 0 : init.next,\n                        fetchType: 'origin',\n                        fetchIdx\n                    }\n                };\n                return originFetch(input, clonedInit).then(async (res)=>{\n                    if (!isStale && fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason: cacheReasonOverride || cacheReason,\n                            cacheStatus: finalRevalidate === 0 || cacheReasonOverride ? 'skip' : 'miss',\n                            cacheWarning,\n                            status: res.status,\n                            method: clonedInit.method || 'GET'\n                        });\n                    }\n                    if (res.status === 200 && incrementalCache && cacheKey && (isCacheableRevalidate || (requestStore == null ? void 0 : requestStore.serverComponentsHmrCache))) {\n                        const normalizedRevalidate = finalRevalidate >= INFINITE_CACHE ? CACHE_ONE_YEAR : finalRevalidate;\n                        const externalRevalidate = finalRevalidate >= INFINITE_CACHE ? false : finalRevalidate;\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            // We are prerendering at build time or revalidate time with dynamicIO so we need to\n                            // buffer the response so we can guarantee it can be read in a microtask\n                            const bodyBuffer = await res.arrayBuffer();\n                            const fetchedData = {\n                                headers: Object.fromEntries(res.headers.entries()),\n                                body: Buffer.from(bodyBuffer).toString('base64'),\n                                status: res.status,\n                                url: res.url\n                            };\n                            // We can skip checking the serverComponentsHmrCache because we aren't in\n                            // dev mode.\n                            await incrementalCache.set(cacheKey, {\n                                kind: CachedRouteKind.FETCH,\n                                data: fetchedData,\n                                revalidate: normalizedRevalidate\n                            }, {\n                                fetchCache: true,\n                                revalidate: externalRevalidate,\n                                fetchUrl,\n                                fetchIdx,\n                                tags\n                            });\n                            await handleUnlock();\n                            // We return a new Response to the caller.\n                            return new Response(bodyBuffer, {\n                                headers: res.headers,\n                                status: res.status,\n                                statusText: res.statusText\n                            });\n                        } else {\n                            // We're cloning the response using this utility because there\n                            // exists a bug in the undici library around response cloning.\n                            // See the following pull request for more details:\n                            // https://github.com/vercel/next.js/pull/73274\n                            const [cloned1, cloned2] = cloneResponse(res);\n                            // We are dynamically rendering including dev mode. We want to return\n                            // the response to the caller as soon as possible because it might stream\n                            // over a very long time.\n                            cloned1.arrayBuffer().then(async (arrayBuffer)=>{\n                                var _requestStore_serverComponentsHmrCache;\n                                const bodyBuffer = Buffer.from(arrayBuffer);\n                                const fetchedData = {\n                                    headers: Object.fromEntries(cloned1.headers.entries()),\n                                    body: bodyBuffer.toString('base64'),\n                                    status: cloned1.status,\n                                    url: cloned1.url\n                                };\n                                requestStore == null ? void 0 : (_requestStore_serverComponentsHmrCache = requestStore.serverComponentsHmrCache) == null ? void 0 : _requestStore_serverComponentsHmrCache.set(cacheKey, fetchedData);\n                                if (isCacheableRevalidate) {\n                                    await incrementalCache.set(cacheKey, {\n                                        kind: CachedRouteKind.FETCH,\n                                        data: fetchedData,\n                                        revalidate: normalizedRevalidate\n                                    }, {\n                                        fetchCache: true,\n                                        revalidate: externalRevalidate,\n                                        fetchUrl,\n                                        fetchIdx,\n                                        tags\n                                    });\n                                }\n                            }).catch((error)=>console.warn(`Failed to set fetch cache`, input, error)).finally(handleUnlock);\n                            return cloned2;\n                        }\n                    }\n                    // we had response that we determined shouldn't be cached so we return it\n                    // and don't cache it. This also needs to unlock the cache lock we acquired.\n                    await handleUnlock();\n                    return res;\n                }).catch((error)=>{\n                    handleUnlock();\n                    throw error;\n                });\n            };\n            let cacheReasonOverride;\n            let isForegroundRevalidate = false;\n            let isHmrRefreshCache = false;\n            if (cacheKey && incrementalCache) {\n                let cachedFetchData;\n                if ((requestStore == null ? void 0 : requestStore.isHmrRefresh) && requestStore.serverComponentsHmrCache) {\n                    cachedFetchData = requestStore.serverComponentsHmrCache.get(cacheKey);\n                    isHmrRefreshCache = true;\n                }\n                if (isCacheableRevalidate && !cachedFetchData) {\n                    handleUnlock = await incrementalCache.lock(cacheKey);\n                    const entry = workStore.isOnDemandRevalidate ? null : await incrementalCache.get(cacheKey, {\n                        kind: IncrementalCacheKind.FETCH,\n                        revalidate: finalRevalidate,\n                        fetchUrl,\n                        fetchIdx,\n                        tags,\n                        softTags: implicitTags,\n                        isFallback: false\n                    });\n                    if (hasNoExplicitCacheConfig) {\n                        // We sometimes use the cache to dedupe fetches that do not specify a cache configuration\n                        // In these cases we want to make sure we still exclude them from prerenders if dynamicIO is on\n                        // so we introduce an artificial Task boundary here.\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            await waitAtLeastOneReactRenderTask();\n                        }\n                    }\n                    if (entry) {\n                        await handleUnlock();\n                    } else {\n                        // in dev, incremental cache response will be null in case the browser adds `cache-control: no-cache` in the request headers\n                        cacheReasonOverride = 'cache-control: no-cache (hard refresh)';\n                    }\n                    if ((entry == null ? void 0 : entry.value) && entry.value.kind === CachedRouteKind.FETCH) {\n                        // when stale and is revalidating we wait for fresh data\n                        // so the revalidated entry has the updated data\n                        if (workStore.isRevalidate && entry.isStale) {\n                            isForegroundRevalidate = true;\n                        } else {\n                            if (entry.isStale) {\n                                workStore.pendingRevalidates ??= {};\n                                if (!workStore.pendingRevalidates[cacheKey]) {\n                                    const pendingRevalidate = doOriginalFetch(true).then(async (response)=>({\n                                            body: await response.arrayBuffer(),\n                                            headers: response.headers,\n                                            status: response.status,\n                                            statusText: response.statusText\n                                        })).finally(()=>{\n                                        workStore.pendingRevalidates ??= {};\n                                        delete workStore.pendingRevalidates[cacheKey || ''];\n                                    });\n                                    // Attach the empty catch here so we don't get a \"unhandled\n                                    // promise rejection\" warning.\n                                    pendingRevalidate.catch(console.error);\n                                    workStore.pendingRevalidates[cacheKey] = pendingRevalidate;\n                                }\n                            }\n                            cachedFetchData = entry.value.data;\n                        }\n                    }\n                }\n                if (cachedFetchData) {\n                    if (fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason,\n                            cacheStatus: isHmrRefreshCache ? 'hmr' : 'hit',\n                            cacheWarning,\n                            status: cachedFetchData.status || 200,\n                            method: (init == null ? void 0 : init.method) || 'GET'\n                        });\n                    }\n                    const response = new Response(Buffer.from(cachedFetchData.body, 'base64'), {\n                        headers: cachedFetchData.headers,\n                        status: cachedFetchData.status\n                    });\n                    Object.defineProperty(response, 'url', {\n                        value: cachedFetchData.url\n                    });\n                    return response;\n                }\n            }\n            if (workStore.isStaticGeneration && init && typeof init === 'object') {\n                const { cache } = init;\n                // Delete `cache` property as Cloudflare Workers will throw an error\n                if (isEdgeRuntime) delete init.cache;\n                if (cache === 'no-store') {\n                    // If enabled, we should bail out of static generation.\n                    if (workUnitStore && workUnitStore.type === 'prerender') {\n                        if (cacheSignal) {\n                            cacheSignal.endRead();\n                            cacheSignal = null;\n                        }\n                        return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                    } else {\n                        markCurrentScopeAsDynamic(workStore, workUnitStore, `no-store fetch ${input} ${workStore.route}`);\n                    }\n                }\n                const hasNextConfig = 'next' in init;\n                const { next = {} } = init;\n                if (typeof next.revalidate === 'number' && revalidateStore && next.revalidate < revalidateStore.revalidate) {\n                    if (next.revalidate === 0) {\n                        // If enabled, we should bail out of static generation.\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                        } else {\n                            markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                        }\n                    }\n                    if (!workStore.forceStatic || next.revalidate !== 0) {\n                        revalidateStore.revalidate = next.revalidate;\n                    }\n                }\n                if (hasNextConfig) delete init.next;\n            }\n            // if we are revalidating the whole page via time or on-demand and\n            // the fetch cache entry is stale we should still de-dupe the\n            // origin hit if it's a cache-able entry\n            if (cacheKey && isForegroundRevalidate) {\n                const pendingRevalidateKey = cacheKey;\n                workStore.pendingRevalidates ??= {};\n                let pendingRevalidate = workStore.pendingRevalidates[pendingRevalidateKey];\n                if (pendingRevalidate) {\n                    const revalidatedResult = await pendingRevalidate;\n                    return new Response(revalidatedResult.body, {\n                        headers: revalidatedResult.headers,\n                        status: revalidatedResult.status,\n                        statusText: revalidatedResult.statusText\n                    });\n                }\n                // We used to just resolve the Response and clone it however for\n                // static generation with dynamicIO we need the response to be able to\n                // be resolved in a microtask and cloning the response will never have\n                // a body that can resolve in a microtask in node (as observed through\n                // experimentation) So instead we await the body and then when it is\n                // available we construct manually cloned Response objects with the\n                // body as an ArrayBuffer. This will be resolvable in a microtask\n                // making it compatible with dynamicIO.\n                const pendingResponse = doOriginalFetch(true, cacheReasonOverride)// We're cloning the response using this utility because there\n                // exists a bug in the undici library around response cloning.\n                // See the following pull request for more details:\n                // https://github.com/vercel/next.js/pull/73274\n                .then(cloneResponse);\n                pendingRevalidate = pendingResponse.then(async (responses)=>{\n                    const response = responses[0];\n                    return {\n                        body: await response.arrayBuffer(),\n                        headers: response.headers,\n                        status: response.status,\n                        statusText: response.statusText\n                    };\n                }).finally(()=>{\n                    var _workStore_pendingRevalidates;\n                    // If the pending revalidate is not present in the store, then\n                    // we have nothing to delete.\n                    if (!((_workStore_pendingRevalidates = workStore.pendingRevalidates) == null ? void 0 : _workStore_pendingRevalidates[pendingRevalidateKey])) {\n                        return;\n                    }\n                    delete workStore.pendingRevalidates[pendingRevalidateKey];\n                });\n                // Attach the empty catch here so we don't get a \"unhandled promise\n                // rejection\" warning\n                pendingRevalidate.catch(()=>{});\n                workStore.pendingRevalidates[pendingRevalidateKey] = pendingRevalidate;\n                return pendingResponse.then((responses)=>responses[1]);\n            } else {\n                return doOriginalFetch(false, cacheReasonOverride);\n            }\n        });\n        if (cacheSignal) {\n            try {\n                return await result;\n            } finally{\n                if (cacheSignal) {\n                    cacheSignal.endRead();\n                }\n            }\n        }\n        return result;\n    };\n    // Attach the necessary properties to the patched fetch function.\n    // We don't use this to determine if the fetch function has been patched,\n    // but for external consumers to determine if the fetch function has been\n    // patched.\n    patched.__nextPatched = true;\n    patched.__nextGetStaticStore = ()=>workAsyncStorage;\n    patched._nextOriginalFetch = originFetch;\n    globalThis[NEXT_PATCH_SYMBOL] = true;\n    return patched;\n}\n// we patch fetch to collect cache information used for\n// determining if a page is static or not\nexport function patchFetch(options) {\n    // If we've already patched fetch, we should not patch it again.\n    if (isFetchPatched()) return;\n    // Grab the original fetch function. We'll attach this so we can use it in\n    // the patched fetch function.\n    const original = createDedupeFetch(globalThis.fetch);\n    // Set the global fetch to the patched fetch.\n    globalThis.fetch = createPatchedFetcher(original, options);\n}\n\n//# sourceMappingURL=patch-fetch.js.map","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/ // eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */ var BaseServerSpan = /*#__PURE__*/ function(BaseServerSpan) {\n    BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\n    BaseServerSpan[\"run\"] = \"BaseServer.run\";\n    BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\n    BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\n    BaseServerSpan[\"render\"] = \"BaseServer.render\";\n    BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\n    BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\n    BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\n    BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\n    BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\n    BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\n    BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\n    return BaseServerSpan;\n}(BaseServerSpan || {});\nvar LoadComponentsSpan = /*#__PURE__*/ function(LoadComponentsSpan) {\n    LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\n    LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\n    return LoadComponentsSpan;\n}(LoadComponentsSpan || {});\nvar NextServerSpan = /*#__PURE__*/ function(NextServerSpan) {\n    NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\n    NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\n    NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\n    NextServerSpan[\"createServer\"] = \"createServer.createServer\";\n    return NextServerSpan;\n}(NextServerSpan || {});\nvar NextNodeServerSpan = /*#__PURE__*/ function(NextNodeServerSpan) {\n    NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\n    NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\n    NextNodeServerSpan[\"createComponentTree\"] = \"NextNodeServer.createComponentTree\";\n    NextNodeServerSpan[\"clientComponentLoading\"] = \"NextNodeServer.clientComponentLoading\";\n    NextNodeServerSpan[\"getLayoutOrPageModule\"] = \"NextNodeServer.getLayoutOrPageModule\";\n    NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\n    NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\n    NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\n    NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\n    NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\n    NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\n    NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\n    NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\n    NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\n    NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\n    NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\n    NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\n    NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\n    NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\n    NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\n    NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\n    NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\n    NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\n    NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\n    NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\n    NextNodeServerSpan[\"startResponse\"] = \"NextNodeServer.startResponse\";\n    // nested inner span, does not require parent scope name\n    NextNodeServerSpan[\"route\"] = \"route\";\n    NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\n    NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\n    NextNodeServerSpan[\"internalFetch\"] = \"internalFetch\";\n    return NextNodeServerSpan;\n}(NextNodeServerSpan || {});\nvar StartServerSpan = /*#__PURE__*/ function(StartServerSpan) {\n    StartServerSpan[\"startServer\"] = \"startServer.startServer\";\n    return StartServerSpan;\n}(StartServerSpan || {});\nvar RenderSpan = /*#__PURE__*/ function(RenderSpan) {\n    RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\n    RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\n    RenderSpan[\"renderToString\"] = \"Render.renderToString\";\n    RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\n    RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\n    return RenderSpan;\n}(RenderSpan || {});\nvar AppRenderSpan = /*#__PURE__*/ function(AppRenderSpan) {\n    AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\n    AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\n    AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\n    AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\n    return AppRenderSpan;\n}(AppRenderSpan || {});\nvar RouterSpan = /*#__PURE__*/ function(RouterSpan) {\n    RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\n    return RouterSpan;\n}(RouterSpan || {});\nvar NodeSpan = /*#__PURE__*/ function(NodeSpan) {\n    NodeSpan[\"runHandler\"] = \"Node.runHandler\";\n    return NodeSpan;\n}(NodeSpan || {});\nvar AppRouteRouteHandlersSpan = /*#__PURE__*/ function(AppRouteRouteHandlersSpan) {\n    AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\n    return AppRouteRouteHandlersSpan;\n}(AppRouteRouteHandlersSpan || {});\nvar ResolveMetadataSpan = /*#__PURE__*/ function(ResolveMetadataSpan) {\n    ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\n    ResolveMetadataSpan[\"generateViewport\"] = \"ResolveMetadata.generateViewport\";\n    return ResolveMetadataSpan;\n}(ResolveMetadataSpan || {});\nvar MiddlewareSpan = /*#__PURE__*/ function(MiddlewareSpan) {\n    MiddlewareSpan[\"execute\"] = \"Middleware.execute\";\n    return MiddlewareSpan;\n}(MiddlewareSpan || {});\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n    \"Middleware.execute\",\n    \"BaseServer.handleRequest\",\n    \"Render.getServerSideProps\",\n    \"Render.getStaticProps\",\n    \"AppRender.fetch\",\n    \"AppRender.getBodyResult\",\n    \"Render.renderDocument\",\n    \"Node.runHandler\",\n    \"AppRouteRouteHandlers.runHandler\",\n    \"ResolveMetadata.generateMetadata\",\n    \"ResolveMetadata.generateViewport\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.getLayoutOrPageModule\",\n    \"NextNodeServer.startResponse\",\n    \"NextNodeServer.clientComponentLoading\"\n];\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.clientComponentLoading\"\n];\nexport { BaseServerSpan, LoadComponentsSpan, NextServerSpan, NextNodeServerSpan, StartServerSpan, RenderSpan, RouterSpan, AppRenderSpan, NodeSpan, AppRouteRouteHandlersSpan, ResolveMetadataSpan, MiddlewareSpan,  };\n\n//# sourceMappingURL=constants.js.map","import { LogSpanAllowList, NextVanillaSpanAllowlist } from './constants';\nimport { isThenable } from '../../../shared/lib/is-thenable';\nlet api;\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (process.env.NEXT_RUNTIME === 'edge') {\n    api = require('@opentelemetry/api');\n} else {\n    try {\n        api = require('@opentelemetry/api');\n    } catch (err) {\n        api = require('next/dist/compiled/@opentelemetry/api');\n    }\n}\nconst { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } = api;\nexport class BubbledError extends Error {\n    constructor(bubble, result){\n        super(), this.bubble = bubble, this.result = result;\n    }\n}\nexport function isBubbledError(error) {\n    if (typeof error !== 'object' || error === null) return false;\n    return error instanceof BubbledError;\n}\nconst closeSpanWithError = (span, error)=>{\n    if (isBubbledError(error) && error.bubble) {\n        span.setAttribute('next.bubble', true);\n    } else {\n        if (error) {\n            span.recordException(error);\n        }\n        span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error == null ? void 0 : error.message\n        });\n    }\n    span.end();\n};\n/** we use this map to propagate attributes from nested spans to the top span */ const rootSpanAttributesStore = new Map();\nconst rootSpanIdKey = api.createContextKey('next.rootSpanId');\nlet lastSpanId = 0;\nconst getSpanId = ()=>lastSpanId++;\nconst clientTraceDataSetter = {\n    set (carrier, key, value) {\n        carrier.push({\n            key,\n            value\n        });\n    }\n};\nclass NextTracerImpl {\n    /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */ getTracerInstance() {\n        return trace.getTracer('next.js', '0.0.1');\n    }\n    getContext() {\n        return context;\n    }\n    getTracePropagationData() {\n        const activeContext = context.active();\n        const entries = [];\n        propagation.inject(activeContext, entries, clientTraceDataSetter);\n        return entries;\n    }\n    getActiveScopeSpan() {\n        return trace.getSpan(context == null ? void 0 : context.active());\n    }\n    withPropagatedContext(carrier, fn, getter) {\n        const activeContext = context.active();\n        if (trace.getSpanContext(activeContext)) {\n            // Active span is already set, too late to propagate.\n            return fn();\n        }\n        const remoteContext = propagation.extract(activeContext, carrier, getter);\n        return context.with(remoteContext, fn);\n    }\n    trace(...args) {\n        var _trace_getSpanContext;\n        const [type, fnOrOptions, fnOrEmpty] = args;\n        // coerce options form overload\n        const { fn, options } = typeof fnOrOptions === 'function' ? {\n            fn: fnOrOptions,\n            options: {}\n        } : {\n            fn: fnOrEmpty,\n            options: {\n                ...fnOrOptions\n            }\n        };\n        const spanName = options.spanName ?? type;\n        if (!NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== '1' || options.hideSpan) {\n            return fn();\n        }\n        // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n        let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        let isRootSpan = false;\n        if (!spanContext) {\n            spanContext = (context == null ? void 0 : context.active()) ?? ROOT_CONTEXT;\n            isRootSpan = true;\n        } else if ((_trace_getSpanContext = trace.getSpanContext(spanContext)) == null ? void 0 : _trace_getSpanContext.isRemote) {\n            isRootSpan = true;\n        }\n        const spanId = getSpanId();\n        options.attributes = {\n            'next.span_name': spanName,\n            'next.span_type': type,\n            ...options.attributes\n        };\n        return context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{\n                const startTime = 'performance' in globalThis && 'measure' in performance ? globalThis.performance.now() : undefined;\n                const onCleanup = ()=>{\n                    rootSpanAttributesStore.delete(spanId);\n                    if (startTime && process.env.NEXT_OTEL_PERFORMANCE_PREFIX && LogSpanAllowList.includes(type || '')) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(type.split('.').pop() || '').replace(/[A-Z]/g, (match)=>'-' + match.toLowerCase())}`, {\n                            start: startTime,\n                            end: performance.now()\n                        });\n                    }\n                };\n                if (isRootSpan) {\n                    rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));\n                }\n                try {\n                    if (fn.length > 1) {\n                        return fn(span, (err)=>closeSpanWithError(span, err));\n                    }\n                    const result = fn(span);\n                    if (isThenable(result)) {\n                        // If there's error make sure it throws\n                        return result.then((res)=>{\n                            span.end();\n                            // Need to pass down the promise result,\n                            // it could be react stream response with error { error, stream }\n                            return res;\n                        }).catch((err)=>{\n                            closeSpanWithError(span, err);\n                            throw err;\n                        }).finally(onCleanup);\n                    } else {\n                        span.end();\n                        onCleanup();\n                    }\n                    return result;\n                } catch (err) {\n                    closeSpanWithError(span, err);\n                    onCleanup();\n                    throw err;\n                }\n            }));\n    }\n    wrap(...args) {\n        const tracer = this;\n        const [name, options, fn] = args.length === 3 ? args : [\n            args[0],\n            {},\n            args[1]\n        ];\n        if (!NextVanillaSpanAllowlist.includes(name) && process.env.NEXT_OTEL_VERBOSE !== '1') {\n            return fn;\n        }\n        return function() {\n            let optionsObj = options;\n            if (typeof optionsObj === 'function' && typeof fn === 'function') {\n                optionsObj = optionsObj.apply(this, arguments);\n            }\n            const lastArgId = arguments.length - 1;\n            const cb = arguments[lastArgId];\n            if (typeof cb === 'function') {\n                const scopeBoundCb = tracer.getContext().bind(context.active(), cb);\n                return tracer.trace(name, optionsObj, (_span, done)=>{\n                    arguments[lastArgId] = function(err) {\n                        done == null ? void 0 : done(err);\n                        return scopeBoundCb.apply(this, arguments);\n                    };\n                    return fn.apply(this, arguments);\n                });\n            } else {\n                return tracer.trace(name, optionsObj, ()=>fn.apply(this, arguments));\n            }\n        };\n    }\n    startSpan(...args) {\n        const [type, options] = args;\n        const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        return this.getTracerInstance().startSpan(type, options, spanContext);\n    }\n    getSpanContext(parentSpan) {\n        const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined;\n        return spanContext;\n    }\n    getRootSpanAttributes() {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        return rootSpanAttributesStore.get(spanId);\n    }\n    setRootSpanAttribute(key, value) {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        const attributes = rootSpanAttributesStore.get(spanId);\n        if (attributes) {\n            attributes.set(key, value);\n        }\n    }\n}\nconst getTracer = (()=>{\n    const tracer = new NextTracerImpl();\n    return ()=>tracer;\n})();\nexport { getTracer, SpanStatusCode, SpanKind };\n\n//# sourceMappingURL=tracer.js.map","/* eslint-disable no-redeclare */ // FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta');\nexport function getRequestMeta(req, key) {\n    const meta = req[NEXT_REQUEST_META] || {};\n    return typeof key === 'string' ? meta[key] : meta;\n}\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */ export function setRequestMeta(req, meta) {\n    req[NEXT_REQUEST_META] = meta;\n    return meta;\n}\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */ export function addRequestMeta(request, key, value) {\n    const meta = getRequestMeta(request);\n    meta[key] = value;\n    return setRequestMeta(request, meta);\n}\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */ export function removeRequestMeta(request, key) {\n    const meta = getRequestMeta(request);\n    delete meta[key];\n    return setRequestMeta(request, meta);\n}\nexport function getNextInternalQuery(query) {\n    const keysToInclude = [\n        '__nextDefaultLocale',\n        '__nextFallback',\n        '__nextLocale',\n        '__nextSsgPath',\n        '_nextBubbleNoFallback',\n        '__nextDataReq',\n        '__nextInferredLocaleFromDefault'\n    ];\n    const nextInternalQuery = {};\n    for (const key of keysToInclude){\n        if (key in query) {\n            // @ts-ignore this can't be typed correctly\n            nextInternalQuery[key] = query[key];\n        }\n    }\n    return nextInternalQuery;\n}\n\n//# sourceMappingURL=request-meta.js.map","import { getRequestMeta } from '../../../request-meta';\nimport { fromNodeOutgoingHttpHeaders } from '../../utils';\nimport { NextRequest } from '../request';\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers';\nexport const ResponseAbortedName = 'ResponseAborted';\nexport class ResponseAborted extends Error {\n    constructor(...args){\n        super(...args), this.name = ResponseAbortedName;\n    }\n}\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */ export function createAbortController(response) {\n    const controller = new AbortController();\n    // If `finish` fires first, then `res.end()` has been called and the close is\n    // just us finishing the stream on our side. If `close` fires first, then we\n    // know the client disconnected before we finished.\n    response.once('close', ()=>{\n        if (response.writableFinished) return;\n        controller.abort(new ResponseAborted());\n    });\n    return controller;\n}\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */ export function signalFromNodeResponse(response) {\n    const { errored, destroyed } = response;\n    if (errored || destroyed) {\n        return AbortSignal.abort(errored ?? new ResponseAborted());\n    }\n    const { signal } = createAbortController(response);\n    return signal;\n}\nexport class NextRequestAdapter {\n    static fromBaseNextRequest(request, signal) {\n        if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME === 'edge' && isWebNextRequest(request)) {\n            return NextRequestAdapter.fromWebNextRequest(request);\n        } else if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(request)) {\n            return NextRequestAdapter.fromNodeNextRequest(request, signal);\n        } else {\n            throw new Error('Invariant: Unsupported NextRequest type');\n        }\n    }\n    static fromNodeNextRequest(request, signal) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n            // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n            body = request.body;\n        }\n        let url;\n        if (request.url.startsWith('http')) {\n            url = new URL(request.url);\n        } else {\n            // Grab the full URL from the request metadata.\n            const base = getRequestMeta(request, 'initURL');\n            if (!base || !base.startsWith('http')) {\n                // Because the URL construction relies on the fact that the URL provided\n                // is absolute, we need to provide a base URL. We can't use the request\n                // URL because it's relative, so we use a dummy URL instead.\n                url = new URL(request.url, 'http://n');\n            } else {\n                url = new URL(request.url, base);\n            }\n        }\n        return new NextRequest(url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            // @ts-expect-error - see https://github.com/whatwg/fetch/pull/1457\n            duplex: 'half',\n            signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n    static fromWebNextRequest(request) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD') {\n            body = request.body;\n        }\n        return new NextRequest(request.url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            // @ts-expect-error - see https://github.com/whatwg/fetch/pull/1457\n            duplex: 'half',\n            signal: request.request.signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...request.request.signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=next-request.js.map","import { ResponseAbortedName, createAbortController } from './web/spec-extension/adapters/next-request';\nimport { DetachedPromise } from '../lib/detached-promise';\nimport { getTracer } from './lib/trace/tracer';\nimport { NextNodeServerSpan } from './lib/trace/constants';\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger';\nexport function isAbortError(e) {\n    return (e == null ? void 0 : e.name) === 'AbortError' || (e == null ? void 0 : e.name) === ResponseAbortedName;\n}\nfunction createWriterFromResponse(res, waitUntilForEnd) {\n    let started = false;\n    // Create a promise that will resolve once the response has drained. See\n    // https://nodejs.org/api/stream.html#stream_event_drain\n    let drained = new DetachedPromise();\n    function onDrain() {\n        drained.resolve();\n    }\n    res.on('drain', onDrain);\n    // If the finish event fires, it means we shouldn't block and wait for the\n    // drain event.\n    res.once('close', ()=>{\n        res.off('drain', onDrain);\n        drained.resolve();\n    });\n    // Create a promise that will resolve once the response has finished. See\n    // https://nodejs.org/api/http.html#event-finish_1\n    const finished = new DetachedPromise();\n    res.once('finish', ()=>{\n        finished.resolve();\n    });\n    // Create a writable stream that will write to the response.\n    return new WritableStream({\n        write: async (chunk)=>{\n            // You'd think we'd want to use `start` instead of placing this in `write`\n            // but this ensures that we don't actually flush the headers until we've\n            // started writing chunks.\n            if (!started) {\n                started = true;\n                if ('performance' in globalThis && process.env.NEXT_OTEL_PERFORMANCE_PREFIX) {\n                    const metrics = getClientComponentLoaderMetrics();\n                    if (metrics) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`, {\n                            start: metrics.clientComponentLoadStart,\n                            end: metrics.clientComponentLoadStart + metrics.clientComponentLoadTimes\n                        });\n                    }\n                }\n                res.flushHeaders();\n                getTracer().trace(NextNodeServerSpan.startResponse, {\n                    spanName: 'start response'\n                }, ()=>undefined);\n            }\n            try {\n                const ok = res.write(chunk);\n                // Added by the `compression` middleware, this is a function that will\n                // flush the partially-compressed response to the client.\n                if ('flush' in res && typeof res.flush === 'function') {\n                    res.flush();\n                }\n                // If the write returns false, it means there's some backpressure, so\n                // wait until it's streamed before continuing.\n                if (!ok) {\n                    await drained.promise;\n                    // Reset the drained promise so that we can wait for the next drain event.\n                    drained = new DetachedPromise();\n                }\n            } catch (err) {\n                res.end();\n                throw new Error('failed to write chunk to response', {\n                    cause: err\n                });\n            }\n        },\n        abort: (err)=>{\n            if (res.writableFinished) return;\n            res.destroy(err);\n        },\n        close: async ()=>{\n            // if a waitUntil promise was passed, wait for it to resolve before\n            // ending the response.\n            if (waitUntilForEnd) {\n                await waitUntilForEnd;\n            }\n            if (res.writableFinished) return;\n            res.end();\n            return finished.promise;\n        }\n    });\n}\nexport async function pipeToNodeResponse(readable, res, waitUntilForEnd) {\n    try {\n        // If the response has already errored, then just return now.\n        const { errored, destroyed } = res;\n        if (errored || destroyed) return;\n        // Create a new AbortController so that we can abort the readable if the\n        // client disconnects.\n        const controller = createAbortController(res);\n        const writer = createWriterFromResponse(res, waitUntilForEnd);\n        await readable.pipeTo(writer, {\n            signal: controller.signal\n        });\n    } catch (err) {\n        // If this isn't related to an abort error, re-throw it.\n        if (isAbortError(err)) return;\n        throw new Error('failed to pipe response', {\n            cause: err\n        });\n    }\n}\n\n//# sourceMappingURL=pipe-readable.js.map","export var CachedRouteKind = /*#__PURE__*/ function(CachedRouteKind) {\n    CachedRouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    CachedRouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    CachedRouteKind[\"PAGES\"] = \"PAGES\";\n    CachedRouteKind[\"FETCH\"] = \"FETCH\";\n    CachedRouteKind[\"REDIRECT\"] = \"REDIRECT\";\n    CachedRouteKind[\"IMAGE\"] = \"IMAGE\";\n    return CachedRouteKind;\n}({});\nexport var IncrementalCacheKind = /*#__PURE__*/ function(IncrementalCacheKind) {\n    IncrementalCacheKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    IncrementalCacheKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    IncrementalCacheKind[\"PAGES\"] = \"PAGES\";\n    IncrementalCacheKind[\"FETCH\"] = \"FETCH\";\n    IncrementalCacheKind[\"IMAGE\"] = \"IMAGE\";\n    return IncrementalCacheKind;\n}({});\n\n//# sourceMappingURL=types.js.map","export const ENCODED_TAGS = {\n    // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n    OPENING: {\n        // <html\n        HTML: new Uint8Array([\n            60,\n            104,\n            116,\n            109,\n            108\n        ]),\n        // <body\n        BODY: new Uint8Array([\n            60,\n            98,\n            111,\n            100,\n            121\n        ])\n    },\n    CLOSED: {\n        // </head>\n        HEAD: new Uint8Array([\n            60,\n            47,\n            104,\n            101,\n            97,\n            100,\n            62\n        ]),\n        // </body>\n        BODY: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62\n        ]),\n        // </html>\n        HTML: new Uint8Array([\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ]),\n        // </body></html>\n        BODY_AND_HTML: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62,\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ])\n    }\n};\n\n//# sourceMappingURL=encodedTags.js.map","import { getTracer } from '../lib/trace/tracer';\nimport { AppRenderSpan } from '../lib/trace/constants';\nimport { DetachedPromise } from '../../lib/detached-promise';\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler';\nimport { ENCODED_TAGS } from './encodedTags';\nimport { indexOfUint8Array, isEquivalentUint8Arrays, removeFromUint8Array } from './uint8array-helpers';\nfunction voidCatch() {\n// this catcher is designed to be used with pipeTo where we expect the underlying\n// pipe implementation to forward errors but we don't want the pipeTo promise to reject\n// and be unhandled\n}\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder();\nexport function chainStreams(...streams) {\n    // We could encode this invariant in the arguments but current uses of this function pass\n    // use spread so it would be missed by\n    if (streams.length === 0) {\n        throw new Error('Invariant: chainStreams requires at least one stream');\n    }\n    // If we only have 1 stream we fast path it by returning just this stream\n    if (streams.length === 1) {\n        return streams[0];\n    }\n    const { readable, writable } = new TransformStream();\n    // We always initiate pipeTo immediately. We know we have at least 2 streams\n    // so we need to avoid closing the writable when this one finishes.\n    let promise = streams[0].pipeTo(writable, {\n        preventClose: true\n    });\n    let i = 1;\n    for(; i < streams.length - 1; i++){\n        const nextStream = streams[i];\n        promise = promise.then(()=>nextStream.pipeTo(writable, {\n                preventClose: true\n            }));\n    }\n    // We can omit the length check because we halted before the last stream and there\n    // is at least two streams so the lastStream here will always be defined\n    const lastStream = streams[i];\n    promise = promise.then(()=>lastStream.pipeTo(writable));\n    // Catch any errors from the streams and ignore them, they will be handled\n    // by whatever is consuming the readable stream.\n    promise.catch(voidCatch);\n    return readable;\n}\nexport function streamFromString(str) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(encoder.encode(str));\n            controller.close();\n        }\n    });\n}\nexport function streamFromBuffer(chunk) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(chunk);\n            controller.close();\n        }\n    });\n}\nexport async function streamToBuffer(stream) {\n    const reader = stream.getReader();\n    const chunks = [];\n    while(true){\n        const { done, value } = await reader.read();\n        if (done) {\n            break;\n        }\n        chunks.push(value);\n    }\n    return Buffer.concat(chunks);\n}\nexport async function streamToString(stream) {\n    const decoder = new TextDecoder('utf-8', {\n        fatal: true\n    });\n    let string = '';\n    for await (const chunk of stream){\n        string += decoder.decode(chunk, {\n            stream: true\n        });\n    }\n    string += decoder.decode();\n    return string;\n}\nexport function createBufferedTransformStream() {\n    let bufferedChunks = [];\n    let bufferByteLength = 0;\n    let pending;\n    const flush = (controller)=>{\n        // If we already have a pending flush, then return early.\n        if (pending) return;\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                const chunk = new Uint8Array(bufferByteLength);\n                let copiedBytes = 0;\n                for(let i = 0; i < bufferedChunks.length; i++){\n                    const bufferedChunk = bufferedChunks[i];\n                    chunk.set(bufferedChunk, copiedBytes);\n                    copiedBytes += bufferedChunk.byteLength;\n                }\n                // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n                // and our bufferByteLength to prepare for the next round of buffered chunks\n                bufferedChunks.length = 0;\n                bufferByteLength = 0;\n                controller.enqueue(chunk);\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            // Combine the previous buffer with the new chunk.\n            bufferedChunks.push(chunk);\n            bufferByteLength += chunk.byteLength;\n            // Flush the buffer to the controller.\n            flush(controller);\n        },\n        flush () {\n            if (!pending) return;\n            return pending.promise;\n        }\n    });\n}\nfunction createInsertedHTMLStream(getServerInsertedHTML) {\n    return new TransformStream({\n        transform: async (chunk, controller)=>{\n            const html = await getServerInsertedHTML();\n            if (html) {\n                controller.enqueue(encoder.encode(html));\n            }\n            controller.enqueue(chunk);\n        }\n    });\n}\nexport function renderToInitialFizzStream({ ReactDOMServer, element, streamOptions }) {\n    return getTracer().trace(AppRenderSpan.renderToReadableStream, async ()=>ReactDOMServer.renderToReadableStream(element, streamOptions));\n}\nfunction createHeadInsertionTransformStream(insert) {\n    let inserted = false;\n    let freezing = false;\n    // We need to track if this transform saw any bytes because if it didn't\n    // we won't want to insert any server HTML at all\n    let hasBytes = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            hasBytes = true;\n            // While react is flushing chunks, we don't apply insertions\n            if (freezing) {\n                controller.enqueue(chunk);\n                return;\n            }\n            const insertion = await insert();\n            if (inserted) {\n                if (insertion) {\n                    const encodedInsertion = encoder.encode(insertion);\n                    controller.enqueue(encodedInsertion);\n                }\n                controller.enqueue(chunk);\n                freezing = true;\n            } else {\n                // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n                const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD);\n                if (index !== -1) {\n                    if (insertion) {\n                        const encodedInsertion = encoder.encode(insertion);\n                        const insertedHeadContent = new Uint8Array(chunk.length + encodedInsertion.length);\n                        insertedHeadContent.set(chunk.slice(0, index));\n                        insertedHeadContent.set(encodedInsertion, index);\n                        insertedHeadContent.set(chunk.slice(index), index + encodedInsertion.length);\n                        controller.enqueue(insertedHeadContent);\n                    } else {\n                        controller.enqueue(chunk);\n                    }\n                    freezing = true;\n                    inserted = true;\n                }\n            }\n            if (!inserted) {\n                controller.enqueue(chunk);\n            } else {\n                scheduleImmediate(()=>{\n                    freezing = false;\n                });\n            }\n        },\n        async flush (controller) {\n            // Check before closing if there's anything remaining to insert.\n            if (hasBytes) {\n                const insertion = await insert();\n                if (insertion) {\n                    controller.enqueue(encoder.encode(insertion));\n                }\n            }\n        }\n    });\n}\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(suffix) {\n    let flushed = false;\n    let pending;\n    const flush = (controller)=>{\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                controller.enqueue(encoder.encode(suffix));\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // If we've already flushed, we're done.\n            if (flushed) return;\n            // Schedule the flush to happen.\n            flushed = true;\n            flush(controller);\n        },\n        flush (controller) {\n            if (pending) return pending.promise;\n            if (flushed) return;\n            // Flush now.\n            controller.enqueue(encoder.encode(suffix));\n        }\n    });\n}\n// Merge two streams into one. Ensure the final transform stream is closed\n// when both are finished.\nfunction createMergedTransformStream(stream) {\n    let pull = null;\n    let donePulling = false;\n    async function startPulling(controller) {\n        if (pull) {\n            return;\n        }\n        const reader = stream.getReader();\n        // NOTE: streaming flush\n        // We are buffering here for the inlined data stream because the\n        // \"shell\" stream might be chunkenized again by the underlying stream\n        // implementation, e.g. with a specific high-water mark. To ensure it's\n        // the safe timing to pipe the data stream, this extra tick is\n        // necessary.\n        // We don't start reading until we've left the current Task to ensure\n        // that it's inserted after flushing the shell. Note that this implementation\n        // might get stale if impl details of Fizz change in the future.\n        await atLeastOneTask();\n        try {\n            while(true){\n                const { done, value } = await reader.read();\n                if (done) {\n                    donePulling = true;\n                    return;\n                }\n                controller.enqueue(value);\n            }\n        } catch (err) {\n            controller.error(err);\n        }\n    }\n    return new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // Start the streaming if it hasn't already been started yet.\n            if (!pull) {\n                pull = startPulling(controller);\n            }\n        },\n        flush (controller) {\n            if (donePulling) {\n                return;\n            }\n            return pull || startPulling(controller);\n        }\n    });\n}\nconst CLOSE_TAG = '</body></html>';\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */ function createMoveSuffixStream() {\n    let foundSuffix = false;\n    return new TransformStream({\n        transform (chunk, controller) {\n            if (foundSuffix) {\n                return controller.enqueue(chunk);\n            }\n            const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n            if (index > -1) {\n                foundSuffix = true;\n                // If the whole chunk is the suffix, then don't write anything, it will\n                // be written in the flush.\n                if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n                    return;\n                }\n                // Write out the part before the suffix.\n                const before = chunk.slice(0, index);\n                controller.enqueue(before);\n                // In the case where the suffix is in the middle of the chunk, we need\n                // to split the chunk into two parts.\n                if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n                    // Write out the part after the suffix.\n                    const after = chunk.slice(index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length);\n                    controller.enqueue(after);\n                }\n            } else {\n                controller.enqueue(chunk);\n            }\n        },\n        flush (controller) {\n            // Even if we didn't find the suffix, the HTML is not valid if we don't\n            // add it, so insert it at the end.\n            controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n        }\n    });\n}\nfunction createStripDocumentClosingTagsTransform() {\n    return new TransformStream({\n        transform (chunk, controller) {\n            // We rely on the assumption that chunks will never break across a code unit.\n            // This is reasonable because we currently concat all of React's output from a single\n            // flush into one chunk before streaming it forward which means the chunk will represent\n            // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n            // longer do this large buffered chunk\n            if (isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)) {\n                // the entire chunk is the closing tags; return without enqueueing anything.\n                return;\n            }\n            // We assume these tags will go at together at the end of the document and that\n            // they won't appear anywhere else in the document. This is not really a safe assumption\n            // but until we revamp our streaming infra this is a performant way to string the tags\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY);\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML);\n            controller.enqueue(chunk);\n        }\n    });\n}\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */ export function createRootLayoutValidatorStream() {\n    let foundHtml = false;\n    let foundBody = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            // Peek into the streamed chunk to see if the tags are present.\n            if (!foundHtml && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1) {\n                foundHtml = true;\n            }\n            if (!foundBody && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1) {\n                foundBody = true;\n            }\n            controller.enqueue(chunk);\n        },\n        flush (controller) {\n            const missingTags = [];\n            if (!foundHtml) missingTags.push('html');\n            if (!foundBody) missingTags.push('body');\n            if (!missingTags.length) return;\n            controller.enqueue(encoder.encode(`<script>self.__next_root_layout_missing_tags=${JSON.stringify(missingTags)}</script>`));\n        }\n    });\n}\nfunction chainTransformers(readable, transformers) {\n    let stream = readable;\n    for (const transformer of transformers){\n        if (!transformer) continue;\n        stream = stream.pipeThrough(transformer);\n    }\n    return stream;\n}\nexport async function continueFizzStream(renderStream, { suffix, inlinedDataStream, isStaticGeneration, getServerInsertedHTML, serverInsertedHTMLToHead, validateRootLayout }) {\n    // Suffix itself might contain close tags at the end, so we need to split it.\n    const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null;\n    // If we're generating static HTML and there's an `allReady` promise on the\n    // stream, we need to wait for it to resolve before continuing.\n    if (isStaticGeneration && 'allReady' in renderStream) {\n        await renderStream.allReady;\n    }\n    return chainTransformers(renderStream, [\n        // Buffer everything to avoid flushing too frequently\n        createBufferedTransformStream(),\n        // Insert generated tags to head\n        getServerInsertedHTML && !serverInsertedHTMLToHead ? createInsertedHTMLStream(getServerInsertedHTML) : null,\n        // Insert suffix content\n        suffixUnclosed != null && suffixUnclosed.length > 0 ? createDeferredSuffixStream(suffixUnclosed) : null,\n        // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n        inlinedDataStream ? createMergedTransformStream(inlinedDataStream) : null,\n        // Validate the root layout for missing html or body tags\n        validateRootLayout ? createRootLayoutValidatorStream() : null,\n        // Close tags should always be deferred to the end\n        createMoveSuffixStream(),\n        // Special head insertions\n        // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n        // hydration errors. Remove this once it's ready to be handled by react itself.\n        getServerInsertedHTML && serverInsertedHTMLToHead ? createHeadInsertionTransformStream(getServerInsertedHTML) : null\n    ]);\n}\nexport async function continueDynamicPrerender(prerenderStream, { getServerInsertedHTML }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream()).pipeThrough(createStripDocumentClosingTagsTransform())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML));\n}\nexport async function continueStaticPrerender(prerenderStream, { inlinedDataStream, getServerInsertedHTML }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createMergedTransformStream(inlinedDataStream))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport async function continueDynamicHTMLResume(renderStream, { inlinedDataStream, getServerInsertedHTML }) {\n    return renderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createMergedTransformStream(inlinedDataStream))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport function createDocumentClosingStream() {\n    return streamFromString(CLOSE_TAG);\n}\n\n//# sourceMappingURL=node-web-streams-helper.js.map","import { chainStreams, streamFromBuffer, streamFromString, streamToBuffer, streamToString } from './stream-utils/node-web-streams-helper';\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable';\nexport default class RenderResult {\n    /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @returns a new RenderResult instance\n   */ static fromStatic(value) {\n        return new RenderResult(value, {\n            metadata: {}\n        });\n    }\n    constructor(response, { contentType, waitUntil, metadata }){\n        this.response = response;\n        this.contentType = contentType;\n        this.metadata = metadata;\n        this.waitUntil = waitUntil;\n    }\n    assignMetadata(metadata) {\n        Object.assign(this.metadata, metadata);\n    }\n    /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */ get isNull() {\n        return this.response === null;\n    }\n    /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */ get isDynamic() {\n        return typeof this.response !== 'string';\n    }\n    toUnchunkedBuffer(stream = false) {\n        if (this.response === null) {\n            throw new Error('Invariant: null responses cannot be unchunked');\n        }\n        if (typeof this.response !== 'string') {\n            if (!stream) {\n                throw new Error('Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js');\n            }\n            return streamToBuffer(this.readable);\n        }\n        return Buffer.from(this.response);\n    }\n    toUnchunkedString(stream = false) {\n        if (this.response === null) {\n            throw new Error('Invariant: null responses cannot be unchunked');\n        }\n        if (typeof this.response !== 'string') {\n            if (!stream) {\n                throw new Error('Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js');\n            }\n            return streamToString(this.readable);\n        }\n        return this.response;\n    }\n    /**\n   * Returns the response if it is a stream, or throws an error if it is a\n   * string.\n   */ get readable() {\n        if (this.response === null) {\n            throw new Error('Invariant: null responses cannot be streamed');\n        }\n        if (typeof this.response === 'string') {\n            throw new Error('Invariant: static responses cannot be streamed');\n        }\n        if (Buffer.isBuffer(this.response)) {\n            return streamFromBuffer(this.response);\n        }\n        // If the response is an array of streams, then chain them together.\n        if (Array.isArray(this.response)) {\n            return chainStreams(...this.response);\n        }\n        return this.response;\n    }\n    /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */ chain(readable) {\n        if (this.response === null) {\n            throw new Error('Invariant: response is null. This is a bug in Next.js');\n        }\n        // If the response is not an array of streams already, make it one.\n        let responses;\n        if (typeof this.response === 'string') {\n            responses = [\n                streamFromString(this.response)\n            ];\n        } else if (Array.isArray(this.response)) {\n            responses = this.response;\n        } else if (Buffer.isBuffer(this.response)) {\n            responses = [\n                streamFromBuffer(this.response)\n            ];\n        } else {\n            responses = [\n                this.response\n            ];\n        }\n        // Add the new stream to the array.\n        responses.push(readable);\n        // Update the response.\n        this.response = responses;\n    }\n    /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */ async pipeTo(writable) {\n        try {\n            await this.readable.pipeTo(writable, {\n                // We want to close the writable stream ourselves so that we can wait\n                // for the waitUntil promise to resolve before closing it. If an error\n                // is encountered, we'll abort the writable stream if we swallowed the\n                // error.\n                preventClose: true\n            });\n            // If there is a waitUntil promise, wait for it to resolve before\n            // closing the writable stream.\n            if (this.waitUntil) await this.waitUntil;\n            // Close the writable stream.\n            await writable.close();\n        } catch (err) {\n            // If this is an abort error, we should abort the writable stream (as we\n            // took ownership of it when we started piping). We don't need to re-throw\n            // because we handled the error.\n            if (isAbortError(err)) {\n                // Abort the writable stream if an error is encountered.\n                await writable.abort(err);\n                return;\n            }\n            // We're not aborting the writer here as when this method throws it's not\n            // clear as to how so the caller should assume it's their responsibility\n            // to clean up the writer.\n            throw err;\n        }\n    }\n    /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */ async pipeToNodeResponse(res) {\n        await pipeToNodeResponse(this.readable, res, this.waitUntil);\n    }\n}\n\n//# sourceMappingURL=render-result.js.map","import { CachedRouteKind, IncrementalCacheKind } from './types';\nimport RenderResult from '../render-result';\nimport { RouteKind } from '../route-kind';\nexport async function fromResponseCacheEntry(cacheEntry) {\n    var _cacheEntry_value, _cacheEntry_value1;\n    return {\n        ...cacheEntry,\n        value: ((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status\n        } : ((_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            postponed: cacheEntry.value.postponed,\n            rscData: cacheEntry.value.rscData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n            segmentData: cacheEntry.value.segmentData\n        } : cacheEntry.value\n    };\n}\nexport async function toResponseCacheEntry(response) {\n    var _response_value, _response_value1, _response_value2;\n    if (!response) return null;\n    if (((_response_value = response.value) == null ? void 0 : _response_value.kind) === CachedRouteKind.FETCH) {\n        throw new Error('Invariant: unexpected cachedResponse of kind fetch in response cache');\n    }\n    return {\n        isMiss: response.isMiss,\n        isStale: response.isStale,\n        revalidate: response.revalidate,\n        isFallback: response.isFallback,\n        value: ((_response_value1 = response.value) == null ? void 0 : _response_value1.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(response.value.html),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status\n        } : ((_response_value2 = response.value) == null ? void 0 : _response_value2.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: RenderResult.fromStatic(response.value.html),\n            rscData: response.value.rscData,\n            headers: response.value.headers,\n            status: response.value.status,\n            postponed: response.value.postponed,\n            segmentData: response.value.segmentData\n        } : response.value\n    };\n}\nexport function routeKindToIncrementalCacheKind(routeKind) {\n    switch(routeKind){\n        case RouteKind.PAGES:\n            return IncrementalCacheKind.PAGES;\n        case RouteKind.APP_PAGE:\n            return IncrementalCacheKind.APP_PAGE;\n        case RouteKind.IMAGE:\n            return IncrementalCacheKind.IMAGE;\n        case RouteKind.APP_ROUTE:\n            return IncrementalCacheKind.APP_ROUTE;\n        default:\n            throw new Error(`Unexpected route kind ${routeKind}`);\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import { CachedRouteKind } from './types';\nimport { Batcher } from '../../lib/batcher';\nimport { scheduleOnNextTick } from '../../lib/scheduler';\nimport { fromResponseCacheEntry, routeKindToIncrementalCacheKind, toResponseCacheEntry } from './utils';\nexport * from './types';\nexport default class ResponseCache {\n    constructor(minimalMode){\n        this.batcher = Batcher.create({\n            // Ensure on-demand revalidate doesn't block normal requests, it should be\n            // safe to run an on-demand revalidate for the same key as a normal request.\n            cacheKeyFn: ({ key, isOnDemandRevalidate })=>`${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n            // We wait to do any async work until after we've added our promise to\n            // `pendingResponses` to ensure that any any other calls will reuse the\n            // same promise until we've fully finished our work.\n            schedulerFn: scheduleOnNextTick\n        });\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        const minimalModeKey = 'minimalMode';\n        this[minimalModeKey] = minimalMode;\n    }\n    async get(key, responseGenerator, context) {\n        // If there is no key for the cache, we can't possibly look this up in the\n        // cache so just return the result of the response generator.\n        if (!key) {\n            return responseGenerator({\n                hasResolved: false,\n                previousCacheEntry: null\n            });\n        }\n        const { incrementalCache, isOnDemandRevalidate = false, isFallback = false, isRoutePPREnabled = false } = context;\n        const response = await this.batcher.batch({\n            key,\n            isOnDemandRevalidate\n        }, async (cacheKey, resolve)=>{\n            var _this_previousCacheItem;\n            // We keep the previous cache entry around to leverage when the\n            // incremental cache is disabled in minimal mode.\n            if (this.minimalMode && ((_this_previousCacheItem = this.previousCacheItem) == null ? void 0 : _this_previousCacheItem.key) === cacheKey && this.previousCacheItem.expiresAt > Date.now()) {\n                return this.previousCacheItem.entry;\n            }\n            // Coerce the kindHint into a given kind for the incremental cache.\n            const kind = routeKindToIncrementalCacheKind(context.routeKind);\n            let resolved = false;\n            let cachedResponse = null;\n            try {\n                cachedResponse = !this.minimalMode ? await incrementalCache.get(key, {\n                    kind,\n                    isRoutePPREnabled: context.isRoutePPREnabled,\n                    isFallback\n                }) : null;\n                if (cachedResponse && !isOnDemandRevalidate) {\n                    var _cachedResponse_value;\n                    if (((_cachedResponse_value = cachedResponse.value) == null ? void 0 : _cachedResponse_value.kind) === CachedRouteKind.FETCH) {\n                        throw new Error(`invariant: unexpected cachedResponse of kind fetch in response cache`);\n                    }\n                    resolve({\n                        ...cachedResponse,\n                        revalidate: cachedResponse.curRevalidate\n                    });\n                    resolved = true;\n                    if (!cachedResponse.isStale || context.isPrefetch) {\n                        // The cached value is still valid, so we don't need\n                        // to update it yet.\n                        return null;\n                    }\n                }\n                const cacheEntry = await responseGenerator({\n                    hasResolved: resolved,\n                    previousCacheEntry: cachedResponse,\n                    isRevalidating: true\n                });\n                // If the cache entry couldn't be generated, we don't want to cache\n                // the result.\n                if (!cacheEntry) {\n                    // Unset the previous cache item if it was set.\n                    if (this.minimalMode) this.previousCacheItem = undefined;\n                    return null;\n                }\n                const resolveValue = await fromResponseCacheEntry({\n                    ...cacheEntry,\n                    isMiss: !cachedResponse\n                });\n                if (!resolveValue) {\n                    // Unset the previous cache item if it was set.\n                    if (this.minimalMode) this.previousCacheItem = undefined;\n                    return null;\n                }\n                // For on-demand revalidate wait to resolve until cache is set.\n                // Otherwise resolve now.\n                if (!isOnDemandRevalidate && !resolved) {\n                    resolve(resolveValue);\n                    resolved = true;\n                }\n                // We want to persist the result only if it has a revalidate value\n                // defined.\n                if (typeof resolveValue.revalidate !== 'undefined') {\n                    if (this.minimalMode) {\n                        this.previousCacheItem = {\n                            key: cacheKey,\n                            entry: resolveValue,\n                            expiresAt: Date.now() + 1000\n                        };\n                    } else {\n                        await incrementalCache.set(key, resolveValue.value, {\n                            revalidate: resolveValue.revalidate,\n                            isRoutePPREnabled,\n                            isFallback\n                        });\n                    }\n                }\n                return resolveValue;\n            } catch (err) {\n                // When a getStaticProps path is erroring we automatically re-set the\n                // existing cache under a new expiration to prevent non-stop retrying.\n                if (cachedResponse) {\n                    await incrementalCache.set(key, cachedResponse.value, {\n                        revalidate: Math.min(Math.max(cachedResponse.revalidate || 3, 3), 30),\n                        isRoutePPREnabled,\n                        isFallback\n                    });\n                }\n                // While revalidating in the background we can't reject as we already\n                // resolved the cache entry so log the error here.\n                if (resolved) {\n                    console.error(err);\n                    return null;\n                }\n                // We haven't resolved yet, so let's throw to indicate an error.\n                throw err;\n            }\n        });\n        return toResponseCacheEntry(response);\n    }\n}\n\n//# sourceMappingURL=index.js.map","export var RouteKind = /*#__PURE__*/ function(RouteKind) {\n    /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */ RouteKind[\"PAGES\"] = \"PAGES\";\n    /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */ RouteKind[\"PAGES_API\"] = \"PAGES_API\";\n    /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */ RouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */ RouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */ RouteKind[\"IMAGE\"] = \"IMAGE\";\n    return RouteKind;\n}({});\n\n//# sourceMappingURL=route-kind.js.map","if (process.env.NEXT_RUNTIME === 'edge') {\n    module.exports = require('next/dist/server/route-modules/app-route/module.js');\n} else {\n    if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n        if (process.env.NODE_ENV === 'development') {\n            module.exports = require('next/dist/compiled/next-server/app-route-experimental.runtime.dev.js');\n        } else if (process.env.TURBOPACK) {\n            module.exports = require('next/dist/compiled/next-server/app-route-turbo-experimental.runtime.prod.js');\n        } else {\n            module.exports = require('next/dist/compiled/next-server/app-route-experimental.runtime.prod.js');\n        }\n    } else {\n        if (process.env.NODE_ENV === 'development') {\n            module.exports = require('next/dist/compiled/next-server/app-route.runtime.dev.js');\n        } else if (process.env.TURBOPACK) {\n            module.exports = require('next/dist/compiled/next-server/app-route-turbo.runtime.prod.js');\n        } else {\n            module.exports = require('next/dist/compiled/next-server/app-route.runtime.prod.js');\n        }\n    }\n}\n\n//# sourceMappingURL=module.compiled.js.map","/**\n * RouteModule is the base class for all route modules. This class should be\n * extended by all route modules.\n */ export class RouteModule {\n    constructor({ userland, definition }){\n        this.userland = userland;\n        this.definition = definition;\n    }\n}\n\n//# sourceMappingURL=route-module.js.map","/**\n * List of valid HTTP methods that can be implemented by Next.js's Custom App\n * Routes.\n */ export const HTTP_METHODS = [\n    'GET',\n    'HEAD',\n    'OPTIONS',\n    'POST',\n    'PUT',\n    'DELETE',\n    'PATCH'\n];\n/**\n * Checks to see if the passed string is an HTTP method. Note that this is case\n * sensitive.\n *\n * @param maybeMethod the string that may be an HTTP method\n * @returns true if the string is an HTTP method\n */ export function isHTTPMethod(maybeMethod) {\n    return HTTP_METHODS.includes(maybeMethod);\n}\n\n//# sourceMappingURL=http.js.map","import { NEXT_CACHE_IMPLICIT_TAG_ID } from '../../lib/constants';\nconst getDerivedTags = (pathname)=>{\n    const derivedTags = [\n        `/layout`\n    ];\n    // we automatically add the current path segments as tags\n    // for revalidatePath handling\n    if (pathname.startsWith('/')) {\n        const pathnameParts = pathname.split('/');\n        for(let i = 1; i < pathnameParts.length + 1; i++){\n            let curPathname = pathnameParts.slice(0, i).join('/');\n            if (curPathname) {\n                // all derived tags other than the page are layout tags\n                if (!curPathname.endsWith('/page') && !curPathname.endsWith('/route')) {\n                    curPathname = `${curPathname}${!curPathname.endsWith('/') ? '/' : ''}layout`;\n                }\n                derivedTags.push(curPathname);\n            }\n        }\n    }\n    return derivedTags;\n};\nexport function getImplicitTags(page, url, fallbackRouteParams) {\n    // TODO: Cache the result\n    const newTags = [];\n    const hasFallbackRouteParams = fallbackRouteParams && fallbackRouteParams.size > 0;\n    // Add the derived tags from the page.\n    const derivedTags = getDerivedTags(page);\n    for (let tag of derivedTags){\n        tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${tag}`;\n        newTags.push(tag);\n    }\n    // Add the tags from the pathname. If the route has unknown params, we don't\n    // want to add the pathname as a tag, as it will be invalid.\n    if (url.pathname && !hasFallbackRouteParams) {\n        const tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${url.pathname}`;\n        newTags.push(tag);\n    }\n    return newTags;\n}\n\n//# sourceMappingURL=implicit-tags.js.map","/**\n * Get pathname from absolute path.\n *\n * @param absolutePath the absolute path\n * @returns the pathname\n */ export function getPathnameFromAbsolutePath(absolutePath) {\n    // Remove prefix including app dir\n    let appDir = '/app/';\n    if (!absolutePath.includes(appDir)) {\n        appDir = '\\\\app\\\\';\n    }\n    const [, ...parts] = absolutePath.split(appDir);\n    const relativePath = appDir[0] + parts.join(appDir);\n    // remove extension\n    const pathname = relativePath.split('.').slice(0, -1).join('.');\n    return pathname;\n}\n\n//# sourceMappingURL=get-pathname-from-absolute-path.js.map","// ISC License\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\nvar _globalThis;\nconst { env, stdout } = ((_globalThis = globalThis) == null ? void 0 : _globalThis.process) ?? {};\nconst enabled = env && !env.NO_COLOR && (env.FORCE_COLOR || (stdout == null ? void 0 : stdout.isTTY) && !env.CI && env.TERM !== 'dumb');\nconst replaceClose = (str, close, replace, index)=>{\n    const start = str.substring(0, index) + replace;\n    const end = str.substring(index + close.length);\n    const nextIndex = end.indexOf(close);\n    return ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end;\n};\nconst formatter = (open, close, replace = open)=>{\n    if (!enabled) return String;\n    return (input)=>{\n        const string = '' + input;\n        const index = string.indexOf(close, open.length);\n        return ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close;\n    };\n};\nexport const reset = enabled ? (s)=>`\\x1b[0m${s}\\x1b[0m` : String;\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m');\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m');\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m');\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m');\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m');\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m');\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m');\nexport const black = formatter('\\x1b[30m', '\\x1b[39m');\nexport const red = formatter('\\x1b[31m', '\\x1b[39m');\nexport const green = formatter('\\x1b[32m', '\\x1b[39m');\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m');\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m');\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m');\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m');\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m');\nexport const white = formatter('\\x1b[37m', '\\x1b[39m');\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m');\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m');\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m');\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m');\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m');\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m');\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m');\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m');\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m');\n\n//# sourceMappingURL=picocolors.js.map","import { bold, green, magenta, red, yellow, white } from '../../lib/picocolors';\nimport { LRUCache } from '../../server/lib/lru-cache';\nexport const prefixes = {\n    wait: white(bold('○')),\n    error: red(bold('⨯')),\n    warn: yellow(bold('⚠')),\n    ready: '▲',\n    info: white(bold(' ')),\n    event: green(bold('✓')),\n    trace: magenta(bold('»'))\n};\nconst LOGGING_METHOD = {\n    log: 'log',\n    warn: 'warn',\n    error: 'error'\n};\nfunction prefixedLog(prefixType, ...message) {\n    if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n        message.shift();\n    }\n    const consoleMethod = prefixType in LOGGING_METHOD ? LOGGING_METHOD[prefixType] : 'log';\n    const prefix = prefixes[prefixType];\n    // If there's no message, don't print the prefix but a new line\n    if (message.length === 0) {\n        console[consoleMethod]('');\n    } else {\n        // Ensure if there's ANSI escape codes it's concatenated into one string.\n        // Chrome DevTool can only handle color if it's in one string.\n        if (message.length === 1 && typeof message[0] === 'string') {\n            console[consoleMethod](' ' + prefix + ' ' + message[0]);\n        } else {\n            console[consoleMethod](' ' + prefix, ...message);\n        }\n    }\n}\nexport function bootstrap(...message) {\n    // logging format: ' <prefix> <message>'\n    // e.g. ' ✓ Compiled successfully'\n    // Add spaces to align with the indent of other logs\n    console.log('   ' + message.join(' '));\n}\nexport function wait(...message) {\n    prefixedLog('wait', ...message);\n}\nexport function error(...message) {\n    prefixedLog('error', ...message);\n}\nexport function warn(...message) {\n    prefixedLog('warn', ...message);\n}\nexport function ready(...message) {\n    prefixedLog('ready', ...message);\n}\nexport function info(...message) {\n    prefixedLog('info', ...message);\n}\nexport function event(...message) {\n    prefixedLog('event', ...message);\n}\nexport function trace(...message) {\n    prefixedLog('trace', ...message);\n}\nconst warnOnceCache = new LRUCache(10000, (value)=>value.length);\nexport function warnOnce(...message) {\n    const key = message.join(' ');\n    if (!warnOnceCache.has(key)) {\n        warnOnceCache.set(key, key);\n        warn(...message);\n    }\n}\n\n//# sourceMappingURL=log.js.map","import { HTTP_METHODS } from '../../../web/http';\nconst AUTOMATIC_ROUTE_METHODS = [\n    'HEAD',\n    'OPTIONS'\n];\nfunction handleMethodNotAllowedResponse() {\n    return new Response(null, {\n        status: 405\n    });\n}\nexport function autoImplementMethods(handlers) {\n    // Loop through all the HTTP methods to create the initial methods object.\n    // Each of the methods will be set to the 405 response handler.\n    const methods = HTTP_METHODS.reduce((acc, method)=>({\n            ...acc,\n            // If the userland module implements the method, then use it. Otherwise,\n            // use the 405 response handler.\n            [method]: handlers[method] ?? handleMethodNotAllowedResponse\n        }), {});\n    // Get all the methods that could be automatically implemented that were not\n    // implemented by the userland module.\n    const implemented = new Set(HTTP_METHODS.filter((method)=>handlers[method]));\n    const missing = AUTOMATIC_ROUTE_METHODS.filter((method)=>!implemented.has(method));\n    // Loop over the missing methods to automatically implement them if we can.\n    for (const method of missing){\n        // If the userland module doesn't implement the HEAD method, then\n        // we'll automatically implement it by calling the GET method (if it\n        // exists).\n        if (method === 'HEAD') {\n            if (handlers.GET) {\n                // Implement the HEAD method by calling the GET method.\n                methods.HEAD = handlers.GET;\n                // Mark it as implemented.\n                implemented.add('HEAD');\n            }\n            continue;\n        }\n        // If OPTIONS is not provided then implement it.\n        if (method === 'OPTIONS') {\n            // TODO: check if HEAD is implemented, if so, use it to add more headers\n            // Get all the methods that were implemented by the userland module.\n            const allow = [\n                'OPTIONS',\n                ...implemented\n            ];\n            // If the list of methods doesn't include HEAD, but it includes GET, then\n            // add HEAD as it's automatically implemented.\n            if (!implemented.has('HEAD') && implemented.has('GET')) {\n                allow.push('HEAD');\n            }\n            // Sort and join the list with commas to create the `Allow` header. See:\n            // https://httpwg.org/specs/rfc9110.html#field.allow\n            const headers = {\n                Allow: allow.sort().join(', ')\n            };\n            // Implement the OPTIONS method by returning a 204 response with the\n            // `Allow` header.\n            methods.OPTIONS = ()=>new Response(null, {\n                    status: 204,\n                    headers\n                });\n            // Mark this method as implemented.\n            implemented.add('OPTIONS');\n            continue;\n        }\n        throw new Error(`Invariant: should handle all automatic implementable methods, got method: ${method}`);\n    }\n    return methods;\n}\n\n//# sourceMappingURL=auto-implement-methods.js.map","/**\n * Converts the query into params.\n *\n * @param query the query to convert to params\n * @returns the params\n */ export function parsedUrlQueryToParams(query) {\n    const params = {};\n    for (const [key, value] of Object.entries(query)){\n        if (typeof value === 'undefined') continue;\n        params[key] = value;\n    }\n    return params;\n}\n\n//# sourceMappingURL=parsed-url-query-to-params.js.map","// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n","export const HTTPAccessErrorStatus = {\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  UNAUTHORIZED: 401,\n}\n\nconst ALLOWED_CODES = new Set(Object.values(HTTPAccessErrorStatus))\n\nexport const HTTP_ERROR_FALLBACK_ERROR_CODE = 'NEXT_HTTP_ERROR_FALLBACK'\n\nexport type HTTPAccessFallbackError = Error & {\n  digest: `${typeof HTTP_ERROR_FALLBACK_ERROR_CODE};${string}`\n}\n\n/**\n * Checks an error to determine if it's an error generated by\n * the HTTP navigation APIs `notFound()`, `forbidden()` or `unauthorized()`.\n *\n * @param error the error that may reference a HTTP access error\n * @returns true if the error is a HTTP access error\n */\nexport function isHTTPAccessFallbackError(\n  error: unknown\n): error is HTTPAccessFallbackError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n  const [prefix, httpStatus] = error.digest.split(';')\n\n  return (\n    prefix === HTTP_ERROR_FALLBACK_ERROR_CODE &&\n    ALLOWED_CODES.has(Number(httpStatus))\n  )\n}\n\nexport function getAccessFallbackHTTPStatus(\n  error: HTTPAccessFallbackError\n): number {\n  const httpStatus = error.digest.split(';')[1]\n  return Number(httpStatus)\n}\n\nexport function getAccessFallbackErrorTypeByStatus(\n  status: number\n): 'not-found' | 'forbidden' | 'unauthorized' | undefined {\n  switch (status) {\n    case 401:\n      return 'unauthorized'\n    case 403:\n      return 'forbidden'\n    case 404:\n      return 'not-found'\n    default:\n      return\n  }\n}\n","export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","import { RedirectStatusCode } from './redirect-status-code'\n\nexport const REDIRECT_ERROR_CODE = 'NEXT_REDIRECT'\n\nexport enum RedirectType {\n  push = 'push',\n  replace = 'replace',\n}\n\nexport type RedirectError = Error & {\n  digest: `${typeof REDIRECT_ERROR_CODE};${RedirectType};${string};${RedirectStatusCode};`\n}\n\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */\nexport function isRedirectError(error: unknown): error is RedirectError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n\n  const digest = error.digest.split(';')\n  const [errorCode, type] = digest\n  const destination = digest.slice(2, -2).join(';')\n  const status = digest.at(-2)\n\n  const statusCode = Number(status)\n\n  return (\n    errorCode === REDIRECT_ERROR_CODE &&\n    (type === 'replace' || type === 'push') &&\n    typeof destination === 'string' &&\n    !isNaN(statusCode) &&\n    statusCode in RedirectStatusCode\n  )\n}\n","import {\n  isHTTPAccessFallbackError,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\nimport { isRedirectError, type RedirectError } from './redirect-error'\n\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */\nexport function isNextRouterError(\n  error: unknown\n): error is RedirectError | HTTPAccessFallbackError {\n  return isRedirectError(error) || isHTTPAccessFallbackError(error)\n}\n","import stringHash from 'next/dist/compiled/string-hash';\nimport { formatServerError } from '../../lib/format-server-error';\nimport { SpanStatusCode, getTracer } from '../lib/trace/tracer';\nimport { isAbortError } from '../pipe-readable';\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr';\nimport { isDynamicServerError } from '../../client/components/hooks-server-context';\nimport { isNextRouterError } from '../../client/components/is-next-router-error';\nimport { getProperError } from '../../lib/is-error';\n/**\n * Returns a digest for well-known Next.js errors, otherwise `undefined`. If a\n * digest is returned this also means that the error does not need to be\n * reported.\n */ export function getDigestForWellKnownError(error) {\n    // If we're bailing out to CSR, we don't need to log the error.\n    if (isBailoutToCSRError(error)) return error.digest;\n    // If this is a navigation error, we don't need to log the error.\n    if (isNextRouterError(error)) return error.digest;\n    // If this error occurs, we know that we should be stopping the static\n    // render. This is only thrown in static generation when PPR is not enabled,\n    // which causes the whole page to be marked as dynamic. We don't need to\n    // tell the user about this error, as it's not actionable.\n    if (isDynamicServerError(error)) return error.digest;\n    return undefined;\n}\nexport function createFlightReactServerErrorHandler(shouldFormatError, onReactServerRenderError) {\n    return (thrownValue)=>{\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + err.stack || '').toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Record exception in an active span, if available.\n        const span = getTracer().getActiveScopeSpan();\n        if (span) {\n            span.recordException(err);\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: err.message\n            });\n        }\n        onReactServerRenderError(err);\n        return err.digest;\n    };\n}\nexport function createHTMLReactServerErrorHandler(shouldFormatError, isNextExport, reactServerErrors, silenceLogger, onReactServerRenderError) {\n    return (thrownValue)=>{\n        var _err_message;\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + (err.stack || '')).toString();\n        }\n        // @TODO by putting this here and not at the top it is possible that\n        // we don't error the build in places we actually expect to\n        if (!reactServerErrors.has(err.digest)) {\n            reactServerErrors.set(err.digest, err);\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger) {\n                onReactServerRenderError == null ? void 0 : onReactServerRenderError(err);\n            }\n        }\n        return err.digest;\n    };\n}\nexport function createHTMLErrorHandler(shouldFormatError, isNextExport, reactServerErrors, allCapturedErrors, silenceLogger, onHTMLRenderSSRError) {\n    return (thrownValue, errorInfo)=>{\n        var _err_message;\n        let isSSRError = true;\n        allCapturedErrors.push(thrownValue);\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (err.digest) {\n            if (reactServerErrors.has(err.digest)) {\n                // This error is likely an obfuscated error from react-server.\n                // We recover the original error here.\n                thrownValue = reactServerErrors.get(err.digest);\n                isSSRError = false;\n            } else {\n            // The error is not from react-server but has a digest\n            // from other means so we don't need to produce a new one\n            }\n        } else {\n            err.digest = stringHash(err.message + ((errorInfo == null ? void 0 : errorInfo.componentStack) || err.stack || '')).toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger && // HTML errors contain RSC errors as well, filter them out before reporting\n            isSSRError) {\n                onHTMLRenderSSRError(err, errorInfo);\n            }\n        }\n        return err.digest;\n    };\n}\nexport function isUserLandError(err) {\n    return !isAbortError(err) && !isBailoutToCSRError(err) && !isNextRouterError(err);\n}\n\n//# sourceMappingURL=create-error-handler.js.map","import { getDigestForWellKnownError } from './create-error-handler';\nexport function printDebugThrownValueForProspectiveRender(thrownValue, route) {\n    // We don't need to print well-known Next.js errors.\n    if (getDigestForWellKnownError(thrownValue)) {\n        return;\n    }\n    let message;\n    if (typeof thrownValue === 'object' && thrownValue !== null && typeof thrownValue.message === 'string') {\n        message = thrownValue.message;\n        if (typeof thrownValue.stack === 'string') {\n            const originalErrorStack = thrownValue.stack;\n            const stackStart = originalErrorStack.indexOf('\\n');\n            if (stackStart > -1) {\n                const error = new Error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled.\n          \nOriginal Error: ${message}`);\n                error.stack = 'Error: ' + error.message + originalErrorStack.slice(stackStart);\n                console.error(error);\n                return;\n            }\n        }\n    } else if (typeof thrownValue === 'string') {\n        message = thrownValue;\n    }\n    if (message) {\n        console.error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled. No stack was provided.\n          \nOriginal Message: ${message}`);\n        return;\n    }\n    console.error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled. The thrown value is logged just following this message`);\n    console.error(thrownValue);\n    return;\n}\n\n//# sourceMappingURL=prospective-render-utils.js.map","import { createAsyncLocalStorage } from './async-local-storage';\nexport const actionAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=action-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { actionAsyncStorageInstance } from './action-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { actionAsyncStorageInstance as actionAsyncStorage };\n\n//# sourceMappingURL=action-async-storage.external.js.map","'use client'\n\nimport type { FetchServerResponseResult } from '../../client/components/router-reducer/fetch-server-response'\nimport type {\n  FocusAndScrollRef,\n  PrefetchKind,\n  RouterChangeByServerResponse,\n} from '../../client/components/router-reducer/router-reducer-types'\nimport type { FlightRouterState } from '../../server/app-render/types'\nimport React from 'react'\n\nexport type ChildSegmentMap = Map<string, CacheNode>\n\n/**\n * Cache node used in app-router / layout-router.\n */\nexport type CacheNode = ReadyCacheNode | LazyCacheNode\n\nexport type LoadingModuleData =\n  | [React.JSX.Element, React.ReactNode, React.ReactNode]\n  | null\n\nexport type LazyCacheNode = {\n  /**\n   * When rsc is null, this is a lazily-initialized cache node.\n   *\n   * If the app attempts to render it, it triggers a lazy data fetch,\n   * postpones the render, and schedules an update to a new tree.\n   *\n   * TODO: This mechanism should not be used when PPR is enabled, though it\n   * currently is in some cases until we've implemented partial\n   * segment fetching.\n   */\n  rsc: null\n\n  /**\n   * A prefetched version of the segment data. See explanation in corresponding\n   * field of ReadyCacheNode (below).\n   *\n   * Since LazyCacheNode mostly only exists in the non-PPR implementation, this\n   * will usually be null, but it could have been cloned from a previous\n   * CacheNode that was created by the PPR implementation. Eventually we want\n   * to migrate everything away from LazyCacheNode entirely.\n   */\n  prefetchRsc: React.ReactNode\n\n  /**\n   * A pending response for the lazy data fetch. If this is not present\n   * during render, it is lazily created.\n   */\n  lazyData: Promise<FetchServerResponseResult> | null\n\n  prefetchHead: React.ReactNode\n  head: React.ReactNode\n\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n\n  /**\n   * Child parallel routes.\n   */\n  parallelRoutes: Map<string, ChildSegmentMap>\n}\n\nexport type ReadyCacheNode = {\n  /**\n   * When rsc is not null, it represents the RSC data for the\n   * corresponding segment.\n   *\n   * `null` is a valid React Node but because segment data is always a\n   * <LayoutRouter> component, we can use `null` to represent empty.\n   *\n   * TODO: For additional type safety, update this type to\n   * Exclude<React.ReactNode, null>. Need to update createEmptyCacheNode to\n   * accept rsc as an argument, or just inline the callers.\n   */\n  rsc: React.ReactNode\n\n  /**\n   * Represents a static version of the segment that can be shown immediately,\n   * and may or may not contain dynamic holes. It's prefetched before a\n   * navigation occurs.\n   *\n   * During rendering, we will choose whether to render `rsc` or `prefetchRsc`\n   * with `useDeferredValue`. As with the `rsc` field, a value of `null` means\n   * no value was provided. In this case, the LayoutRouter will go straight to\n   * rendering the `rsc` value; if that one is also missing, it will suspend and\n   * trigger a lazy fetch.\n   */\n  prefetchRsc: React.ReactNode\n\n  /**\n   * There should never be a lazy data request in this case.\n   */\n  lazyData: null\n  prefetchHead: React.ReactNode\n  head: React.ReactNode\n\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n\n  parallelRoutes: Map<string, ChildSegmentMap>\n}\n\nexport interface NavigateOptions {\n  scroll?: boolean\n}\n\nexport interface PrefetchOptions {\n  kind: PrefetchKind\n}\n\nexport interface AppRouterInstance {\n  /**\n   * Navigate to the previous history entry.\n   */\n  back(): void\n  /**\n   * Navigate to the next history entry.\n   */\n  forward(): void\n  /**\n   * Refresh the current page.\n   */\n  refresh(): void\n  /**\n   * Refresh the current page. Use in development only.\n   * @internal\n   */\n  hmrRefresh(): void\n  /**\n   * Navigate to the provided href.\n   * Pushes a new history entry.\n   */\n  push(href: string, options?: NavigateOptions): void\n  /**\n   * Navigate to the provided href.\n   * Replaces the current history entry.\n   */\n  replace(href: string, options?: NavigateOptions): void\n  /**\n   * Prefetch the provided href.\n   */\n  prefetch(href: string, options?: PrefetchOptions): void\n}\n\nexport const AppRouterContext = React.createContext<AppRouterInstance | null>(\n  null\n)\nexport const LayoutRouterContext = React.createContext<{\n  childNodes: CacheNode['parallelRoutes']\n  tree: FlightRouterState\n  url: string\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n} | null>(null)\n\nexport const GlobalLayoutRouterContext = React.createContext<{\n  tree: FlightRouterState\n  changeByServerResponse: RouterChangeByServerResponse\n  focusAndScrollRef: FocusAndScrollRef\n  nextUrl: string | null\n}>(null as any)\n\nexport const TemplateContext = React.createContext<React.ReactNode>(null as any)\n\nif (process.env.NODE_ENV !== 'production') {\n  AppRouterContext.displayName = 'AppRouterContext'\n  LayoutRouterContext.displayName = 'LayoutRouterContext'\n  GlobalLayoutRouterContext.displayName = 'GlobalLayoutRouterContext'\n  TemplateContext.displayName = 'TemplateContext'\n}\n\nexport const MissingSlotContext = React.createContext<Set<string>>(new Set())\n","// the name of the export has to be the camelCase version of the file name (without the extension)\n// TODO: remove this. We need it because using notFound from next/navigation imports this file :(\nexport * as appRouterContext from '../../../shared/lib/app-router-context.shared-runtime';\n\n//# sourceMappingURL=shared-modules.js.map","import { ACTION_HEADER } from '../../client/components/app-router-headers';\nexport function getServerActionRequestMetadata(req) {\n    let actionId;\n    let contentType;\n    if (req.headers instanceof Headers) {\n        actionId = req.headers.get(ACTION_HEADER.toLowerCase()) ?? null;\n        contentType = req.headers.get('content-type');\n    } else {\n        actionId = req.headers[ACTION_HEADER.toLowerCase()] ?? null;\n        contentType = req.headers['content-type'] ?? null;\n    }\n    const isURLEncodedAction = Boolean(req.method === 'POST' && contentType === 'application/x-www-form-urlencoded');\n    const isMultipartAction = Boolean(req.method === 'POST' && (contentType == null ? void 0 : contentType.startsWith('multipart/form-data')));\n    const isFetchAction = Boolean(actionId !== undefined && typeof actionId === 'string' && req.method === 'POST');\n    const isServerAction = Boolean(isFetchAction || isURLEncodedAction || isMultipartAction);\n    return {\n        actionId,\n        isURLEncodedAction,\n        isMultipartAction,\n        isFetchAction,\n        isServerAction\n    };\n}\nexport function getIsServerAction(req) {\n    return getServerActionRequestMetadata(req).isServerAction;\n}\n\n//# sourceMappingURL=server-action-request-meta.js.map","/**\n * Cleans a URL by stripping the protocol, host, and search params.\n *\n * @param urlString the url to clean\n * @returns the cleaned url\n */ export function cleanURL(url) {\n    const u = new URL(url);\n    u.host = 'localhost:3000';\n    u.search = '';\n    u.protocol = 'http';\n    return u;\n}\n\n//# sourceMappingURL=clean-url.js.map","// route handlers are only statically optimized if they define\n// one of these top-level configs manually\n//   - dynamic = 'force-static'\n//   - dynamic = 'error'\n//   - revalidate > 0\n//   - revalidate = false\n//   - generateStaticParams\nexport function isStaticGenEnabled(mod) {\n    return mod.dynamic === 'force-static' || mod.dynamic === 'error' || mod.revalidate === false || mod.revalidate !== undefined && mod.revalidate > 0 || typeof mod.generateStaticParams == 'function';\n}\n\n//# sourceMappingURL=is-static-gen-enabled.js.map","/**\n * This class is used to detect when all cache reads for a given render are settled.\n * We do this to allow for cache warming the prerender without having to continue rendering\n * the remainder of the page. This feature is really only useful when the dynamicIO flag is on\n * and should only be used in codepaths gated with this feature.\n */ export class CacheSignal {\n    constructor(){\n        this.count = 0;\n        this.earlyListeners = [];\n        this.listeners = [];\n        this.tickPending = false;\n        this.taskPending = false;\n    }\n    noMorePendingCaches() {\n        if (!this.tickPending) {\n            this.tickPending = true;\n            process.nextTick(()=>{\n                this.tickPending = false;\n                if (this.count === 0) {\n                    for(let i = 0; i < this.earlyListeners.length; i++){\n                        this.earlyListeners[i]();\n                    }\n                    this.earlyListeners.length = 0;\n                }\n            });\n        }\n        if (!this.taskPending) {\n            this.taskPending = true;\n            setTimeout(()=>{\n                this.taskPending = false;\n                if (this.count === 0) {\n                    for(let i = 0; i < this.listeners.length; i++){\n                        this.listeners[i]();\n                    }\n                    this.listeners.length = 0;\n                }\n            }, 0);\n        }\n    }\n    /**\n   * This promise waits until there are no more in progress cache reads but no later.\n   * This allows for adding more cache reads after to delay cacheReady.\n   */ inputReady() {\n        return new Promise((resolve)=>{\n            this.earlyListeners.push(resolve);\n            if (this.count === 0) {\n                this.noMorePendingCaches();\n            }\n        });\n    }\n    /**\n   * If there are inflight cache reads this Promise can resolve in a microtask however\n   * if there are no inflight cache reads then we wait at least one task to allow initial\n   * cache reads to be initiated.\n   */ cacheReady() {\n        return new Promise((resolve)=>{\n            this.listeners.push(resolve);\n            if (this.count === 0) {\n                this.noMorePendingCaches();\n            }\n        });\n    }\n    beginRead() {\n        this.count++;\n    }\n    endRead() {\n        // If this is the last read we need to wait a task before we can claim the cache is settled.\n        // The cache read will likely ping a Server Component which can read from the cache again and this\n        // will play out in a microtask so we need to only resolve pending listeners if we're still at 0\n        // after at least one task.\n        // We only want one task scheduled at a time so when we hit count 1 we don't decrement the counter immediately.\n        // If intervening reads happen before the scheduled task runs they will never observe count 1 preventing reentrency\n        this.count--;\n        if (this.count === 0) {\n            this.noMorePendingCaches();\n        }\n    }\n}\n\n//# sourceMappingURL=cache-signal.js.map","import { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { afterTaskAsyncStorage } from '../app-render/after-task-async-storage.external';\n// This regex will have fast negatives meaning valid identifiers may not pass\n// this test. However this is only used during static generation to provide hints\n// about why a page bailed out of some or all prerendering and we can use bracket notation\n// for example while `ಠ_ಠ` is a valid identifier it's ok to print `searchParams['ಠ_ಠ']`\n// even if this would have been fine too `searchParams.ಠ_ಠ`\nconst isDefinitelyAValidIdentifier = /^[A-Za-z_$][A-Za-z0-9_$]*$/;\nexport function describeStringPropertyAccess(target, prop) {\n    if (isDefinitelyAValidIdentifier.test(prop)) {\n        return `\\`${target}.${prop}\\``;\n    }\n    return `\\`${target}[${JSON.stringify(prop)}]\\``;\n}\nexport function describeHasCheckingStringProperty(target, prop) {\n    const stringifiedProp = JSON.stringify(prop);\n    return `\\`Reflect.has(${target}, ${stringifiedProp})\\`, \\`${stringifiedProp} in ${target}\\`, or similar`;\n}\nexport function throwWithStaticGenerationBailoutError(route, expression) {\n    throw new StaticGenBailoutError(`Route ${route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`);\n}\nexport function throwWithStaticGenerationBailoutErrorWithDynamicError(route, expression) {\n    throw new StaticGenBailoutError(`Route ${route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`);\n}\nexport function isRequestAPICallableInsideAfter() {\n    const afterTaskStore = afterTaskAsyncStorage.getStore();\n    return (afterTaskStore == null ? void 0 : afterTaskStore.rootTaskSpawnPhase) === 'action';\n}\nexport const wellKnownProperties = new Set([\n    'hasOwnProperty',\n    'isPrototypeOf',\n    'propertyIsEnumerable',\n    'toString',\n    'valueOf',\n    'toLocaleString',\n    // Promise prototype\n    // fallthrough\n    'then',\n    'catch',\n    'finally',\n    // React Promise extension\n    // fallthrough\n    'status',\n    // React introspection\n    'displayName',\n    // Common tested properties\n    // fallthrough\n    'toJSON',\n    '$$typeof',\n    '__esModule'\n]);\n\n//# sourceMappingURL=utils.js.map","import * as React from 'react';\nconst errorRef = {\n    current: null\n};\n// React.cache is currently only available in canary/experimental React channels.\nconst cache = typeof React.cache === 'function' ? React.cache : (fn)=>fn;\n// When Dynamic IO is enabled, we record these as errors so that they\n// are captured by the dev overlay as it's more critical to fix these\n// when enabled.\nconst logErrorOrWarn = process.env.__NEXT_DYNAMIC_IO ? console.error : console.warn;\n// We don't want to dedupe across requests.\n// The developer might've just attempted to fix the warning so we should warn again if it still happens.\nconst flushCurrentErrorIfNew = cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- cache key\n(key)=>{\n    try {\n        logErrorOrWarn(errorRef.current);\n    } finally{\n        errorRef.current = null;\n    }\n});\n/**\n * Creates a function that logs an error message that is deduped by the userland\n * callsite.\n * This requires no indirection between the call of this function and the userland\n * callsite i.e. there's only a single library frame above this.\n * Do not use on the Client where sourcemaps and ignore listing might be enabled.\n * Only use that for warnings need a fix independent of the callstack.\n *\n * @param getMessage\n * @returns\n */ export function createDedupedByCallsiteServerErrorLoggerDev(getMessage) {\n    return function logDedupedError(...args) {\n        const message = getMessage(...args);\n        if (process.env.NODE_ENV !== 'production') {\n            var _stack;\n            const callStackFrames = (_stack = new Error().stack) == null ? void 0 : _stack.split('\\n');\n            if (callStackFrames === undefined || callStackFrames.length < 4) {\n                logErrorOrWarn(message);\n            } else {\n                // Error:\n                //   logDedupedError\n                //   asyncApiBeingAccessedSynchronously\n                //   <userland callsite>\n                // TODO: This breaks if sourcemaps with ignore lists are enabled.\n                const key = callStackFrames[4];\n                errorRef.current = message;\n                flushCurrentErrorIfNew(key);\n            }\n        } else {\n            logErrorOrWarn(message);\n        }\n    };\n}\n\n//# sourceMappingURL=create-deduped-by-callsite-server-error-logger.js.map","import { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { abortAndThrowOnSynchronousRequestDataAccess, throwToInterruptStaticGeneration, postponeWithTracking, trackSynchronousRequestDataAccessInDev } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { describeStringPropertyAccess, wellKnownProperties } from './utils';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { scheduleImmediate } from '../../lib/scheduler';\nexport function createParamsFromClient(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport const createServerParamsForMetadata = createServerParamsForServerSegment;\n// routes always runs in RSC context so it is equivalent to a Server Page Component\nexport function createServerParamsForRoute(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport function createServerParamsForServerSegment(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport function createPrerenderParamsForClientSegment(underlyingParams, workStore) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (prerenderStore && prerenderStore.type === 'prerender') {\n        const fallbackParams = workStore.fallbackRouteParams;\n        if (fallbackParams) {\n            for(let key in underlyingParams){\n                if (fallbackParams.has(key)) {\n                    // This params object has one of more fallback params so we need to consider\n                    // the awaiting of this params object \"dynamic\". Since we are in dynamicIO mode\n                    // we encode this as a promise that never resolves\n                    return makeHangingPromise(prerenderStore.renderSignal, '`params`');\n                }\n            }\n        }\n    }\n    // We're prerendering in a mode that does not abort. We resolve the promise without\n    // any tracking because we're just transporting a value from server to client where the tracking\n    // will be applied.\n    return Promise.resolve(underlyingParams);\n}\nfunction createPrerenderParams(underlyingParams, workStore, prerenderStore) {\n    const fallbackParams = workStore.fallbackRouteParams;\n    if (fallbackParams) {\n        let hasSomeFallbackParams = false;\n        for(const key in underlyingParams){\n            if (fallbackParams.has(key)) {\n                hasSomeFallbackParams = true;\n                break;\n            }\n        }\n        if (hasSomeFallbackParams) {\n            // params need to be treated as dynamic because we have at least one fallback param\n            if (prerenderStore.type === 'prerender') {\n                // We are in a dynamicIO (PPR or otherwise) prerender\n                return makeAbortingExoticParams(underlyingParams, workStore.route, prerenderStore);\n            }\n            // remaining cases are prender-ppr and prerender-legacy\n            // We aren't in a dynamicIO prerender but we do have fallback params at this\n            // level so we need to make an erroring exotic params object which will postpone\n            // if you access the fallback params\n            return makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore);\n        }\n    }\n    // We don't have any fallback params so we have an entirely static safe params object\n    return makeUntrackedExoticParams(underlyingParams);\n}\nfunction createRenderParams(underlyingParams, workStore) {\n    if (process.env.NODE_ENV === 'development' && !workStore.isPrefetchRequest) {\n        return makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, workStore);\n    } else {\n        return makeUntrackedExoticParams(underlyingParams);\n    }\n}\nconst CachedParams = new WeakMap();\nfunction makeAbortingExoticParams(underlyingParams, route, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const promise = makeHangingPromise(prerenderStore.renderSignal, '`params`');\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            Object.defineProperty(promise, prop, {\n                get () {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    const error = createParamsAccessError(route, expression);\n                    abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n                },\n                set (newValue) {\n                    Object.defineProperty(promise, prop, {\n                        value: newValue,\n                        writable: true,\n                        enumerable: true\n                    });\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n    });\n    return promise;\n}\nfunction makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const augmentedUnderlying = {\n        ...underlyingParams\n    };\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(augmentedUnderlying);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            if (fallbackParams.has(prop)) {\n                Object.defineProperty(augmentedUnderlying, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when dynamicIO is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    enumerable: true\n                });\n                Object.defineProperty(promise, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when dynamicIO is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    set (newValue) {\n                        Object.defineProperty(promise, prop, {\n                            value: newValue,\n                            writable: true,\n                            enumerable: true\n                        });\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            } else {\n                ;\n                promise[prop] = underlyingParams[prop];\n            }\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticParams(underlyingParams) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(underlyingParams);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            ;\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    return promise;\n}\nfunction makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, store) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = new Promise((resolve)=>scheduleImmediate(()=>resolve(underlyingParams)));\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string') {\n                if (// We are accessing a property that was proxied to the promise instance\n                proxiedProperties.has(prop)) {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return ReflectAdapter.set(target, prop, value, receiver);\n        },\n        ownKeys (target) {\n            const expression = '`...params` or similar expression';\n            syncIODev(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedParams.set(underlyingParams, proxiedPromise);\n    return proxiedPromise;\n}\nfunction syncIODev(route, expression, missingProperties) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        trackSynchronousRequestDataAccessInDev(requestStore);\n    }\n    // In all cases we warn normally\n    if (missingProperties && missingProperties.length > 0) {\n        warnForIncompleteEnumeration(route, expression, missingProperties);\n    } else {\n        warnForSyncAccess(route, expression);\n    }\n}\nconst noop = ()=>{};\nconst warnForSyncAccess = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS ? noop : createDedupedByCallsiteServerErrorLoggerDev(createParamsAccessError);\nconst warnForIncompleteEnumeration = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS ? noop : createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError);\nfunction createParamsAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`);\n}\nfunction createIncompleteEnumerationError(route, expression, missingProperties) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `The following properties were not available through enumeration ` + `because they conflict with builtin property names: ` + `${describeListOfPropertyNames(missingProperties)}. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`);\n}\nfunction describeListOfPropertyNames(properties) {\n    switch(properties.length){\n        case 0:\n            throw new InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.');\n        case 1:\n            return `\\`${properties[0]}\\``;\n        case 2:\n            return `\\`${properties[0]}\\` and \\`${properties[1]}\\``;\n        default:\n            {\n                let description = '';\n                for(let i = 0; i < properties.length - 1; i++){\n                    description += `\\`${properties[i]}\\`, `;\n                }\n                description += `, and \\`${properties[properties.length - 1]}\\``;\n                return description;\n            }\n    }\n}\n\n//# sourceMappingURL=params.js.map","import { actionAsyncStorage } from '../../server/app-render/action-async-storage.external'\nimport { RedirectStatusCode } from './redirect-status-code'\nimport {\n  RedirectType,\n  type RedirectError,\n  isRedirectError,\n  REDIRECT_ERROR_CODE,\n} from './redirect-error'\n\nexport function getRedirectError(\n  url: string,\n  type: RedirectType,\n  statusCode: RedirectStatusCode = RedirectStatusCode.TemporaryRedirect\n): RedirectError {\n  const error = new Error(REDIRECT_ERROR_CODE) as RedirectError\n  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`\n  return error\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n * - In a Server Action, type defaults to 'push' and 'replace' elsewhere.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function redirect(\n  /** The URL to redirect to */\n  url: string,\n  type?: RedirectType\n): never {\n  const actionStore = actionAsyncStorage.getStore()\n  const redirectType =\n    type || (actionStore?.isAction ? RedirectType.push : RedirectType.replace)\n  throw getRedirectError(\n    url,\n    redirectType,\n    RedirectStatusCode.TemporaryRedirect\n  )\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function permanentRedirect(\n  /** The URL to redirect to */\n  url: string,\n  type: RedirectType = RedirectType.replace\n): never {\n  throw getRedirectError(url, type, RedirectStatusCode.PermanentRedirect)\n}\n\n/**\n * Returns the encoded URL from the error if it's a RedirectError, null\n * otherwise. Note that this does not validate the URL returned.\n *\n * @param error the error that may be a redirect error\n * @return the url if the error was a redirect error\n */\nexport function getURLFromRedirectError(error: RedirectError): string\nexport function getURLFromRedirectError(error: unknown): string | null {\n  if (!isRedirectError(error)) return null\n\n  // Slices off the beginning of the digest that contains the code and the\n  // separating ';'.\n  return error.digest.split(';').slice(2, -2).join(';')\n}\n\nexport function getRedirectTypeFromError(error: RedirectError): RedirectType {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return error.digest.split(';', 2)[1] as RedirectType\n}\n\nexport function getRedirectStatusCodeFromError(error: RedirectError): number {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return Number(error.digest.split(';').at(-2))\n}\n","import { RouteModule } from '../route-module';\nimport { createRequestStoreForAPI } from '../../async-storage/request-store';\nimport { createWorkStore } from '../../async-storage/work-store';\nimport { HTTP_METHODS, isHTTPMethod } from '../../web/http';\nimport { getImplicitTags } from '../../lib/implicit-tags';\nimport { patchFetch } from '../../lib/patch-fetch';\nimport { getTracer } from '../../lib/trace/tracer';\nimport { AppRouteRouteHandlersSpan } from '../../lib/trace/constants';\nimport { getPathnameFromAbsolutePath } from './helpers/get-pathname-from-absolute-path';\nimport * as Log from '../../../build/output/log';\nimport { autoImplementMethods } from './helpers/auto-implement-methods';\nimport { appendMutableCookies } from '../../web/spec-extension/adapters/request-cookies';\nimport { HeadersAdapter } from '../../web/spec-extension/adapters/headers';\nimport { RequestCookiesAdapter } from '../../web/spec-extension/adapters/request-cookies';\nimport { parsedUrlQueryToParams } from './helpers/parsed-url-query-to-params';\nimport { printDebugThrownValueForProspectiveRender } from '../../app-render/prospective-render-utils';\nimport * as serverHooks from '../../../client/components/hooks-server-context';\nimport { DynamicServerError } from '../../../client/components/hooks-server-context';\nimport { workAsyncStorage } from '../../app-render/work-async-storage.external';\nimport { workUnitAsyncStorage } from '../../app-render/work-unit-async-storage.external';\nimport { actionAsyncStorage } from '../../app-render/action-async-storage.external';\nimport * as sharedModules from './shared-modules';\nimport { getIsServerAction } from '../../lib/server-action-request-meta';\nimport { RequestCookies } from 'next/dist/compiled/@edge-runtime/cookies';\nimport { cleanURL } from './helpers/clean-url';\nimport { StaticGenBailoutError } from '../../../client/components/static-generation-bailout';\nimport { isStaticGenEnabled } from './helpers/is-static-gen-enabled';\nimport { abortAndThrowOnSynchronousRequestDataAccess, postponeWithTracking, createDynamicTrackingState, getFirstDynamicReason } from '../../app-render/dynamic-rendering';\nimport { ReflectAdapter } from '../../web/spec-extension/adapters/reflect';\nimport { CacheSignal } from '../../app-render/cache-signal';\nimport { scheduleImmediate } from '../../../lib/scheduler';\nimport { createServerParamsForRoute } from '../../request/params';\nimport { getRedirectStatusCodeFromError, getURLFromRedirectError } from '../../../client/components/redirect';\nimport { isRedirectError } from '../../../client/components/redirect-error';\nimport { getAccessFallbackHTTPStatus, isHTTPAccessFallbackError } from '../../../client/components/http-access-fallback/http-access-fallback';\nimport { RedirectStatusCode } from '../../../client/components/redirect-status-code';\nimport { INFINITE_CACHE } from '../../../lib/constants';\nexport class WrappedNextRouterError {\n    constructor(error, headers){\n        this.error = error;\n        this.headers = headers;\n    }\n}\n/**\n * AppRouteRouteHandler is the handler for app routes.\n */ export class AppRouteRouteModule extends RouteModule {\n    static #_ = this.sharedModules = sharedModules;\n    constructor({ userland, definition, resolvedPagePath, nextConfigOutput }){\n        super({\n            userland,\n            definition\n        }), /**\n   * A reference to the request async storage.\n   */ this.workUnitAsyncStorage = workUnitAsyncStorage, /**\n   * A reference to the static generation async storage.\n   */ this.workAsyncStorage = workAsyncStorage, /**\n   * An interface to call server hooks which interact with the underlying\n   * storage.\n   */ this.serverHooks = serverHooks, /**\n   * A reference to the mutation related async storage, such as mutations of\n   * cookies.\n   */ this.actionAsyncStorage = actionAsyncStorage;\n        this.resolvedPagePath = resolvedPagePath;\n        this.nextConfigOutput = nextConfigOutput;\n        // Automatically implement some methods if they aren't implemented by the\n        // userland module.\n        this.methods = autoImplementMethods(userland);\n        // Get the non-static methods for this route.\n        this.hasNonStaticMethods = hasNonStaticMethods(userland);\n        // Get the dynamic property from the userland module.\n        this.dynamic = this.userland.dynamic;\n        if (this.nextConfigOutput === 'export') {\n            if (this.dynamic === 'force-dynamic') {\n                throw new Error(`export const dynamic = \"force-dynamic\" on page \"${definition.pathname}\" cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export`);\n            } else if (!isStaticGenEnabled(this.userland) && this.userland['GET']) {\n                throw new Error(`export const dynamic = \"force-static\"/export const revalidate not configured on route \"${definition.pathname}\" with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export`);\n            } else {\n                this.dynamic = 'error';\n            }\n        }\n        // We only warn in development after here, so return if we're not in\n        // development.\n        if (process.env.NODE_ENV === 'development') {\n            // Print error in development if the exported handlers are in lowercase, only\n            // uppercase handlers are supported.\n            const lowercased = HTTP_METHODS.map((method)=>method.toLowerCase());\n            for (const method of lowercased){\n                if (method in this.userland) {\n                    Log.error(`Detected lowercase method '${method}' in '${this.resolvedPagePath}'. Export the uppercase '${method.toUpperCase()}' method name to fix this error.`);\n                }\n            }\n            // Print error if the module exports a default handler, they must use named\n            // exports for each HTTP method.\n            if ('default' in this.userland) {\n                Log.error(`Detected default export in '${this.resolvedPagePath}'. Export a named export for each HTTP method instead.`);\n            }\n            // If there is no methods exported by this module, then return a not found\n            // response.\n            if (!HTTP_METHODS.some((method)=>method in this.userland)) {\n                Log.error(`No HTTP methods exported in '${this.resolvedPagePath}'. Export a named export for each HTTP method.`);\n            }\n        }\n    }\n    /**\n   * Resolves the handler function for the given method.\n   *\n   * @param method the requested method\n   * @returns the handler function for the given method\n   */ resolve(method) {\n        // Ensure that the requested method is a valid method (to prevent RCE's).\n        if (!isHTTPMethod(method)) return ()=>new Response(null, {\n                status: 400\n            });\n        // Return the handler.\n        return this.methods[method];\n    }\n    async do(handler, actionStore, workStore, // @TODO refactor to not take this argument but instead construct the RequestStore\n    // inside this function. Right now we get passed a RequestStore even when\n    // we're going to do a prerender. We should probably just split do up into prexecute and execute\n    requestStore, implicitTags, request, context) {\n        var _context_renderOpts_experimental, _workStore_incrementalCache;\n        const isStaticGeneration = workStore.isStaticGeneration;\n        const dynamicIOEnabled = !!((_context_renderOpts_experimental = context.renderOpts.experimental) == null ? void 0 : _context_renderOpts_experimental.dynamicIO);\n        // Patch the global fetch.\n        patchFetch({\n            workAsyncStorage: this.workAsyncStorage,\n            workUnitAsyncStorage: this.workUnitAsyncStorage\n        });\n        const handlerContext = {\n            params: context.params ? createServerParamsForRoute(parsedUrlQueryToParams(context.params), workStore) : undefined\n        };\n        let prerenderStore = null;\n        let res;\n        try {\n            if (isStaticGeneration) {\n                const userlandRevalidate = this.userland.revalidate;\n                const defaultRevalidate = // If the static generation store does not have a revalidate value\n                // set, then we should set it the revalidate value from the userland\n                // module or default to false.\n                userlandRevalidate === false || userlandRevalidate === undefined ? INFINITE_CACHE : userlandRevalidate;\n                if (dynamicIOEnabled) {\n                    /**\n           * When we are attempting to statically prerender the GET handler of a route.ts module\n           * and dynamicIO is on we follow a similar pattern to rendering.\n           *\n           * We first run the handler letting caches fill. If something synchronously dynamic occurs\n           * during this prospective render then we can infer it will happen on every render and we\n           * just bail out of prerendering.\n           *\n           * Next we run the handler again and we check if we get a result back in a microtask.\n           * Next.js expects the return value to be a Response or a Thenable that resolves to a Response.\n           * Unfortunately Response's do not allow for accessing the response body synchronously or in\n           * a microtask so we need to allow one more task to unwrap the response body. This is a slightly\n           * different semantic than what we have when we render and it means that certain tasks can still\n           * execute before a prerender completes such as a carefully timed setImmediate.\n           *\n           * Functionally though IO should still take longer than the time it takes to unwrap the response body\n           * so our heuristic of excluding any IO should be preserved.\n           */ const prospectiveController = new AbortController();\n                    let prospectiveRenderIsDynamic = false;\n                    const cacheSignal = new CacheSignal();\n                    let dynamicTracking = createDynamicTrackingState(undefined);\n                    const prospectiveRoutePrerenderStore = prerenderStore = {\n                        type: 'prerender',\n                        phase: 'action',\n                        implicitTags: implicitTags,\n                        renderSignal: prospectiveController.signal,\n                        controller: prospectiveController,\n                        cacheSignal,\n                        // During prospective render we don't use a controller\n                        // because we need to let all caches fill.\n                        dynamicTracking,\n                        revalidate: defaultRevalidate,\n                        expire: INFINITE_CACHE,\n                        stale: INFINITE_CACHE,\n                        tags: [\n                            ...implicitTags\n                        ],\n                        prerenderResumeDataCache: null\n                    };\n                    let prospectiveResult;\n                    try {\n                        prospectiveResult = this.workUnitAsyncStorage.run(prospectiveRoutePrerenderStore, handler, request, handlerContext);\n                    } catch (err) {\n                        if (prospectiveController.signal.aborted) {\n                            // the route handler called an API which is always dynamic\n                            // there is no need to try again\n                            prospectiveRenderIsDynamic = true;\n                        } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                            printDebugThrownValueForProspectiveRender(err, workStore.route);\n                        }\n                    }\n                    if (typeof prospectiveResult === 'object' && prospectiveResult !== null && typeof prospectiveResult.then === 'function') {\n                        // The handler returned a Thenable. We'll listen for rejections to determine\n                        // if the route is erroring for dynamic reasons.\n                        ;\n                        prospectiveResult.then(()=>{}, (err)=>{\n                            if (prospectiveController.signal.aborted) {\n                                // the route handler called an API which is always dynamic\n                                // there is no need to try again\n                                prospectiveRenderIsDynamic = true;\n                            } else if (process.env.NEXT_DEBUG_BUILD) {\n                                printDebugThrownValueForProspectiveRender(err, workStore.route);\n                            }\n                        });\n                    }\n                    await cacheSignal.cacheReady();\n                    if (prospectiveRenderIsDynamic) {\n                        // the route handler called an API which is always dynamic\n                        // there is no need to try again\n                        const dynamicReason = getFirstDynamicReason(dynamicTracking);\n                        if (dynamicReason) {\n                            throw new DynamicServerError(`Route ${workStore.route} couldn't be rendered statically because it used \\`${dynamicReason}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`);\n                        } else {\n                            console.error('Expected Next.js to keep track of reason for opting out of static rendering but one was not found. This is a bug in Next.js');\n                            throw new DynamicServerError(`Route ${workStore.route} couldn't be rendered statically because it used a dynamic API. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`);\n                        }\n                    }\n                    // TODO start passing this controller to the route handler. We should expose\n                    // it so the handler to abort inflight requests and other operations if we abort\n                    // the prerender.\n                    const finalController = new AbortController();\n                    dynamicTracking = createDynamicTrackingState(undefined);\n                    const finalRoutePrerenderStore = prerenderStore = {\n                        type: 'prerender',\n                        phase: 'action',\n                        implicitTags: implicitTags,\n                        renderSignal: finalController.signal,\n                        controller: finalController,\n                        cacheSignal: null,\n                        dynamicTracking,\n                        revalidate: defaultRevalidate,\n                        expire: INFINITE_CACHE,\n                        stale: INFINITE_CACHE,\n                        tags: [\n                            ...implicitTags\n                        ],\n                        prerenderResumeDataCache: null\n                    };\n                    let responseHandled = false;\n                    res = await new Promise((resolve, reject)=>{\n                        scheduleImmediate(async ()=>{\n                            try {\n                                const result = await this.workUnitAsyncStorage.run(finalRoutePrerenderStore, handler, request, handlerContext);\n                                if (responseHandled) {\n                                    // we already rejected in the followup task\n                                    return;\n                                } else if (!(result instanceof Response)) {\n                                    // This is going to error but we let that happen below\n                                    resolve(result);\n                                    return;\n                                }\n                                responseHandled = true;\n                                let bodyHandled = false;\n                                result.arrayBuffer().then((body)=>{\n                                    if (!bodyHandled) {\n                                        bodyHandled = true;\n                                        resolve(new Response(body, {\n                                            headers: result.headers,\n                                            status: result.status,\n                                            statusText: result.statusText\n                                        }));\n                                    }\n                                }, reject);\n                                scheduleImmediate(()=>{\n                                    if (!bodyHandled) {\n                                        bodyHandled = true;\n                                        finalController.abort();\n                                        reject(createDynamicIOError(workStore.route));\n                                    }\n                                });\n                            } catch (err) {\n                                reject(err);\n                            }\n                        });\n                        scheduleImmediate(()=>{\n                            if (!responseHandled) {\n                                responseHandled = true;\n                                finalController.abort();\n                                reject(createDynamicIOError(workStore.route));\n                            }\n                        });\n                    });\n                    if (finalController.signal.aborted) {\n                        // We aborted from within the execution\n                        throw createDynamicIOError(workStore.route);\n                    } else {\n                        // We didn't abort during the execution. We can abort now as a matter of semantics\n                        // though at the moment nothing actually consumes this signal so it won't halt any\n                        // inflight work.\n                        finalController.abort();\n                    }\n                } else {\n                    prerenderStore = {\n                        type: 'prerender-legacy',\n                        phase: 'action',\n                        implicitTags: implicitTags,\n                        revalidate: defaultRevalidate,\n                        expire: INFINITE_CACHE,\n                        stale: INFINITE_CACHE,\n                        tags: [\n                            ...implicitTags\n                        ]\n                    };\n                    res = await workUnitAsyncStorage.run(prerenderStore, handler, request, handlerContext);\n                }\n            } else {\n                res = await workUnitAsyncStorage.run(requestStore, handler, request, handlerContext);\n            }\n        } catch (err) {\n            if (isRedirectError(err)) {\n                const url = getURLFromRedirectError(err);\n                if (!url) {\n                    throw new Error('Invariant: Unexpected redirect url format');\n                }\n                // We need to capture any headers that should be sent on\n                // the response.\n                const headers = new Headers({\n                    Location: url\n                });\n                // Let's append any cookies that were added by the\n                // cookie API.\n                // TODO leaving the gate here b/c it indicates that we we might not actually want to do this\n                // on every `do` call. During prerender there should be no mutableCookies because\n                if (requestStore.type === 'request') {\n                    appendMutableCookies(headers, requestStore.mutableCookies);\n                }\n                // Return the redirect response.\n                return new Response(null, {\n                    // If we're in an action, we want to use a 303 redirect as we don't\n                    // want the POST request to follow the redirect, as it could result in\n                    // erroneous re-submissions.\n                    status: actionStore.isAction ? RedirectStatusCode.SeeOther : getRedirectStatusCodeFromError(err),\n                    headers\n                });\n            } else if (isHTTPAccessFallbackError(err)) {\n                const httpStatus = getAccessFallbackHTTPStatus(err);\n                return new Response(null, {\n                    status: httpStatus\n                });\n            }\n            throw err;\n        }\n        // Validate that the response is a valid response object.\n        if (!(res instanceof Response)) {\n            throw new Error(`No response is returned from route handler '${this.resolvedPagePath}'. Ensure you return a \\`Response\\` or a \\`NextResponse\\` in all branches of your handler.`);\n        }\n        context.renderOpts.fetchMetrics = workStore.fetchMetrics;\n        context.renderOpts.pendingWaitUntil = Promise.all([\n            (_workStore_incrementalCache = workStore.incrementalCache) == null ? void 0 : _workStore_incrementalCache.revalidateTag(workStore.revalidatedTags || []),\n            ...Object.values(workStore.pendingRevalidates || {})\n        ]).finally(()=>{\n            if (process.env.NEXT_PRIVATE_DEBUG_CACHE) {\n                console.log('pending revalidates promise finished for:', requestStore.url);\n            }\n        });\n        if (prerenderStore) {\n            var _prerenderStore_tags;\n            context.renderOpts.collectedTags = (_prerenderStore_tags = prerenderStore.tags) == null ? void 0 : _prerenderStore_tags.join(',');\n            context.renderOpts.collectedRevalidate = prerenderStore.revalidate;\n            context.renderOpts.collectedExpire = prerenderStore.expire;\n            context.renderOpts.collectedStale = prerenderStore.stale;\n        }\n        // It's possible cookies were set in the handler, so we need\n        // to merge the modified cookies and the returned response\n        // here.\n        const headers = new Headers(res.headers);\n        if (requestStore.type === 'request' && appendMutableCookies(headers, requestStore.mutableCookies)) {\n            return new Response(res.body, {\n                status: res.status,\n                statusText: res.statusText,\n                headers\n            });\n        }\n        return res;\n    }\n    async handle(req, context) {\n        // Get the handler function for the given method.\n        const handler = this.resolve(req.method);\n        // Get the context for the static generation.\n        const staticGenerationContext = {\n            // App Routes don't support unknown route params.\n            fallbackRouteParams: null,\n            page: this.definition.page,\n            renderOpts: context.renderOpts\n        };\n        // Add the fetchCache option to the renderOpts.\n        staticGenerationContext.renderOpts.fetchCache = this.userland.fetchCache;\n        const actionStore = {\n            isAppRoute: true,\n            isAction: getIsServerAction(req)\n        };\n        const implicitTags = getImplicitTags(this.definition.page, req.nextUrl, // App Routes don't support unknown route params.\n        null);\n        const requestStore = createRequestStoreForAPI(req, req.nextUrl, implicitTags, undefined, context.prerenderManifest.preview);\n        const workStore = createWorkStore(staticGenerationContext);\n        // Run the handler with the request AsyncLocalStorage to inject the helper\n        // support. We set this to `unknown` because the type is not known until\n        // runtime when we do a instanceof check below.\n        const response = await this.actionAsyncStorage.run(actionStore, ()=>this.workUnitAsyncStorage.run(requestStore, ()=>this.workAsyncStorage.run(workStore, async ()=>{\n                    // Check to see if we should bail out of static generation based on\n                    // having non-static methods.\n                    if (this.hasNonStaticMethods) {\n                        if (workStore.isStaticGeneration) {\n                            const err = new DynamicServerError('Route is configured with methods that cannot be statically generated.');\n                            workStore.dynamicUsageDescription = err.message;\n                            workStore.dynamicUsageStack = err.stack;\n                            throw err;\n                        }\n                    }\n                    // We assume we can pass the original request through however we may end up\n                    // proxying it in certain circumstances based on execution type and configuration\n                    let request = req;\n                    // Update the static generation store based on the dynamic property.\n                    switch(this.dynamic){\n                        case 'force-dynamic':\n                            {\n                                // Routes of generated paths should be dynamic\n                                workStore.forceDynamic = true;\n                                break;\n                            }\n                        case 'force-static':\n                            // The dynamic property is set to force-static, so we should\n                            // force the page to be static.\n                            workStore.forceStatic = true;\n                            // We also Proxy the request to replace dynamic data on the request\n                            // with empty stubs to allow for safely executing as static\n                            request = new Proxy(req, forceStaticRequestHandlers);\n                            break;\n                        case 'error':\n                            // The dynamic property is set to error, so we should throw an\n                            // error if the page is being statically generated.\n                            workStore.dynamicShouldError = true;\n                            if (workStore.isStaticGeneration) request = new Proxy(req, requireStaticRequestHandlers);\n                            break;\n                        default:\n                            // We proxy `NextRequest` to track dynamic access, and potentially bail out of static generation\n                            request = proxyNextRequest(req, workStore);\n                    }\n                    // TODO: propagate this pathname from route matcher\n                    const route = getPathnameFromAbsolutePath(this.resolvedPagePath);\n                    const tracer = getTracer();\n                    // Update the root span attribute for the route.\n                    tracer.setRootSpanAttribute('next.route', route);\n                    return tracer.trace(AppRouteRouteHandlersSpan.runHandler, {\n                        spanName: `executing api route (app) ${route}`,\n                        attributes: {\n                            'next.route': route\n                        }\n                    }, async ()=>this.do(handler, actionStore, workStore, requestStore, implicitTags, request, context));\n                })));\n        // If the handler did't return a valid response, then return the internal\n        // error response.\n        if (!(response instanceof Response)) {\n            // TODO: validate the correct handling behavior, maybe log something?\n            return new Response(null, {\n                status: 500\n            });\n        }\n        if (response.headers.has('x-middleware-rewrite')) {\n            throw new Error('NextResponse.rewrite() was used in a app route handler, this is not currently supported. Please remove the invocation to continue.');\n        }\n        if (response.headers.get('x-middleware-next') === '1') {\n            // TODO: move this error into the `NextResponse.next()` function.\n            throw new Error('NextResponse.next() was used in a app route handler, this is not supported. See here for more info: https://nextjs.org/docs/messages/next-response-next-in-app-route-handler');\n        }\n        return response;\n    }\n}\nexport default AppRouteRouteModule;\n/**\n * Gets all the method names for handlers that are not considered static.\n *\n * @param handlers the handlers from the userland module\n * @returns the method names that are not considered static or false if all\n *          methods are static\n */ export function hasNonStaticMethods(handlers) {\n    if (// Order these by how common they are to be used\n    handlers.POST || handlers.PUT || handlers.DELETE || handlers.PATCH || handlers.OPTIONS) {\n        return true;\n    }\n    return false;\n}\n// These symbols will be used to stash cached values on Proxied requests without requiring\n// additional closures or storage such as WeakMaps.\nconst nextURLSymbol = Symbol('nextUrl');\nconst requestCloneSymbol = Symbol('clone');\nconst urlCloneSymbol = Symbol('clone');\nconst searchParamsSymbol = Symbol('searchParams');\nconst hrefSymbol = Symbol('href');\nconst toStringSymbol = Symbol('toString');\nconst headersSymbol = Symbol('headers');\nconst cookiesSymbol = Symbol('cookies');\n/**\n * The general technique with these proxy handlers is to prioritize keeping them static\n * by stashing computed values on the Proxy itself. This is safe because the Proxy is\n * inaccessible to the consumer since all operations are forwarded\n */ const forceStaticRequestHandlers = {\n    get (target, prop, receiver) {\n        switch(prop){\n            case 'headers':\n                return target[headersSymbol] || (target[headersSymbol] = HeadersAdapter.seal(new Headers({})));\n            case 'cookies':\n                return target[cookiesSymbol] || (target[cookiesSymbol] = RequestCookiesAdapter.seal(new RequestCookies(new Headers({}))));\n            case 'nextUrl':\n                return target[nextURLSymbol] || (target[nextURLSymbol] = new Proxy(target.nextUrl, forceStaticNextUrlHandlers));\n            case 'url':\n                // we don't need to separately cache this we can just read the nextUrl\n                // and return the href since we know it will have been stripped of any\n                // dynamic parts. We access via the receiver to trigger the get trap\n                return receiver.nextUrl.href;\n            case 'geo':\n            case 'ip':\n                return undefined;\n            case 'clone':\n                return target[requestCloneSymbol] || (target[requestCloneSymbol] = ()=>new Proxy(// This is vaguely unsafe but it's required since NextRequest does not implement\n                    // clone. The reason we might expect this to work in this context is the Proxy will\n                    // respond with static-amenable values anyway somewhat restoring the interface.\n                    // @TODO we need to rethink NextRequest and NextURL because they are not sufficientlly\n                    // sophisticated to adequately represent themselves in all contexts. A better approach is\n                    // to probably embed the static generation logic into the class itself removing the need\n                    // for any kind of proxying\n                    target.clone(), forceStaticRequestHandlers));\n            default:\n                return ReflectAdapter.get(target, prop, receiver);\n        }\n    }\n};\nconst forceStaticNextUrlHandlers = {\n    get (target, prop, receiver) {\n        switch(prop){\n            // URL properties\n            case 'search':\n                return '';\n            case 'searchParams':\n                return target[searchParamsSymbol] || (target[searchParamsSymbol] = new URLSearchParams());\n            case 'href':\n                return target[hrefSymbol] || (target[hrefSymbol] = cleanURL(target.href).href);\n            case 'toJSON':\n            case 'toString':\n                return target[toStringSymbol] || (target[toStringSymbol] = ()=>receiver.href);\n            // NextUrl properties\n            case 'url':\n                // Currently nextURL does not expose url but our Docs indicate that it is an available property\n                // I am forcing this to undefined here to avoid accidentally exposing a dynamic value later if\n                // the underlying nextURL ends up adding this property\n                return undefined;\n            case 'clone':\n                return target[urlCloneSymbol] || (target[urlCloneSymbol] = ()=>new Proxy(target.clone(), forceStaticNextUrlHandlers));\n            default:\n                return ReflectAdapter.get(target, prop, receiver);\n        }\n    }\n};\nfunction proxyNextRequest(request, workStore) {\n    const nextUrlHandlers = {\n        get (target, prop, receiver) {\n            switch(prop){\n                case 'search':\n                case 'searchParams':\n                case 'url':\n                case 'href':\n                case 'toJSON':\n                case 'toString':\n                case 'origin':\n                    {\n                        const workUnitStore = workUnitAsyncStorage.getStore();\n                        trackDynamic(workStore, workUnitStore, `nextUrl.${prop}`);\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                case 'clone':\n                    return target[urlCloneSymbol] || (target[urlCloneSymbol] = ()=>new Proxy(target.clone(), nextUrlHandlers));\n                default:\n                    return ReflectAdapter.get(target, prop, receiver);\n            }\n        }\n    };\n    const nextRequestHandlers = {\n        get (target, prop) {\n            switch(prop){\n                case 'nextUrl':\n                    return target[nextURLSymbol] || (target[nextURLSymbol] = new Proxy(target.nextUrl, nextUrlHandlers));\n                case 'headers':\n                case 'cookies':\n                case 'url':\n                case 'body':\n                case 'blob':\n                case 'json':\n                case 'text':\n                case 'arrayBuffer':\n                case 'formData':\n                    {\n                        const workUnitStore = workUnitAsyncStorage.getStore();\n                        trackDynamic(workStore, workUnitStore, `request.${prop}`);\n                        // The receiver arg is intentionally the same as the target to fix an issue with\n                        // edge runtime, where attempting to access internal slots with the wrong `this` context\n                        // results in an error.\n                        return ReflectAdapter.get(target, prop, target);\n                    }\n                case 'clone':\n                    return target[requestCloneSymbol] || (target[requestCloneSymbol] = ()=>new Proxy(// This is vaguely unsafe but it's required since NextRequest does not implement\n                        // clone. The reason we might expect this to work in this context is the Proxy will\n                        // respond with static-amenable values anyway somewhat restoring the interface.\n                        // @TODO we need to rethink NextRequest and NextURL because they are not sufficientlly\n                        // sophisticated to adequately represent themselves in all contexts. A better approach is\n                        // to probably embed the static generation logic into the class itself removing the need\n                        // for any kind of proxying\n                        target.clone(), nextRequestHandlers));\n                default:\n                    // The receiver arg is intentionally the same as the target to fix an issue with\n                    // edge runtime, where attempting to access internal slots with the wrong `this` context\n                    // results in an error.\n                    return ReflectAdapter.get(target, prop, target);\n            }\n        }\n    };\n    return new Proxy(request, nextRequestHandlers);\n}\nconst requireStaticRequestHandlers = {\n    get (target, prop, receiver) {\n        switch(prop){\n            case 'nextUrl':\n                return target[nextURLSymbol] || (target[nextURLSymbol] = new Proxy(target.nextUrl, requireStaticNextUrlHandlers));\n            case 'headers':\n            case 'cookies':\n            case 'url':\n            case 'body':\n            case 'blob':\n            case 'json':\n            case 'text':\n            case 'arrayBuffer':\n            case 'formData':\n                throw new StaticGenBailoutError(`Route ${target.nextUrl.pathname} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`request.${prop}\\`.`);\n            case 'clone':\n                return target[requestCloneSymbol] || (target[requestCloneSymbol] = ()=>new Proxy(// This is vaguely unsafe but it's required since NextRequest does not implement\n                    // clone. The reason we might expect this to work in this context is the Proxy will\n                    // respond with static-amenable values anyway somewhat restoring the interface.\n                    // @TODO we need to rethink NextRequest and NextURL because they are not sufficientlly\n                    // sophisticated to adequately represent themselves in all contexts. A better approach is\n                    // to probably embed the static generation logic into the class itself removing the need\n                    // for any kind of proxying\n                    target.clone(), requireStaticRequestHandlers));\n            default:\n                return ReflectAdapter.get(target, prop, receiver);\n        }\n    }\n};\nconst requireStaticNextUrlHandlers = {\n    get (target, prop, receiver) {\n        switch(prop){\n            case 'search':\n            case 'searchParams':\n            case 'url':\n            case 'href':\n            case 'toJSON':\n            case 'toString':\n            case 'origin':\n                throw new StaticGenBailoutError(`Route ${target.pathname} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`nextUrl.${prop}\\`.`);\n            case 'clone':\n                return target[urlCloneSymbol] || (target[urlCloneSymbol] = ()=>new Proxy(target.clone(), requireStaticNextUrlHandlers));\n            default:\n                return ReflectAdapter.get(target, prop, receiver);\n        }\n    }\n};\nfunction createDynamicIOError(route) {\n    return new DynamicServerError(`Route ${route} couldn't be rendered statically because it used IO that was not cached. See more info here: https://nextjs.org/docs/messages/dynamic-io`);\n}\nexport function trackDynamic(store, workUnitStore, expression) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache') {\n            throw new Error(`Route ${store.route} used \"${expression}\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"${expression}\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`);\n        } else if (workUnitStore.type === 'unstable-cache') {\n            throw new Error(`Route ${store.route} used \"${expression}\" inside a function cached with \"unstable_cache(...)\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"${expression}\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`);\n        }\n    }\n    if (store.dynamicShouldError) {\n        throw new StaticGenBailoutError(`Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`);\n    }\n    if (workUnitStore) {\n        if (workUnitStore.type === 'prerender') {\n            // dynamicIO Prerender\n            const error = new Error(`Route ${store.route} used ${expression} without first calling \\`await connection()\\`. See more info here: https://nextjs.org/docs/messages/next-prerender-sync-request`);\n            abortAndThrowOnSynchronousRequestDataAccess(store.route, expression, error, workUnitStore);\n        } else if (workUnitStore.type === 'prerender-ppr') {\n            // PPR Prerender\n            postponeWithTracking(store.route, expression, workUnitStore.dynamicTracking);\n        } else if (workUnitStore.type === 'prerender-legacy') {\n            // legacy Prerender\n            workUnitStore.revalidate = 0;\n            const err = new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`);\n            store.dynamicUsageDescription = expression;\n            store.dynamicUsageStack = err.stack;\n            throw err;\n        } else if (process.env.NODE_ENV === 'development' && workUnitStore && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n\n//# sourceMappingURL=module.js.map","export class PageSignatureError extends Error {\n    constructor({ page }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","import type { OutgoingHttpHeaders } from 'http'\n\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */\nexport function getHostname(\n  parsed: { hostname?: string | null },\n  headers?: OutgoingHttpHeaders\n): string | undefined {\n  // Get the hostname from the headers if it exists, otherwise use the parsed\n  // hostname.\n  let hostname: string\n  if (headers?.host && !Array.isArray(headers.host)) {\n    hostname = headers.host.toString().split(':', 1)[0]\n  } else if (parsed.hostname) {\n    hostname = parsed.hostname\n  } else return\n\n  return hostname.toLowerCase()\n}\n","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale';\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info';\nimport { getHostname } from '../../shared/lib/get-hostname';\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info';\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'));\n}\nconst Internal = Symbol('NextURLInternal');\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts || typeof baseOrOpts === 'string') {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: ''\n        };\n        this.analyze();\n    }\n    analyze() {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig, _this_Internal_domainLocale, _this_Internal_options_nextConfig_i18n1, _this_Internal_options_nextConfig1;\n        const info = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = getHostname(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : detectDomainLocale((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? '';\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? '';\n    }\n    set locale(locale) {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig;\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith('/') ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","import { ReflectAdapter } from './reflect';\n/**\n * @internal\n */ export class ReadonlyHeadersError extends Error {\n    constructor(){\n        super('Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers');\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nexport class HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === 'undefined') return;\n                // If the original casing exists, return the value.\n                return ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === 'undefined') return false;\n                // If the original casing exists, return true.\n                return ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === 'undefined') return true;\n                // If the original casing exists, delete the property.\n                return ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'append':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(', ');\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === 'string') {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== 'undefined') return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== 'undefined';\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n\n//# sourceMappingURL=headers.js.map","export class ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === 'function') {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n}\n\n//# sourceMappingURL=reflect.js.map","import { RequestCookies } from '../cookies';\nimport { ResponseCookies } from '../cookies';\nimport { ReflectAdapter } from './reflect';\nimport { workAsyncStorage } from '../../../app-render/work-async-storage.external';\nimport { getExpectedRequestStore } from '../../../app-render/work-unit-async-storage.external';\n/**\n * @internal\n */ export class ReadonlyRequestCookiesError extends Error {\n    constructor(){\n        super('Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#options');\n    }\n    static callable() {\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nexport class RequestCookiesAdapter {\n    static seal(cookies) {\n        return new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'clear':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyRequestCookiesError.callable;\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for('next.mutated.cookies');\nexport function getModifiedCookieValues(cookies) {\n    const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n    if (!modified || !Array.isArray(modified) || modified.length === 0) {\n        return [];\n    }\n    return modified;\n}\nexport function appendMutableCookies(headers, mutableCookies) {\n    const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n    if (modifiedCookieValues.length === 0) {\n        return false;\n    }\n    // Return a new response that extends the response with\n    // the modified cookies as fallbacks. `res` cookies\n    // will still take precedence.\n    const resCookies = new ResponseCookies(headers);\n    const returnedCookies = resCookies.getAll();\n    // Set the modified cookies as fallbacks.\n    for (const cookie of modifiedCookieValues){\n        resCookies.set(cookie);\n    }\n    // Set the original cookies as the final values.\n    for (const cookie of returnedCookies){\n        resCookies.set(cookie);\n    }\n    return true;\n}\nexport class MutableRequestCookiesAdapter {\n    static wrap(cookies, onUpdateCookies) {\n        const responseCookies = new ResponseCookies(new Headers());\n        for (const cookie of cookies.getAll()){\n            responseCookies.set(cookie);\n        }\n        let modifiedValues = [];\n        const modifiedCookies = new Set();\n        const updateResponseCookies = ()=>{\n            // TODO-APP: change method of getting workStore\n            const workStore = workAsyncStorage.getStore();\n            if (workStore) {\n                workStore.pathWasRevalidated = true;\n            }\n            const allCookies = responseCookies.getAll();\n            modifiedValues = allCookies.filter((c)=>modifiedCookies.has(c.name));\n            if (onUpdateCookies) {\n                const serializedCookies = [];\n                for (const cookie of modifiedValues){\n                    const tempCookies = new ResponseCookies(new Headers());\n                    tempCookies.set(cookie);\n                    serializedCookies.push(tempCookies.toString());\n                }\n                onUpdateCookies(serializedCookies);\n            }\n        };\n        const wrappedCookies = new Proxy(responseCookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    // A special symbol to get the modified cookie values\n                    case SYMBOL_MODIFY_COOKIE_VALUES:\n                        return modifiedValues;\n                    // TODO: Throw error if trying to set a cookie after the response\n                    // headers have been set.\n                    case 'delete':\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === 'string' ? args[0] : args[0].name);\n                            try {\n                                target.delete(...args);\n                                return wrappedCookies;\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    case 'set':\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === 'string' ? args[0] : args[0].name);\n                            try {\n                                target.set(...args);\n                                return wrappedCookies;\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n        return wrappedCookies;\n    }\n}\nexport function wrapWithMutableAccessCheck(responseCookies) {\n    const wrappedCookies = new Proxy(responseCookies, {\n        get (target, prop, receiver) {\n            switch(prop){\n                case 'delete':\n                    return function(...args) {\n                        ensureCookiesAreStillMutable('cookies().delete');\n                        target.delete(...args);\n                        return wrappedCookies;\n                    };\n                case 'set':\n                    return function(...args) {\n                        ensureCookiesAreStillMutable('cookies().set');\n                        target.set(...args);\n                        return wrappedCookies;\n                    };\n                default:\n                    return ReflectAdapter.get(target, prop, receiver);\n            }\n        }\n    });\n    return wrappedCookies;\n}\nexport function areCookiesMutableInCurrentPhase(requestStore) {\n    return requestStore.phase === 'action';\n}\n/** Ensure that cookies() starts throwing on mutation\n * if we changed phases and can no longer mutate.\n *\n * This can happen when going:\n *   'render' -> 'after'\n *   'action' -> 'render'\n * */ function ensureCookiesAreStillMutable(callingExpression) {\n    const requestStore = getExpectedRequestStore(callingExpression);\n    if (!areCookiesMutableInCurrentPhase(requestStore)) {\n        // TODO: maybe we can give a more precise error message based on callingExpression?\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nexport function responseCookiesToRequestCookies(responseCookies) {\n    const requestCookies = new RequestCookies(new Headers());\n    for (const cookie of responseCookies.getAll()){\n        requestCookies.set(cookie);\n    }\n    return requestCookies;\n}\n\n//# sourceMappingURL=request-cookies.js.map","export { RequestCookies, ResponseCookies, stringifyCookie } from 'next/dist/compiled/@edge-runtime/cookies';\n\n//# sourceMappingURL=cookies.js.map","import { NextURL } from '../next-url';\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils';\nimport { RemovedUAError, RemovedPageError } from '../error';\nimport { RequestCookies } from './cookies';\nexport const INTERNALS = Symbol('internal request');\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */ export class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== 'string' && 'url' in input ? input.url : String(input);\n        validateURL(url);\n        if (input instanceof Request) super(input, init);\n        else super(url, init);\n        const nextUrl = new NextURL(url, {\n            headers: toNodeOutgoingHttpHeaders(this.headers),\n            nextConfig: init.nextConfig\n        });\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            nextUrl,\n            url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? url : nextUrl.toString()\n        };\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            cookies: this.cookies,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get nextUrl() {\n        return this[INTERNALS].nextUrl;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url;\n    }\n}\n\n//# sourceMappingURL=request.js.map","import { NEXT_INTERCEPTION_MARKER_PREFIX, NEXT_QUERY_PARAM_PREFIX } from '../../lib/constants';\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */ export function fromNodeOutgoingHttpHeaders(nodeHeaders) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(nodeHeaders)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === 'undefined') continue;\n            if (typeof v === 'number') {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== '=' && ch !== ';' && ch !== ',';\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === ',') {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */ export function toNodeOutgoingHttpHeaders(headers) {\n    const nodeHeaders = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === 'set-cookie') {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                nodeHeaders[key] = value;\n            }\n        }\n    }\n    return nodeHeaders;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key; it calls the provided function\n * with the normalized key.\n */ export function normalizeNextQueryParam(key, onKeyNormalized) {\n    const prefixes = [\n        NEXT_QUERY_PARAM_PREFIX,\n        NEXT_INTERCEPTION_MARKER_PREFIX\n    ];\n    for (const prefix of prefixes){\n        if (key !== prefix && key.startsWith(prefix)) {\n            const normalizedKey = key.substring(prefix.length);\n            onKeyNormalized(normalizedKey);\n        }\n    }\n}\n\n//# sourceMappingURL=utils.js.map","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: string[]\n): PathLocale {\n  let detectedLocale: string | undefined\n  // first item will be empty string from splitting at first char\n  const pathnameParts = pathname.split('/')\n\n  ;(locales || []).some((locale) => {\n    if (\n      pathnameParts[1] &&\n      pathnameParts[1].toLowerCase() === locale.toLowerCase()\n    ) {\n      detectedLocale = locale\n      pathnameParts.splice(1, 1)\n      pathname = pathnameParts.join('/') || '/'\n      return true\n    }\n    return false\n  })\n\n  return {\n    pathname,\n    detectedLocale,\n  }\n}\n","export class InvariantError extends Error {\n  constructor(message: string, options?: ErrorOptions) {\n    super(\n      `Invariant: ${message.endsWith('.') ? message : message + '.'} This is a bug in Next.js.`,\n      options\n    )\n    this.name = 'InvariantError'\n  }\n}\n","/**\n * Check to see if a value is Thenable.\n *\n * @param promise the maybe-thenable value\n * @returns true if the value is thenable\n */\nexport function isThenable<T = unknown>(\n  promise: Promise<T> | T\n): promise is Promise<T> {\n  return (\n    promise !== null &&\n    typeof promise === 'object' &&\n    'then' in promise &&\n    typeof promise.then === 'function'\n  )\n}\n","/**\n * This module is for next.js server internal usage of path module.\n * It will use native path module for nodejs runtime.\n * It will use path-browserify polyfill for edge runtime.\n */\nlet path\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  path = require('next/dist/compiled/path-browserify')\n} else {\n  path = require('path')\n}\n\nmodule.exports = path\n","/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */\nexport function ensureLeadingSlash(path: string) {\n  return path.startsWith('/') ? path : `/${path}`\n}\n","import type { Segment } from '../../server/app-render/types'\n\nexport function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport function isParallelRouteSegment(segment: string) {\n  return segment.startsWith('@') && segment !== '@children'\n}\n\nexport function addSearchParamsIfPageSegment(\n  segment: Segment,\n  searchParams: Record<string, string | string[] | undefined>\n) {\n  const isPageSegment = segment.includes(PAGE_SEGMENT_KEY)\n\n  if (isPageSegment) {\n    const stringifiedQuery = JSON.stringify(searchParams)\n    return stringifiedQuery !== '{}'\n      ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery\n      : PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash'\nimport { isGroupSegment } from '../../segment'\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */\nexport function normalizeAppPath(route: string) {\n  return ensureLeadingSlash(\n    route.split('/').reduce((pathname, segment, index, segments) => {\n      // Empty segments are ignored.\n      if (!segment) {\n        return pathname\n      }\n\n      // Groups are ignored.\n      if (isGroupSegment(segment)) {\n        return pathname\n      }\n\n      // Parallel segments are ignored.\n      if (segment[0] === '@') {\n        return pathname\n      }\n\n      // The last segment (if it's a leaf) should be ignored.\n      if (\n        (segment === 'page' || segment === 'route') &&\n        index === segments.length - 1\n      ) {\n        return pathname\n      }\n\n      return `${pathname}/${segment}`\n    }, '')\n  )\n}\n\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */\nexport function normalizeRscURL(url: string) {\n  return url.replace(\n    /\\.rsc($|\\?)/,\n    // $1 ensures `?` is preserved\n    '$1'\n  )\n}\n","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    getTestReqInfo: null,\n    withRequest: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getTestReqInfo: function() {\n        return getTestReqInfo;\n    },\n    withRequest: function() {\n        return withRequest;\n    }\n});\nconst _nodeasync_hooks = require(\"node:async_hooks\");\nconst testStorage = new _nodeasync_hooks.AsyncLocalStorage();\nfunction extractTestInfoFromRequest(req, reader) {\n    const proxyPortHeader = reader.header(req, 'next-test-proxy-port');\n    if (!proxyPortHeader) {\n        return undefined;\n    }\n    const url = reader.url(req);\n    const proxyPort = Number(proxyPortHeader);\n    const testData = reader.header(req, 'next-test-data') || '';\n    return {\n        url,\n        proxyPort,\n        testData\n    };\n}\nfunction withRequest(req, reader, fn) {\n    const testReqInfo = extractTestInfoFromRequest(req, reader);\n    if (!testReqInfo) {\n        return fn();\n    }\n    return testStorage.run(testReqInfo, fn);\n}\nfunction getTestReqInfo(req, reader) {\n    const testReqInfo = testStorage.getStore();\n    if (testReqInfo) {\n        return testReqInfo;\n    }\n    if (req && reader) {\n        return extractTestInfoFromRequest(req, reader);\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=context.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    handleFetch: null,\n    interceptFetch: null,\n    reader: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    handleFetch: function() {\n        return handleFetch;\n    },\n    interceptFetch: function() {\n        return interceptFetch;\n    },\n    reader: function() {\n        return reader;\n    }\n});\nconst _context = require(\"./context\");\nconst reader = {\n    url (req) {\n        return req.url;\n    },\n    header (req, name) {\n        return req.headers.get(name);\n    }\n};\nfunction getTestStack() {\n    let stack = (new Error().stack ?? '').split('\\n');\n    // Skip the first line and find first non-empty line.\n    for(let i = 1; i < stack.length; i++){\n        if (stack[i].length > 0) {\n            stack = stack.slice(i);\n            break;\n        }\n    }\n    // Filter out franmework lines.\n    stack = stack.filter((f)=>!f.includes('/next/dist/'));\n    // At most 5 lines.\n    stack = stack.slice(0, 5);\n    // Cleanup some internal info and trim.\n    stack = stack.map((s)=>s.replace('webpack-internal:///(rsc)/', '').trim());\n    return stack.join('    ');\n}\nasync function buildProxyRequest(testData, request) {\n    const { url, method, headers, body, cache, credentials, integrity, mode, redirect, referrer, referrerPolicy } = request;\n    return {\n        testData,\n        api: 'fetch',\n        request: {\n            url,\n            method,\n            headers: [\n                ...Array.from(headers),\n                [\n                    'next-test-stack',\n                    getTestStack()\n                ]\n            ],\n            body: body ? Buffer.from(await request.arrayBuffer()).toString('base64') : null,\n            cache,\n            credentials,\n            integrity,\n            mode,\n            redirect,\n            referrer,\n            referrerPolicy\n        }\n    };\n}\nfunction buildResponse(proxyResponse) {\n    const { status, headers, body } = proxyResponse.response;\n    return new Response(body ? Buffer.from(body, 'base64') : null, {\n        status,\n        headers: new Headers(headers)\n    });\n}\nasync function handleFetch(originalFetch, request) {\n    const testInfo = (0, _context.getTestReqInfo)(request, reader);\n    if (!testInfo) {\n        // Passthrough non-test requests.\n        return originalFetch(request);\n    }\n    const { testData, proxyPort } = testInfo;\n    const proxyRequest = await buildProxyRequest(testData, request);\n    const resp = await originalFetch(`http://localhost:${proxyPort}`, {\n        method: 'POST',\n        body: JSON.stringify(proxyRequest),\n        next: {\n            // @ts-ignore\n            internal: true\n        }\n    });\n    if (!resp.ok) {\n        throw new Error(`Proxy request failed: ${resp.status}`);\n    }\n    const proxyResponse = await resp.json();\n    const { api } = proxyResponse;\n    switch(api){\n        case 'continue':\n            return originalFetch(request);\n        case 'abort':\n        case 'unhandled':\n            throw new Error(`Proxy request aborted [${request.method} ${request.url}]`);\n        default:\n            break;\n    }\n    return buildResponse(proxyResponse);\n}\nfunction interceptFetch(originalFetch) {\n    global.fetch = function testFetch(input, init) {\n        var _init_next;\n        // Passthrough internal requests.\n        // @ts-ignore\n        if (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) {\n            return originalFetch(input, init);\n        }\n        return handleFetch(originalFetch, new Request(input, init));\n    };\n    return ()=>{\n        global.fetch = originalFetch;\n    };\n}\n\n//# sourceMappingURL=fetch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    interceptTestApis: null,\n    wrapRequestHandler: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    interceptTestApis: function() {\n        return interceptTestApis;\n    },\n    wrapRequestHandler: function() {\n        return wrapRequestHandler;\n    }\n});\nconst _context = require(\"./context\");\nconst _fetch = require(\"./fetch\");\nfunction interceptTestApis() {\n    return (0, _fetch.interceptFetch)(global.fetch);\n}\nfunction wrapRequestHandler(handler) {\n    return (req, fn)=>(0, _context.withRequest)(req, _fetch.reader, ()=>handler(req, fn));\n}\n\n//# sourceMappingURL=server-edge.js.map","'use strict'\n\nconst hasBuffer = typeof Buffer !== 'undefined'\nconst suspectProtoRx = /\"(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])(?:p|\\\\u0070)(?:r|\\\\u0072)(?:o|\\\\u006[Ff])(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])\"\\s*:/\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/\n\nfunction _parse (text, reviver, options) {\n  // Normalize arguments\n  if (options == null) {\n    if (reviver !== null && typeof reviver === 'object') {\n      options = reviver\n      reviver = undefined\n    }\n  }\n\n  if (hasBuffer && Buffer.isBuffer(text)) {\n    text = text.toString()\n  }\n\n  // BOM checker\n  if (text && text.charCodeAt(0) === 0xFEFF) {\n    text = text.slice(1)\n  }\n\n  // Parse normally, allowing exceptions\n  const obj = JSON.parse(text, reviver)\n\n  // Ignore null and non-objects\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  const protoAction = (options && options.protoAction) || 'error'\n  const constructorAction = (options && options.constructorAction) || 'error'\n\n  // options: 'error' (default) / 'remove' / 'ignore'\n  if (protoAction === 'ignore' && constructorAction === 'ignore') {\n    return obj\n  }\n\n  if (protoAction !== 'ignore' && constructorAction !== 'ignore') {\n    if (suspectProtoRx.test(text) === false && suspectConstructorRx.test(text) === false) {\n      return obj\n    }\n  } else if (protoAction !== 'ignore' && constructorAction === 'ignore') {\n    if (suspectProtoRx.test(text) === false) {\n      return obj\n    }\n  } else {\n    if (suspectConstructorRx.test(text) === false) {\n      return obj\n    }\n  }\n\n  // Scan result for proto keys\n  return filter(obj, { protoAction, constructorAction, safe: options && options.safe })\n}\n\nfunction filter (obj, { protoAction = 'error', constructorAction = 'error', safe } = {}) {\n  let next = [obj]\n\n  while (next.length) {\n    const nodes = next\n    next = []\n\n    for (const node of nodes) {\n      if (protoAction !== 'ignore' && Object.prototype.hasOwnProperty.call(node, '__proto__')) { // Avoid calling node.hasOwnProperty directly\n        if (safe === true) {\n          return null\n        } else if (protoAction === 'error') {\n          throw new SyntaxError('Object contains forbidden prototype property')\n        }\n\n        delete node.__proto__ // eslint-disable-line no-proto\n      }\n\n      if (constructorAction !== 'ignore' &&\n          Object.prototype.hasOwnProperty.call(node, 'constructor') &&\n          Object.prototype.hasOwnProperty.call(node.constructor, 'prototype')) { // Avoid calling node.hasOwnProperty directly\n        if (safe === true) {\n          return null\n        } else if (constructorAction === 'error') {\n          throw new SyntaxError('Object contains forbidden prototype property')\n        }\n\n        delete node.constructor\n      }\n\n      for (const key in node) {\n        const value = node[key]\n        if (value && typeof value === 'object') {\n          next.push(value)\n        }\n      }\n    }\n  }\n  return obj\n}\n\nfunction parse (text, reviver, options) {\n  const stackTraceLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 0\n  try {\n    return _parse(text, reviver, options)\n  } finally {\n    Error.stackTraceLimit = stackTraceLimit\n  }\n}\n\nfunction safeParse (text, reviver) {\n  const stackTraceLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 0\n  try {\n    return _parse(text, reviver, { safe: true })\n  } catch (_e) {\n    return null\n  } finally {\n    Error.stackTraceLimit = stackTraceLimit\n  }\n}\n\nmodule.exports = parse\nmodule.exports.default = parse\nmodule.exports.parse = parse\nmodule.exports.safeParse = safeParse\nmodule.exports.scan = filter\n","const sharedAsyncLocalStorageNotAvailableError = new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available');\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nexport function createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nexport function bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nexport function createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","import { createAsyncLocalStorage } from './async-local-storage';\nexport const workAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=work-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { workAsyncStorageInstance } from './work-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { workAsyncStorageInstance as workAsyncStorage };\n\n//# sourceMappingURL=work-async-storage.external.js.map","import { createAsyncLocalStorage } from './async-local-storage';\nexport const workUnitAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=work-unit-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { workUnitAsyncStorageInstance } from './work-unit-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { workUnitAsyncStorageInstance as workUnitAsyncStorage };\nexport function getExpectedRequestStore(callingExpression) {\n    const workUnitStore = workUnitAsyncStorageInstance.getStore();\n    if (workUnitStore) {\n        if (workUnitStore.type === 'request') {\n            return workUnitStore;\n        }\n        if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-ppr' || workUnitStore.type === 'prerender-legacy') {\n            // This should not happen because we should have checked it already.\n            throw new Error(`\\`${callingExpression}\\` cannot be called inside a prerender. This is a bug in Next.js.`);\n        }\n        if (workUnitStore.type === 'cache') {\n            throw new Error(`\\`${callingExpression}\\` cannot be called inside \"use cache\". Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/messages/next-request-in-use-cache`);\n        } else if (workUnitStore.type === 'unstable-cache') {\n            throw new Error(`\\`${callingExpression}\\` cannot be called inside unstable_cache. Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`);\n        }\n    }\n    throw new Error(`\\`${callingExpression}\\` was called outside a request scope. Read more: https://nextjs.org/docs/messages/next-dynamic-api-wrong-context`);\n}\nexport function getPrerenderResumeDataCache(workUnitStore) {\n    if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-ppr') {\n        return workUnitStore.prerenderResumeDataCache;\n    }\n    return null;\n}\nexport function getRenderResumeDataCache(workUnitStore) {\n    if (workUnitStore.type !== 'prerender-legacy' && workUnitStore.type !== 'cache' && workUnitStore.type !== 'unstable-cache') {\n        if (workUnitStore.type === 'request') {\n            return workUnitStore.renderResumeDataCache;\n        }\n        // We return the mutable resume data cache here as an immutable version of\n        // the cache as it can also be used for reading.\n        return workUnitStore.prerenderResumeDataCache;\n    }\n    return null;\n}\n\n//# sourceMappingURL=work-unit-async-storage.external.js.map"],"names":["SERVER_ACTION_MANIFESTS_SINGLETON","Symbol","for","relativizeURL","url","base","baseURL","URL","relative","origin","protocol","host","toString","replace","TEST_ROUTE","isDynamicRoute","route","isInterceptionRouteAppPath","extractInterceptionRouteInformation","interceptedRoute","test","performance","every","method","DecodeError","Error","page","ensureLeadingSlash","getRouteMatcher","re","groups","pathname","routeMatch","exec","decode","decodeURIComponent","param","_","params","Object","keys","forEach","g","slugName","m","pos","undefined","indexOf","split","map","entry","repeat","reHasRegExp","reReplaceRegExp","escapeStringRegexp","str","PARAMETER_PATTERN","parseMatchedParameter","optional","startsWith","endsWith","slice","key","getRouteRegex","normalizedRoute","parameterizedRoute","getParametrizedRoute","segments","removeTrailingSlash","groupIndex","markerMatch","INTERCEPTION_ROUTE_MARKERS","find","segment","paramMatches","match","join","getSafeKeyFromSegment","interceptionMarker","getSafeRouteKey","routeKeys","keyPrefix","cleanedKey","invalidKey","length","isNaN","parseInt","interceptionPrefix","searchParamsToUrlQuery","searchParams","query","value","Array","isArray","push","unescapeSegments","compileNonPath","includes","compile","validate","getNamedRouteRegex","prefixRouteKey","result","getNamedParametrizedRoute","prefixRouteKeys","i","routeKey","buildGetSafeRouteKey","j","String","fromCharCode","Math","floor","namedParameterizedRoute","hasInterceptionMarker","some","usedMarker","NEXT_INTERCEPTION_MARKER_PREFIX","NEXT_QUERY_PARAM_PREFIX","namedRegex","getPathMatch","options","regexp","pathToRegexp","path","delimiter","sensitive","strict","matcher","regexpToFunction","regexModifier","RegExp","source","flags","removeUnnamedParams","name","matchHas","has","missing","hasMatch","hasItem","type","toLowerCase","req","headers","cookies","getCookieParser","getSafeParamName","newParamName","paramName","charCode","charCodeAt","matches","groupKey","item","prepareDestination","newUrl","assign","args","__nextLocale","__nextDefaultLocale","__nextDataReq","__nextInferredLocaleFromDefault","NEXT_RSC_UNION_QUERY","escapedDestination","destination","escapeSegment","segmentName","parsedDestination","parseUrl","parseRelativeUrl","parseQuery","globalBase","resolvedBase","getLocationOrigin","window","search","hash","href","parsedURL","hostname","port","destQuery","destPath","destHostname","destPathParamKeys","destHostnameParamKeys","destParams","destPathCompiler","destHostnameCompiler","strOrArray","entries","paramKeys","filter","appendParamsToQuery","marker","err","message","initialMessage","role","content","createOpenAI","apiKey","openai","process","env","OPENAI_API_KEY","compatibility","runtime","POST","messages","json","stream","streamText","model","temperature","toDataStreamResponse","clientReferenceManifest","serverActionsManifest","serverModuleMap","globalThis","clientReferenceManifestsPerPage","normalizeAppPath","ReactDOM","require","React","handleErrorInNextTick","setTimeoutOrImmediate","error","LocalPromise","Promise","scheduleMicrotask","queueMicrotask","callback","resolve","then","catch","currentView","writtenBytes","writeChunkAndReturn","chunk","byteLength","enqueue","Uint8Array","buffer","allowableBytes","set","subarray","textEncoder","TextEncoder","stringToChunk","encode","byteLengthOfChunk","closeWithError","close","CLIENT_REFERENCE_TAG$1","SERVER_REFERENCE_TAG","registerClientReferenceImpl","proxyImplementation","id","async","defineProperties","$$typeof","$$id","$$async","FunctionBind","Function","prototype","bind","ArraySlice","newFn","apply","arguments","call","$$bound","concat","configurable","PROMISE_PROTOTYPE","deepProxyHandlers","get","target","toPrimitive","toStringTag","getReference","moduleId","default","clientReference","proxy","Proxy","proxyHandlers$1","status","defineProperty","getOwnPropertyDescriptor","descriptor","writable","enumerable","getPrototypeOf","ReactDOMSharedInternals","__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","previousDispatcher","d","trimOptions","hasProperties","trimmed","f","r","D","prefetchDNS","request","resolveRequest","hints","add","emitHint","C","preconnect","crossOrigin","L","preload","as","imageSrcSet","imageSizes","uniquePart","preloadModule$1","X","preinitScript","src","S","preinitStyle","precedence","M","preinitModuleScript","supportsRequestStorage","AsyncLocalStorage","requestStorage","async_hooks","createHook","executionAsyncId","TEMPORARY_REFERENCE_TAG","proxyHandlers","REACT_LEGACY_ELEMENT_TYPE","REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_MEMO_CACHE_SENTINEL","MAYBE_ITERATOR_SYMBOL","iterator","getIteratorFn","maybeIterable","ASYNC_ITERATOR","asyncIterator","SuspenseException","noop$1","suspendedThenable","getSuspendedThenable","thenable","currentRequest$1","thenableIndexCounter","thenableState","getThenableStateAfterSuspending","state","HooksDispatcher","useMemo","nextCreate","useCallback","useDebugValue","useDeferredValue","unsupportedHook","useTransition","readContext","unsupportedContext","useContext","useReducer","useRef","useState","useInsertionEffect","useLayoutEffect","useImperativeHandle","useEffect","useId","identifierCount","identifierPrefix","useSyncExternalStore","useCacheRefresh","unsupportedRefresh","useMemoCache","size","data","use","usable","index","trackUsedThenable","reason","fulfilledValue","fulfilledThenable","rejectedThenable","DefaultAsyncDispatcher","getCacheForType","resourceType","JSCompiler_inline_result","cache","Map","ReactSharedInternalsServer","__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","isArrayImpl","objectName","object","p0","describeValueForErrorMessage","JSON","stringify","CLIENT_REFERENCE_TAG","displayName","describeObjectForErrorMessage","objectOrArray","expandedName","objKind","describeElementType","render","payload","_payload","_init","x","encodedKey","ObjectPrototype","defaultErrorHandler","console","defaultPostponeHandler","RequestInstance","bundlerConfig","onError","onPostpone","temporaryReferences","environmentName","filterStackFrame","onAllReady","onFatalError","A","Set","flushScheduled","fatalError","pendingChunks","nextChunkId","abortListeners","abortableTasks","pingedTasks","completedImportChunks","completedHintChunks","completedRegularChunks","completedErrorChunks","writtenSymbols","writtenClientReferences","writtenServerReferences","writtenObjects","WeakMap","taintCleanupQueue","createTask","noop","currentRequest","store","getStore","serializeThenable","task","newTask","keyPath","implicitSlot","pingTask","logRecoverableError","emitErrorChunk","delete","serializeByValueID","emitModelChunk","enqueueFlush","code","readThenable","voidHandler","renderFunctionComponent","Component","props","prevThenableState","createLazyWrapperAroundWakeable","wakeable","iteratorFn","iterableChild","ReadableStream","iterableChild$10","renderModelDestructive","emptyRoot","renderFragment","children","performWork","abortSet","ping","toJSON","parentPropertyName","prevKeyPath","prevImplicitSlot","thrownValue","encodeReferenceChunk","reference","serializeClientReference","parent","clientReferenceKey","existingId","config","modulePath","resolvedModuleData","idx","lastIndexOf","chunks","importId","row","processedChunk","outlineModel","retryTask","serializeTypedArray","tag","typedArray","bufferId","emitTypedArrayChunk","modelRoot","elementReference","existingReference","ref","renderElement","init","from","FormData","ArrayBuffer","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","DataView","Blob","blob","aborted","abortBlob","digest","reader","cancel","getReader","read","progress","done","serializeReadableStream","abortStream","streamTask","supportsBYOB","mode","releaseLock","emitChunk","x$8","serializeAsyncIterable","iterable","abortIterable","throw","next","endStreamRow","chunkId","x$9","Date","emitTextChunk","Number","isFinite","Infinity","bound","description","prevRequest","errorDigest","run","byteOffset","text","binaryLength","resolvedModel","prevDispatcher","H","hadAbortableTasks","flushCompletedChunks","importsChunks","splice","hintChunks","regularChunks","errorChunks","abort","errorId","clear","error$23","error$24","resolveServerReference","chunkCache","requireAsyncModule","promise","__next_require__","ignoreReject","preloadModule","metadata","promises","__webpack_chunk_load__","all","requireModule","moduleExports","__esModule","hasOwnProperty","Chunk","response","_response","createPendingChunk","wakeChunk","listeners","triggerErrorOnChunk","resolveModelChunk","enqueueModel","resolveListeners","rejectListeners","initializeModelChunk","createResolvedIteratorResultChunk","resolveIteratorResultChunk","create","reject","initializingChunk","initializingChunkBlockedModel","prevChunk","prevBlocked","rootReference","rawModel","parse","reviveModel","parentObj","parentKey","parseModelString","obj","getChunk","getOutlinedModel","createModel","loadServerReference$1","parentChunk","parentObject","serverReference","_bundlerConfig","_ref","fn","createModelResolver","createModelReject","_temporaryReferences","createTemporaryReference","createMap","createSet","formPrefix","_prefix","_formData","entryKey","append","extractIterator","NaN","BigInt","parseTypedArray","parseReadableStream","parseAsyncIterable","deps","_chunks","_closed","_closedReason","cyclic","blocked","constructor","bytesPerElement","arrayBuffer","resolveStream","controller","getAll","start","c","previousBlockedChunk","v","e","chunk$27","blockedChunk","closed","nextWriteIndex","$jscomp$compprop2","nextReadIndex","createIterator","arg","createResponse","formFieldPrefix","backingFormData","loadServerReference","decodeBoundActionMetaData","body","serverManifest","exports","formData","action","actionResult","metaData","referenceId","webpackMap","form","exportName","propertyIsEnumerable","setTimeout","signal","listener","removeEventListener","addEventListener","pull","highWaterMark","ACTION_HEADER","DYNAMIC_ERROR_CODE","DynamicServerError","isDynamicServerError","StaticGenBailoutError","NEXT_STATIC_GEN_BAILOUT","ALLOWED_CODES","values","HTTPAccessErrorStatus","NOT_FOUND","FORBIDDEN","UNAUTHORIZED","isHTTPAccessFallbackError","prefix","httpStatus","HTTP_ERROR_FALLBACK_ERROR_CODE","RedirectStatusCode","isRedirectError","errorCode","statusCode","at","REDIRECT_ERROR_CODE","BAILOUT_TO_CSR","getRedirectStatusCodeFromError","addPathPrefix","parsePath","addPathSuffix","suffix","getNextPathnameInfo","basePath","i18n","trailingSlash","nextConfig","info","pathHasPrefix","removePathPrefix","withoutPrefix","pathnameNoDataPrefix","paths","buildId","i18nProvider","analyze","normalizeLocalePath","locales","locale","detectedLocale","getHostname","parsed","detectDomainLocale","domainItems","domainHostname","domain","defaultLocale","addLocale","ignorePrefix","lower","pathnameParts","InvariantError","isThenable","module","reduce","isGroupSegment","normalizeRscURL","hashIndex","queryIndex","hasQuery","substring"],"sourceRoot":"","ignoreList":[2,4,5,6,8,9,10,11,12,13,14,15,16,20,21,22,26,27,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,194,195,196,197,199,200,201,202,203,204,205,206,208,209,218,219,220,221,222,223,224,235,236,237,238,239,240,241,242,243]}